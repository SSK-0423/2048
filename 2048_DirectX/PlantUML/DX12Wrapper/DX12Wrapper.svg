<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1685px" preserveAspectRatio="none" style="width:12546px;height:1685px;background:#FFFFFF;" version="1.1" viewBox="0 0 12546 1685" width="12546px" zoomAndPan="magnify"><defs/><g><!--MD5=[c97e9a9cfa9deabdd062feba0846bb18]
cluster DX12Wrapper--><g id="cluster_DX12Wrapper"><path d="M8.5,6 L104.5,6 A3.75,3.75 0 0 1 107,8.5 L114,29.6094 L12536.5,29.6094 A2.5,2.5 0 0 1 12539,32.1094 L12539,1675.5 A2.5,2.5 0 0 1 12536.5,1678 L8.5,1678 A2.5,2.5 0 0 1 6,1675.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="114" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="95" x="10" y="22.5332">DX12Wrapper</text></g><!--MD5=[015cff356b3184d62b83d7c002a5d996]
class DX12Wrapper.ConstantBuffer--><g id="elem_DX12Wrapper.ConstantBuffer"><rect codeLine="9" fill="#F1F1F1" height="259.3125" id="DX12Wrapper.ConstantBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="553" x="9171.5" y="315"/><ellipse cx="9396.25" cy="331" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9399.9375,332.2031 Q9399.6875,335.6875 9398.5469,336.8438 Q9397.5156,337.8594 9396.1094,337.8594 Q9394.7031,337.8594 9393.6719,336.8438 Q9391.9219,335.0781 9391.9219,331.4063 Q9391.9219,327.1563 9393.7969,325.25 Q9394.8438,324.2344 9396.1719,324.2344 Q9397.5781,324.2344 9398.4219,325.0469 Q9399.9063,326.5625 9399.8281,329.4375 L9397.7031,329.4375 Q9397.625,327.1094 9396.9844,326.4688 Q9396.7031,326.1719 9396.1719,326.1719 Q9395.7188,326.1719 9395.3594,326.5469 Q9394.125,327.7656 9394.125,331.2813 Q9394.125,334.3281 9395.1719,335.3438 Q9395.5938,335.7813 9396.1094,335.7813 Q9396.5625,335.7813 9397,335.3438 Q9397.5625,334.7969 9397.6406,332.2031 L9399.9375,332.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="9416.75" y="336.7285">ConstantBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="9172.5" x2="9723.5" y1="347" y2="347"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9179.5" y="358.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="9191.5" y="365.5332">_mappedData : BYTE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9179.5" y="375.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="9191.5" y="383.1426">_constantBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9179.5" y="393.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="9191.5" y="400.752">_bufferSize : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="9172.5" x2="9723.5" y1="407.8281" y2="407.8281"/><ellipse cx="9182.5" cy="422.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="9191.5" y="426.3613">ConstantBuffer()</text><ellipse cx="9182.5" cy="439.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="9191.5" y="443.9707">~ConstantBuffer()</text><ellipse cx="9182.5" cy="457.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="9191.5" y="461.5801">GetGPUVirtualAddress() : D3D12_GPU_VIRTUAL_ADDRESS</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9179.5" y="471.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="519" x="9191.5" y="479.1895">CreateConstantBuffer(ID3D12Device&amp; device, const UINT&amp; bufferSize) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9179.5" y="489.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="422" x="9191.5" y="496.7988">MapConstantBuffer(void* data, const UINT&amp; bufferSize) : HRESULT</text><ellipse cx="9182.5" cy="510.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="9191.5" y="514.4082">GetBuffer() : ID3D12Resource&amp;</text><ellipse cx="9182.5" cy="527.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="9191.5" y="532.0176">GetBufferSize() : UINT&amp;</text><ellipse cx="9182.5" cy="545.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="527" x="9191.5" y="549.627">Create(ID3D12Device&amp; device, void* data, const UINT&amp; bufferSize) : Utility::RESULT</text><ellipse cx="9182.5" cy="563.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="9191.5" y="567.2363">UpdateData(void* data) : void</text></g><!--MD5=[bcffbf7b73ddbd0500447a0451b8a00a]
class DX12Wrapper.CubeRenderTarget--><g id="elem_DX12Wrapper.CubeRenderTarget"><rect codeLine="24" fill="#F1F1F1" height="312.1406" id="DX12Wrapper.CubeRenderTarget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1205" x="6335.5" y="288.5"/><ellipse cx="6872.25" cy="304.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6875.9375,305.7031 Q6875.6875,309.1875 6874.5469,310.3438 Q6873.5156,311.3594 6872.1094,311.3594 Q6870.7031,311.3594 6869.6719,310.3438 Q6867.9219,308.5781 6867.9219,304.9063 Q6867.9219,300.6563 6869.7969,298.75 Q6870.8438,297.7344 6872.1719,297.7344 Q6873.5781,297.7344 6874.4219,298.5469 Q6875.9063,300.0625 6875.8281,302.9375 L6873.7031,302.9375 Q6873.625,300.6094 6872.9844,299.9688 Q6872.7031,299.6719 6872.1719,299.6719 Q6871.7188,299.6719 6871.3594,300.0469 Q6870.125,301.2656 6870.125,304.7813 Q6870.125,307.8281 6871.1719,308.8438 Q6871.5938,309.2813 6872.1094,309.2813 Q6872.5625,309.2813 6873,308.8438 Q6873.5625,308.2969 6873.6406,305.7031 L6875.9375,305.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="6892.75" y="310.2285">CubeRenderTarget</text><line style="stroke:#181818;stroke-width:0.5;" x1="6336.5" x2="7539.5" y1="320.5" y2="320.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="331.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="6355.5" y="339.0332">_renderTargetData : CubeRenderTargetData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="349.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="6355.5" y="356.6426">_depthStencilBuffer : DepthStencilBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="367.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="6355.5" y="374.252">_textureHeap : DescriptorHeapCBV_SRV_UAV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="384.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="6355.5" y="391.8613">_dsvHeap : DescriptorHeapDSV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="402.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="6355.5" y="409.4707">_rtvHeap : DescriptorHeapRTV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="419.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="6355.5" y="427.0801">_renderTargetBuffer : RenderTargetBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="437.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="6355.5" y="444.6895">_depthStencilTexture : Texture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6343.5" y="455.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="6355.5" y="462.2988">_renderTargetTexture : Texture</text><line style="stroke:#181818;stroke-width:0.5;" x1="6336.5" x2="7539.5" y1="469.375" y2="469.375"/><ellipse cx="6346.5" cy="483.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="6355.5" y="487.9082">GetDepthStencilTexture() : Texture&amp;</text><ellipse cx="6346.5" cy="501.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="6355.5" y="505.5176">GetRenderTargetTexture() : Texture&amp;</text><ellipse cx="6346.5" cy="518.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="592" x="6355.5" y="523.127">Create(ID3D12Device&amp; device, CubeRenderTargetData&amp; renderTargetData) : Utility::RESULT</text><ellipse cx="6346.5" cy="536.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1179" x="6355.5" y="540.7363">BeginMultiRendering(CubeRenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="6346.5" cy="554.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="785" x="6355.5" y="558.3457">BeginRendering(RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="6346.5" cy="571.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="750" x="6355.5" y="575.9551">EndMultiRendering(CubeRenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext) : void</text><ellipse cx="6346.5" cy="589.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="6355.5" y="593.5645">EndRendering(RenderingContext&amp; renderContext) : void</text></g><!--MD5=[9532d3fded6d24aba1a3ab0a6b9b9e95]
class DX12Wrapper.DepthStencilBuffer--><g id="elem_DX12Wrapper.DepthStencilBuffer"><rect codeLine="42" fill="#F1F1F1" height="171.2656" id="DX12Wrapper.DepthStencilBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="565" x="6503.5" y="1092"/><ellipse cx="6722.75" cy="1108" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6726.4375,1109.2031 Q6726.1875,1112.6875 6725.0469,1113.8438 Q6724.0156,1114.8594 6722.6094,1114.8594 Q6721.2031,1114.8594 6720.1719,1113.8438 Q6718.4219,1112.0781 6718.4219,1108.4063 Q6718.4219,1104.1563 6720.2969,1102.25 Q6721.3438,1101.2344 6722.6719,1101.2344 Q6724.0781,1101.2344 6724.9219,1102.0469 Q6726.4063,1103.5625 6726.3281,1106.4375 L6724.2031,1106.4375 Q6724.125,1104.1094 6723.4844,1103.4688 Q6723.2031,1103.1719 6722.6719,1103.1719 Q6722.2188,1103.1719 6721.8594,1103.5469 Q6720.625,1104.7656 6720.625,1108.2813 Q6720.625,1111.3281 6721.6719,1112.3438 Q6722.0938,1112.7813 6722.6094,1112.7813 Q6723.0625,1112.7813 6723.5,1112.3438 Q6724.0625,1111.7969 6724.1406,1109.2031 L6726.4375,1109.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="6743.25" y="1113.7285">DepthStencilBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="6504.5" x2="7067.5" y1="1124" y2="1124"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6511.5" y="1135.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="6523.5" y="1142.5332">_depthStencilBufferData : DepthStencilBufferData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6511.5" y="1152.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="6523.5" y="1160.1426">_dsvBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6504.5" x2="7067.5" y1="1167.2188" y2="1167.2188"/><ellipse cx="6514.5" cy="1181.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="6523.5" y="1185.752">DepthStencilBuffer()</text><ellipse cx="6514.5" cy="1199.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="6523.5" y="1203.3613">~DepthStencilBuffer()</text><ellipse cx="6514.5" cy="1216.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="6523.5" y="1220.9707">GetDepthStencilBufferData() : DepthStencilBufferData</text><ellipse cx="6514.5" cy="1234.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="6523.5" y="1238.5801">GetBuffer() : ID3D12Resource&amp;</text><ellipse cx="6514.5" cy="1251.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="6523.5" y="1256.1895">Create(ID3D12Device&amp; device, const DepthStencilBufferData&amp; data) : Utility::RESULT</text></g><!--MD5=[4b82e7ad6d2a27158818db97925d4934]
class DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="elem_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><rect codeLine="52" fill="#F1F1F1" height="541.0625" id="DX12Wrapper.DescriptorHeapCBV_SRV_UAV" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="936" x="3466" y="907"/><ellipse cx="3831.25" cy="923" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3834.9375,924.2031 Q3834.6875,927.6875 3833.5469,928.8438 Q3832.5156,929.8594 3831.1094,929.8594 Q3829.7031,929.8594 3828.6719,928.8438 Q3826.9219,927.0781 3826.9219,923.4063 Q3826.9219,919.1563 3828.7969,917.25 Q3829.8438,916.2344 3831.1719,916.2344 Q3832.5781,916.2344 3833.4219,917.0469 Q3834.9063,918.5625 3834.8281,921.4375 L3832.7031,921.4375 Q3832.625,919.1094 3831.9844,918.4688 Q3831.7031,918.1719 3831.1719,918.1719 Q3830.7188,918.1719 3830.3594,918.5469 Q3829.125,919.7656 3829.125,923.2813 Q3829.125,926.3281 3830.1719,927.3438 Q3830.5938,927.7813 3831.1094,927.7813 Q3831.5625,927.7813 3832,927.3438 Q3832.5625,926.7969 3832.6406,924.2031 L3834.9375,924.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="3851.75" y="928.7285">DescriptorHeapCBV_SRV_UAV</text><line style="stroke:#181818;stroke-width:0.5;" x1="3467" x2="4401" y1="939" y2="939"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="950.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="428" x="3486" y="957.5332">_descriptorHeap : Microsoft::WRL::ComPtr&lt;ID3D12DescriptorHeap&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="967.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="3486" y="975.1426">_handleIncrimentSize : SIZE_T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="985.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="3486" y="992.752">_registedCBVNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="1003.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="3486" y="1010.3613">_registedSRVNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="1020.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="3486" y="1027.9707">_registedUAVNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="1038.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="351" x="3486" y="1045.5801">_MAX_CBV_DESCRIPTOR_NUM : static constexpr UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="1055.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="351" x="3486" y="1063.1895">_MAX_SRV_DESCRIPTOR_NUM : static constexpr UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="1073.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="350" x="3486" y="1080.7988">_MAX_UAV_DESCRIPTOR_NUM : static constexpr UINT</text><ellipse cx="3477" cy="1094.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="242" x="3486" y="1098.4082">NEXT_REGISTER : static constexpr int</text><line style="stroke:#181818;stroke-width:0.5;" x1="3467" x2="4401" y1="1105.4844" y2="1105.4844"/><ellipse cx="3477" cy="1119.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="3486" y="1124.0176">DescriptorHeapCBV_SRV_UAV()</text><ellipse cx="3477" cy="1137.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="3486" y="1141.627">~DescriptorHeapCBV_SRV_UAV()</text><ellipse cx="3477" cy="1155.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377" x="3486" y="1159.2363">GetGPUHandle() : CD3DX12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="3477" cy="1172.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507" x="3486" y="1176.8457">GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE</text><ellipse cx="3477" cy="1190.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="509" x="3486" y="1194.4551">GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="3477" cy="1207.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="537" x="3486" y="1212.0645">GetGPUDescriptorHandleForHeapStartCBV() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="3477" cy="1225.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="537" x="3486" y="1229.6738">GetGPUDescriptorHandleForHeapStartSRV() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="3477" cy="1243.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="536" x="3486" y="1247.2832">GetGPUDescriptorHandleForHeapStartUAV() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="3477" cy="1260.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="3486" y="1264.8926">GetSRVHandle(int index) : D3D12_GPU_DESCRIPTOR_HANDLE</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3474" y="1275.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="3486" y="1282.502">CreateDescriptorHeap(ID3D12Device&amp; device) : HRESULT</text><ellipse cx="3477" cy="1295.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="3486" y="1300.1113">GetDescriptorHeapAddress() : ID3D12DescriptorHeap*</text><ellipse cx="3477" cy="1313.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="3486" y="1317.7207">GetHandleIncrimentSize() : SIZE_T</text><ellipse cx="3477" cy="1331.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="3486" y="1335.3301">Create(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="3477" cy="1348.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="3486" y="1352.9395">IsRegistedConstantBuffer() : bool</text><ellipse cx="3477" cy="1366.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="3486" y="1370.5488">IsRegistedShaderResource() : bool</text><ellipse cx="3477" cy="1383.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="3486" y="1388.1582">IsRegistedUnorderedAccessResource() : bool</text><ellipse cx="3477" cy="1401.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="674" x="3486" y="1405.7676">RegistConstantBuffer(ID3D12Device&amp; device, ConstantBuffer&amp; constantBuffer, const int&amp; registerNo) : void</text><ellipse cx="3477" cy="1419.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="809" x="3486" y="1423.377">RegistShaderResource(ID3D12Device&amp; device, Texture&amp; texture, ShaderResourceViewDesc&amp; desc, const int&amp; registerNo) : void</text><ellipse cx="3477" cy="1436.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="910" x="3486" y="1440.9863">RegistUnorderedAccessResource(ID3D12Device&amp; device, UnorderedAccessResource&amp; unorderedAccessResource, const int&amp; registerNo) : void</text></g><!--MD5=[2b8b5e69ebd69c77afae1ef0c58c98ec]
class DX12Wrapper.DescriptorHeapDSV--><g id="elem_DX12Wrapper.DescriptorHeapDSV"><rect codeLine="83" fill="#F1F1F1" height="241.7031" id="DX12Wrapper.DescriptorHeapDSV" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="533" x="4437.5" y="1056.5"/><ellipse cx="4636.75" cy="1072.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4640.4375,1073.7031 Q4640.1875,1077.1875 4639.0469,1078.3438 Q4638.0156,1079.3594 4636.6094,1079.3594 Q4635.2031,1079.3594 4634.1719,1078.3438 Q4632.4219,1076.5781 4632.4219,1072.9063 Q4632.4219,1068.6563 4634.2969,1066.75 Q4635.3438,1065.7344 4636.6719,1065.7344 Q4638.0781,1065.7344 4638.9219,1066.5469 Q4640.4063,1068.0625 4640.3281,1070.9375 L4638.2031,1070.9375 Q4638.125,1068.6094 4637.4844,1067.9688 Q4637.2031,1067.6719 4636.6719,1067.6719 Q4636.2188,1067.6719 4635.8594,1068.0469 Q4634.625,1069.2656 4634.625,1072.7813 Q4634.625,1075.8281 4635.6719,1076.8438 Q4636.0938,1077.2813 4636.6094,1077.2813 Q4637.0625,1077.2813 4637.5,1076.8438 Q4638.0625,1076.2969 4638.1406,1073.7031 L4640.4375,1073.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="4657.25" y="1078.2285">DescriptorHeapDSV</text><line style="stroke:#181818;stroke-width:0.5;" x1="4438.5" x2="4969.5" y1="1088.5" y2="1088.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4445.5" y="1099.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="4457.5" y="1107.0332">_dsvHeap : Microsoft::WRL::ComPtr&lt;ID3D12DescriptorHeap&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4445.5" y="1117.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="4457.5" y="1124.6426">_handleIncrimentSize : SIZE_T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4445.5" y="1135.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="4457.5" y="1142.252">_registedDSVNum : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="4438.5" x2="4969.5" y1="1149.3281" y2="1149.3281"/><ellipse cx="4448.5" cy="1163.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="4457.5" y="1167.8613">DescriptorHeapDSV()</text><ellipse cx="4448.5" cy="1181.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="4457.5" y="1185.4707">~DescriptorHeapDSV()</text><ellipse cx="4448.5" cy="1198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507" x="4457.5" y="1203.0801">GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4445.5" y="1213.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="4457.5" y="1220.6895">CreateDescriptorHeap(ID3D12Device&amp; device) : HRESULT</text><ellipse cx="4448.5" cy="1234.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="4457.5" y="1238.2988">GetHandleIncrimentSize() : SIZE_T</text><ellipse cx="4448.5" cy="1251.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="4457.5" y="1255.9082">GetRegistedDescriptorNum() : UINT</text><ellipse cx="4448.5" cy="1269.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="4457.5" y="1273.5176">Create(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="4448.5" cy="1286.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="473" x="4457.5" y="1291.127">RegistDescriptor(ID3D12Device&amp; device, DepthStencilBuffer&amp; buffer) : void</text></g><!--MD5=[fd902796c8f281cc91c37326deda5cd0]
class DX12Wrapper.DescriptorHeapRTV--><g id="elem_DX12Wrapper.DescriptorHeapRTV"><rect codeLine="97" fill="#F1F1F1" height="312.1406" id="DX12Wrapper.DescriptorHeapRTV" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="769" x="5005.5" y="1021.5"/><ellipse cx="5322.75" cy="1037.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5326.4375,1038.7031 Q5326.1875,1042.1875 5325.0469,1043.3438 Q5324.0156,1044.3594 5322.6094,1044.3594 Q5321.2031,1044.3594 5320.1719,1043.3438 Q5318.4219,1041.5781 5318.4219,1037.9063 Q5318.4219,1033.6563 5320.2969,1031.75 Q5321.3438,1030.7344 5322.6719,1030.7344 Q5324.0781,1030.7344 5324.9219,1031.5469 Q5326.4063,1033.0625 5326.3281,1035.9375 L5324.2031,1035.9375 Q5324.125,1033.6094 5323.4844,1032.9688 Q5323.2031,1032.6719 5322.6719,1032.6719 Q5322.2188,1032.6719 5321.8594,1033.0469 Q5320.625,1034.2656 5320.625,1037.7813 Q5320.625,1040.8281 5321.6719,1041.8438 Q5322.0938,1042.2813 5322.6094,1042.2813 Q5323.0625,1042.2813 5323.5,1041.8438 Q5324.0625,1041.2969 5324.1406,1038.7031 L5326.4375,1038.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="5343.25" y="1043.2285">DescriptorHeapRTV</text><line style="stroke:#181818;stroke-width:0.5;" x1="5006.5" x2="5773.5" y1="1053.5" y2="1053.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5013.5" y="1064.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="5025.5" y="1072.0332">_rtvHeap : Microsoft::WRL::ComPtr&lt;ID3D12DescriptorHeap&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5013.5" y="1082.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="5025.5" y="1089.6426">_handleIncrimentSize : SIZE_T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5013.5" y="1100.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="5025.5" y="1107.252">_nextHandleLocation : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5013.5" y="1117.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="5025.5" y="1124.8613">_registedRTVNum : UINT</text><ellipse cx="5016.5" cy="1138.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="291" x="5025.5" y="1142.4707">MAXDESCRIPTORNUM : static constexpr UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="5006.5" x2="5773.5" y1="1149.5469" y2="1149.5469"/><ellipse cx="5016.5" cy="1163.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="5025.5" y="1168.0801">DescriptorHeapRTV()</text><ellipse cx="5016.5" cy="1181.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="5025.5" y="1185.6895">~DescriptorHeapRTV()</text><ellipse cx="5016.5" cy="1199.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507" x="5025.5" y="1203.2988">GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE</text><ellipse cx="5016.5" cy="1216.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="5025.5" y="1220.9082">GetNextCPUDescriptorHandle() : D3D12_CPU_DESCRIPTOR_HANDLE</text><ellipse cx="5016.5" cy="1234.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="509" x="5025.5" y="1238.5176">GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5013.5" y="1248.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="5025.5" y="1256.127">CreateDescriptorHeap(ID3D12Device&amp; device) : HRESULT</text><ellipse cx="5016.5" cy="1269.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="5025.5" y="1273.7363">GetHandleIncrimentSize() : SIZE_T</text><ellipse cx="5016.5" cy="1287.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="5025.5" y="1291.3457">GetRegistedDescriptorNum() : UINT</text><ellipse cx="5016.5" cy="1304.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="5025.5" y="1308.9551">Create(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="5016.5" cy="1322.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="743" x="5025.5" y="1326.5645">RegistDescriptor(ID3D12Device&amp; device, RenderTargetBuffer&amp; buffer, DXGI_FORMAT format, bool isCubeMap) : void</text></g><!--MD5=[0033b9a06f99d825ede1cbe18adf6982]
class DX12Wrapper.Dx12GraphicsEngine--><g id="elem_DX12Wrapper.Dx12GraphicsEngine"><rect codeLine="115" fill="#F1F1F1" height="805.2031" id="DX12Wrapper.Dx12GraphicsEngine" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1084" x="4010" y="42"/><ellipse cx="4481.25" cy="58" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4484.9375,59.2031 Q4484.6875,62.6875 4483.5469,63.8438 Q4482.5156,64.8594 4481.1094,64.8594 Q4479.7031,64.8594 4478.6719,63.8438 Q4476.9219,62.0781 4476.9219,58.4063 Q4476.9219,54.1563 4478.7969,52.25 Q4479.8438,51.2344 4481.1719,51.2344 Q4482.5781,51.2344 4483.4219,52.0469 Q4484.9063,53.5625 4484.8281,56.4375 L4482.7031,56.4375 Q4482.625,54.1094 4481.9844,53.4688 Q4481.7031,53.1719 4481.1719,53.1719 Q4480.7188,53.1719 4480.3594,53.5469 Q4479.125,54.7656 4479.125,58.2813 Q4479.125,61.3281 4480.1719,62.3438 Q4480.5938,62.7813 4481.1094,62.7813 Q4481.5625,62.7813 4482,62.3438 Q4482.5625,61.7969 4482.6406,59.2031 L4484.9375,59.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="4501.75" y="63.7285">Dx12GraphicsEngine</text><line style="stroke:#181818;stroke-width:0.5;" x1="4011" x2="5093" y1="74" y2="74"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="85.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="4030" y="92.5332">m_scissorRect : CD3DX12_RECT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="102.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="4030" y="110.1426">m_viewport : CD3DX12_VIEWPORT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="120.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="4030" y="127.752">_depthStencilBuffer : DX12Wrapper::DepthStencilBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="138.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="4030" y="145.3613">depthStencilBufferData : DX12Wrapper::DepthStencilBufferData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="155.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="4030" y="162.9707">m_imguiHeap : DX12Wrapper::DescriptorHeapCBV_SRV_UAV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="173.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="4030" y="180.5801">_dsvHeap : DX12Wrapper::DescriptorHeapDSV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="190.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="4030" y="198.1895">_frameHeap : DX12Wrapper::DescriptorHeapRTV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="208.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="4030" y="215.7988">_frameBuffers : DX12Wrapper::RenderTargetBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="226.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="4030" y="233.4082">m_renderContext : DX12Wrapper::RenderingContext</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="243.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="4030" y="251.0176">_hwnd : HWND</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="261.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="4030" y="268.627">_cmdAllocator : Microsoft::WRL::ComPtr&lt;ID3D12CommandAllocator&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="279.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="4030" y="286.2363">_cmdQueue : Microsoft::WRL::ComPtr&lt;ID3D12CommandQueue&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="296.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="4030" y="303.8457">_device : Microsoft::WRL::ComPtr&lt;ID3D12Device&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="314.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="4030" y="321.4551">_fence : Microsoft::WRL::ComPtr&lt;ID3D12Fence&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="331.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425" x="4030" y="339.0645">_cmdList : Microsoft::WRL::ComPtr&lt;ID3D12GraphicsCommandList&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="349.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="4030" y="356.6738">_dxgiFactory : Microsoft::WRL::ComPtr&lt;IDXGIFactory4&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="367.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="4030" y="374.2832">_swapchain : Microsoft::WRL::ComPtr&lt;IDXGISwapChain3&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="384.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="4030" y="391.8926">_fenceVal : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="402.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="4030" y="409.502">_windowHeight : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="419.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="4030" y="427.1113">_windowWidth : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="437.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="263" x="4030" y="444.7207">DOUBLE_BUFFER : static constexpr UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="455.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="406" x="4030" y="462.3301">m_graphicsMemory : std::unique_ptr&lt;DirectX::GraphicsMemory&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4011" x2="5093" y1="469.4063" y2="469.4063"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="480.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="4030" y="487.9395">Dx12GraphicsEngine()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="498.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="4030" y="505.5488">~Dx12GraphicsEngine()</text><ellipse cx="4021" cy="518.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="4030" y="523.1582">GetViewport() : CD3DX12_VIEWPORT&amp;</text><ellipse cx="4021" cy="536.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="454" x="4030" y="540.7676">GetFrameBufferDescriptorHeap() : DX12Wrapper::DescriptorHeapRTV&amp;</text><ellipse cx="4021" cy="554.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="4030" y="558.377">GetRenderingContext() : DX12Wrapper::RenderingContext&amp;</text><ellipse cx="4021" cy="571.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="217" x="4030" y="575.9863">Instance() : Dx12GraphicsEngine&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="586.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="4030" y="593.5957">CreateCommandX() : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="603.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="4030" y="611.2051">CreateDeviceAndDXGIFactory() : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="621.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="4030" y="628.8145">CreateFence() : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="639.1953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1058" x="4030" y="646.4238">CreateSwapChain(const HWND&amp; hwnd, const UINT&amp; windowWidth, const UINT&amp; windowHeight, const Microsoft::WRL::ComPtr&lt;IDXGIFactory4&gt;&amp; dxgiFactory) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="656.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="4030" y="664.0332">EnableDebugLayer() : HRESULT</text><ellipse cx="4021" cy="677.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="4030" y="681.6426">CmdAllocator() : ID3D12CommandAllocator&amp;</text><ellipse cx="4021" cy="695.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="4030" y="699.252">CmdQueue() : ID3D12CommandQueue&amp;</text><ellipse cx="4021" cy="712.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="4030" y="716.8613">Device() : ID3D12Device&amp;</text><ellipse cx="4021" cy="730.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="4030" y="734.4707">CmdList() : ID3D12GraphicsCommandList&amp;</text><ellipse cx="4021" cy="747.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="4030" y="752.0801">SwapChain() : IDXGISwapChain3&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4018" y="762.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="4030" y="769.6895">CreateFrameRenderTarget() : Utility::RESULT</text><ellipse cx="4021" cy="783.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="604" x="4030" y="787.2988">Init(const HWND&amp; hwnd, const UINT&amp; windowWidth, const UINT&amp; windowHeight) : Utility::RESULT</text><ellipse cx="4021" cy="800.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="4030" y="804.9082">BeginDraw() : void</text><ellipse cx="4021" cy="818.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="4030" y="822.5176">EndDraw() : void</text><ellipse cx="4021" cy="835.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="4030" y="840.127">SetFrameRenderTarget(const CD3DX12_VIEWPORT&amp; viewport, const CD3DX12_RECT&amp; scissorRect) : void</text></g><!--MD5=[433afccaa822407cbb6c3aa4fea4e1f2]
class DX12Wrapper.FontRenderer--><g id="elem_DX12Wrapper.FontRenderer"><rect codeLine="161" fill="#F1F1F1" height="224.0938" id="DX12Wrapper.FontRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="859" x="3115.5" y="332.5"/><ellipse cx="3496.25" cy="348.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3499.9375,349.7031 Q3499.6875,353.1875 3498.5469,354.3438 Q3497.5156,355.3594 3496.1094,355.3594 Q3494.7031,355.3594 3493.6719,354.3438 Q3491.9219,352.5781 3491.9219,348.9063 Q3491.9219,344.6563 3493.7969,342.75 Q3494.8438,341.7344 3496.1719,341.7344 Q3497.5781,341.7344 3498.4219,342.5469 Q3499.9063,344.0625 3499.8281,346.9375 L3497.7031,346.9375 Q3497.625,344.6094 3496.9844,343.9688 Q3496.7031,343.6719 3496.1719,343.6719 Q3495.7188,343.6719 3495.3594,344.0469 Q3494.125,345.2656 3494.125,348.7813 Q3494.125,351.8281 3495.1719,352.8438 Q3495.5938,353.2813 3496.1094,353.2813 Q3496.5625,353.2813 3497,352.8438 Q3497.5625,352.2969 3497.6406,349.7031 L3499.9375,349.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="3516.75" y="354.2285">FontRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3116.5" x2="3973.5" y1="364.5" y2="364.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3123.5" y="375.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="3135.5" y="383.0332">m_fence : Microsoft::WRL::ComPtr&lt;ID3D12Fence&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3123.5" y="393.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="3135.5" y="400.6426">m_fenceVal : UINT64</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3123.5" y="411.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="3135.5" y="418.252">m_spriteBatch : std::unique_ptr&lt;DirectX::SpriteBatch&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3123.5" y="428.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="3135.5" y="435.8613">m_spriteFont : std::unique_ptr&lt;DirectX::SpriteFont&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3123.5" y="446.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432" x="3135.5" y="453.4707">m_fontHeap : std::unique_ptr&lt;class DescriptorHeapCBV_SRV_UAV&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="3116.5" x2="3973.5" y1="460.5469" y2="460.5469"/><ellipse cx="3126.5" cy="474.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="3135.5" y="479.0801">FontRenderer()</text><ellipse cx="3126.5" cy="492.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="3135.5" y="496.6895">~FontRenderer()</text><ellipse cx="3126.5" cy="510.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="173" x="3135.5" y="514.2988">Instance() : FontRenderer&amp;</text><ellipse cx="3126.5" cy="527.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="3135.5" y="531.9082">Init(const std::wstring&amp; fontPath) : Utility::RESULT</text><ellipse cx="3126.5" cy="545.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="833" x="3135.5" y="549.5176">DrawString(const std::wstring&amp; text, const DirectX::XMFLOAT2&amp; pos, const float&amp; scale, const DirectX::XMVECTORF32&amp; color) : void</text></g><!--MD5=[7fa1be801d5ad1629bd1f128a3f53531]
class DX12Wrapper.GraphicsPipelineState--><g id="elem_DX12Wrapper.GraphicsPipelineState"><rect codeLine="174" fill="#F1F1F1" height="171.2656" id="DX12Wrapper.GraphicsPipelineState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="891" x="9759.5" y="359"/><ellipse cx="10130.75" cy="375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10134.4375,376.2031 Q10134.1875,379.6875 10133.0469,380.8438 Q10132.0156,381.8594 10130.6094,381.8594 Q10129.2031,381.8594 10128.1719,380.8438 Q10126.4219,379.0781 10126.4219,375.4063 Q10126.4219,371.1563 10128.2969,369.25 Q10129.3438,368.2344 10130.6719,368.2344 Q10132.0781,368.2344 10132.9219,369.0469 Q10134.4063,370.5625 10134.3281,373.4375 L10132.2031,373.4375 Q10132.125,371.1094 10131.4844,370.4688 Q10131.2031,370.1719 10130.6719,370.1719 Q10130.2188,370.1719 10129.8594,370.5469 Q10128.625,371.7656 10128.625,375.2813 Q10128.625,378.3281 10129.6719,379.3438 Q10130.0938,379.7813 10130.6094,379.7813 Q10131.0625,379.7813 10131.5,379.3438 Q10132.0625,378.7969 10132.1406,376.2031 L10134.4375,376.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="10151.25" y="380.7285">GraphicsPipelineState</text><line style="stroke:#181818;stroke-width:0.5;" x1="9760.5" x2="10649.5" y1="391" y2="391"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9767.5" y="402.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="422" x="9779.5" y="409.5332">_pipelineStateDesc : D3D12_GRAPHICS_PIPELINE_STATE_DESC</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9767.5" y="419.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="9779.5" y="427.1426">_pipelineState : Microsoft::WRL::ComPtr&lt;ID3D12PipelineState&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="9760.5" x2="10649.5" y1="434.2188" y2="434.2188"/><ellipse cx="9770.5" cy="448.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="9779.5" y="452.752">GraphicsPipelineState()</text><ellipse cx="9770.5" cy="466.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="9779.5" y="470.3613">~GraphicsPipelineState()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9767.5" y="480.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="865" x="9779.5" y="487.9707">CreateGraphicsPipelineState(ID3D12Device&amp; device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC&amp; piplineStateDesc) : HRESULT</text><ellipse cx="9770.5" cy="501.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="9779.5" y="505.5801">GetPipelineState() : ID3D12PipelineState&amp;</text><ellipse cx="9770.5" cy="518.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="757" x="9779.5" y="523.1895">Create(ID3D12Device&amp; device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC&amp; piplineStateDesc) : Utility::RESULT</text></g><!--MD5=[5d864dc34a81646399c444beaf06a9d1]
class DX12Wrapper.IndexBuffer--><g id="elem_DX12Wrapper.IndexBuffer"><rect codeLine="184" fill="#F1F1F1" height="241.7031" id="DX12Wrapper.IndexBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="627" x="10685.5" y="323.5"/><ellipse cx="10959.25" cy="339.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10962.9375,340.7031 Q10962.6875,344.1875 10961.5469,345.3438 Q10960.5156,346.3594 10959.1094,346.3594 Q10957.7031,346.3594 10956.6719,345.3438 Q10954.9219,343.5781 10954.9219,339.9063 Q10954.9219,335.6563 10956.7969,333.75 Q10957.8438,332.7344 10959.1719,332.7344 Q10960.5781,332.7344 10961.4219,333.5469 Q10962.9063,335.0625 10962.8281,337.9375 L10960.7031,337.9375 Q10960.625,335.6094 10959.9844,334.9688 Q10959.7031,334.6719 10959.1719,334.6719 Q10958.7188,334.6719 10958.3594,335.0469 Q10957.125,336.2656 10957.125,339.7813 Q10957.125,342.8281 10958.1719,343.8438 Q10958.5938,344.2813 10959.1094,344.2813 Q10959.5625,344.2813 10960,343.8438 Q10960.5625,343.2969 10960.6406,340.7031 L10962.9375,340.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="10979.75" y="345.2285">IndexBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="10686.5" x2="11311.5" y1="355.5" y2="355.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10693.5" y="366.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="10705.5" y="374.0332">_indexBufferView : D3D12_INDEX_BUFFER_VIEW</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10693.5" y="384.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="10705.5" y="391.6426">_indexBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10693.5" y="402.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="10705.5" y="409.252">_indexNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10693.5" y="419.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="10705.5" y="426.8613">_indexMap : UINT*</text><line style="stroke:#181818;stroke-width:0.5;" x1="10686.5" x2="11311.5" y1="433.9375" y2="433.9375"/><ellipse cx="10696.5" cy="448.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="10705.5" y="452.4707">IndexBuffer()</text><ellipse cx="10696.5" cy="465.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="10705.5" y="470.0801">~IndexBuffer()</text><ellipse cx="10696.5" cy="483.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="10705.5" y="487.6895">GetView() : D3D12_INDEX_BUFFER_VIEW&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10693.5" y="498.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="601" x="10705.5" y="505.2988">CreateIndexBufferAndView(ID3D12Device&amp; device, const std::vector&lt;UINT&gt;&amp; index) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10693.5" y="515.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="10705.5" y="522.9082">MapIndexBuffer(const std::vector&lt;UINT&gt;&amp; index) : HRESULT</text><ellipse cx="10696.5" cy="536.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="10705.5" y="540.5176">GetIndexNum() : UINT {query}</text><ellipse cx="10696.5" cy="553.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="508" x="10705.5" y="558.127">Create(ID3D12Device&amp; device, const std::vector&lt;UINT&gt;&amp; index) : Utility::RESULT</text></g><!--MD5=[03ff3e78d870a87bd9885d7b58f9888e]
class DX12Wrapper.RenderTarget--><g id="elem_DX12Wrapper.RenderTarget"><rect codeLine="198" fill="#F1F1F1" height="312.1406" id="DX12Wrapper.RenderTarget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1171" x="5129.5" y="288.5"/><ellipse cx="5666.25" cy="304.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5669.9375,305.7031 Q5669.6875,309.1875 5668.5469,310.3438 Q5667.5156,311.3594 5666.1094,311.3594 Q5664.7031,311.3594 5663.6719,310.3438 Q5661.9219,308.5781 5661.9219,304.9063 Q5661.9219,300.6563 5663.7969,298.75 Q5664.8438,297.7344 5666.1719,297.7344 Q5667.5781,297.7344 5668.4219,298.5469 Q5669.9063,300.0625 5669.8281,302.9375 L5667.7031,302.9375 Q5667.625,300.6094 5666.9844,299.9688 Q5666.7031,299.6719 5666.1719,299.6719 Q5665.7188,299.6719 5665.3594,300.0469 Q5664.125,301.2656 5664.125,304.7813 Q5664.125,307.8281 5665.1719,308.8438 Q5665.5938,309.2813 5666.1094,309.2813 Q5666.5625,309.2813 5667,308.8438 Q5667.5625,308.2969 5667.6406,305.7031 L5669.9375,305.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="5686.75" y="310.2285">RenderTarget</text><line style="stroke:#181818;stroke-width:0.5;" x1="5130.5" x2="6299.5" y1="320.5" y2="320.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="331.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="5149.5" y="339.0332">_depthStencilBuffer : DepthStencilBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="349.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="5149.5" y="356.6426">_textureHeap : DescriptorHeapCBV_SRV_UAV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="367.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="5149.5" y="374.252">_dsvHeap : DescriptorHeapDSV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="384.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="5149.5" y="391.8613">_rtvHeap : DescriptorHeapRTV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="402.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="5149.5" y="409.4707">_renderTargetBuffer : RenderTargetBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="419.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="5149.5" y="427.0801">_renderTargetData : RenderTargetData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="437.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="5149.5" y="444.6895">_depthStencilTexture : Texture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5137.5" y="455.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="5149.5" y="462.2988">_renderTargetTexture : Texture</text><line style="stroke:#181818;stroke-width:0.5;" x1="5130.5" x2="6299.5" y1="469.375" y2="469.375"/><ellipse cx="5140.5" cy="483.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="5149.5" y="487.9082">GetDepthStencilTexture() : Texture&amp;</text><ellipse cx="5140.5" cy="501.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="5149.5" y="505.5176">GetRenderTargetTexture() : Texture&amp;</text><ellipse cx="5140.5" cy="518.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="558" x="5149.5" y="523.127">Create(ID3D12Device&amp; device, RenderTargetData&amp; renderTargetData) : Utility::RESULT</text><ellipse cx="5140.5" cy="536.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1145" x="5149.5" y="540.7363">BeginMultiRendering(RenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="5140.5" cy="554.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="785" x="5149.5" y="558.3457">BeginRendering(RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="5140.5" cy="571.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="716" x="5149.5" y="575.9551">EndMultiRendering(RenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext) : void</text><ellipse cx="5140.5" cy="589.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="5149.5" y="593.5645">EndRendering(RenderingContext&amp; renderContext) : void</text></g><!--MD5=[dea2b8a4ca1de5dbc93d521ae620f0f6]
class DX12Wrapper.RenderTargetBuffer--><g id="elem_DX12Wrapper.RenderTargetBuffer"><rect codeLine="216" fill="#F1F1F1" height="153.6563" id="DX12Wrapper.RenderTargetBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="5809.5" y="1100.5"/><ellipse cx="6071.25" cy="1116.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6074.9375,1117.7031 Q6074.6875,1121.1875 6073.5469,1122.3438 Q6072.5156,1123.3594 6071.1094,1123.3594 Q6069.7031,1123.3594 6068.6719,1122.3438 Q6066.9219,1120.5781 6066.9219,1116.9063 Q6066.9219,1112.6563 6068.7969,1110.75 Q6069.8438,1109.7344 6071.1719,1109.7344 Q6072.5781,1109.7344 6073.4219,1110.5469 Q6074.9063,1112.0625 6074.8281,1114.9375 L6072.7031,1114.9375 Q6072.625,1112.6094 6071.9844,1111.9688 Q6071.7031,1111.6719 6071.1719,1111.6719 Q6070.7188,1111.6719 6070.3594,1112.0469 Q6069.125,1113.2656 6069.125,1116.7813 Q6069.125,1119.8281 6070.1719,1120.8438 Q6070.5938,1121.2813 6071.1094,1121.2813 Q6071.5625,1121.2813 6072,1120.8438 Q6072.5625,1120.2969 6072.6406,1117.7031 L6074.9375,1117.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="6091.75" y="1122.2285">RenderTargetBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5810.5" x2="6467.5" y1="1132.5" y2="1132.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5817.5" y="1143.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="5829.5" y="1151.0332">_rtvBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5810.5" x2="6467.5" y1="1158.1094" y2="1158.1094"/><ellipse cx="5820.5" cy="1172.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="5829.5" y="1176.6426">RenderTargetBuffer()</text><ellipse cx="5820.5" cy="1190.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="5829.5" y="1194.252">~RenderTargetBuffer()</text><ellipse cx="5820.5" cy="1207.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="5829.5" y="1211.8613">GetBuffer() : ID3D12Resource&amp;</text><ellipse cx="5820.5" cy="1225.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="5829.5" y="1229.4707">Create(ID3D12Device&amp; device, const RenderTargetBufferData&amp; data) : Utility::RESULT</text><ellipse cx="5820.5" cy="1242.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="633" x="5829.5" y="1247.0801">Create(ID3D12Device&amp; device, IDXGISwapChain3&amp; swapchain, const size_t&amp; index) : Utility::RESULT</text></g><!--MD5=[1e2d542b75cef13cf0b2b8e0864c7d58]
class DX12Wrapper.RenderingContext--><g id="elem_DX12Wrapper.RenderingContext"><rect codeLine="225" fill="#F1F1F1" height="541.0625" id="DX12Wrapper.RenderingContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1429" x="1964.5" y="907"/><ellipse cx="2617.75" cy="923" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2621.4375,924.2031 Q2621.1875,927.6875 2620.0469,928.8438 Q2619.0156,929.8594 2617.6094,929.8594 Q2616.2031,929.8594 2615.1719,928.8438 Q2613.4219,927.0781 2613.4219,923.4063 Q2613.4219,919.1563 2615.2969,917.25 Q2616.3438,916.2344 2617.6719,916.2344 Q2619.0781,916.2344 2619.9219,917.0469 Q2621.4063,918.5625 2621.3281,921.4375 L2619.2031,921.4375 Q2619.125,919.1094 2618.4844,918.4688 Q2618.2031,918.1719 2617.6719,918.1719 Q2617.2188,918.1719 2616.8594,918.5469 Q2615.625,919.7656 2615.625,923.2813 Q2615.625,926.3281 2616.6719,927.3438 Q2617.0938,927.7813 2617.6094,927.7813 Q2618.0625,927.7813 2618.5,927.3438 Q2619.0625,926.7969 2619.1406,924.2031 L2621.4375,924.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="2638.25" y="928.7285">RenderingContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="1965.5" x2="3392.5" y1="939" y2="939"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1972.5" y="950.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="1984.5" y="957.5332">_cmdList : ID3D12GraphicsCommandList*</text><line style="stroke:#181818;stroke-width:0.5;" x1="1965.5" x2="3392.5" y1="964.6094" y2="964.6094"/><ellipse cx="1975.5" cy="978.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1984.5" y="983.1426">RenderingContext()</text><ellipse cx="1975.5" cy="996.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1984.5" y="1000.752">~RenderingContext()</text><ellipse cx="1975.5" cy="1014.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1403" x="1984.5" y="1018.3613">ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE dsvHandle, D3D12_CLEAR_FLAGS clearFlags, const FLOAT&amp; clearDepth, const UINT8&amp; clearStencil, const UINT&amp; numRects, const D3D12_RECT* rects) : void</text><ellipse cx="1975.5" cy="1031.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1019" x="1984.5" y="1035.9707">ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const DirectX::XMFLOAT4&amp; color, const UINT&amp; numRects, const D3D12_RECT* rects) : void</text><ellipse cx="1975.5" cy="1049.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="916" x="1984.5" y="1053.5801">ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const float* color, const UINT&amp; numRects, const D3D12_RECT* rects) : void</text><ellipse cx="1975.5" cy="1066.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1984.5" y="1071.1895">Close() : void</text><ellipse cx="1975.5" cy="1084.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1290" x="1984.5" y="1088.7988">CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION&amp; src, const D3D12_TEXTURE_COPY_LOCATION&amp; dst, const UINT&amp; dstX, const UINT&amp; dstY, const UINT&amp; dstZ, D3D12_BOX* srcBox) : void</text><ellipse cx="1975.5" cy="1102.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1201" x="1984.5" y="1106.4082">DrawIndexedInstanced(const UINT&amp; indexNumPerInstance, const UINT&amp; instanceNum, const UINT startIndexLocation, const INT&amp; baseVertexLocation, const UINT&amp; startInstanceLocation) : void</text><ellipse cx="1975.5" cy="1119.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="968" x="1984.5" y="1124.0176">DrawInstanced(const UINT&amp; vertexNumPerInstance, const UINT&amp; instanceNum, const UINT&amp; startVertexLocation, const UINT&amp; startInstanceLocation) : void</text><ellipse cx="1975.5" cy="1137.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="1984.5" y="1141.627">Init(ID3D12GraphicsCommandList&amp; cmdList) : void</text><ellipse cx="1975.5" cy="1155.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="1984.5" y="1159.2363">Reset(ID3D12CommandAllocator&amp; cmdAlloc) : void</text><ellipse cx="1975.5" cy="1172.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="1984.5" y="1176.8457">SetDescriptorHeap(ID3D12DescriptorHeap* const* descriptorHeap) : void</text><ellipse cx="1975.5" cy="1190.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="473" x="1984.5" y="1194.4551">SetDescriptorHeap(DescriptorHeapCBV_SRV_UAV&amp; descriptorHeap) : void</text><ellipse cx="1975.5" cy="1207.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="687" x="1984.5" y="1212.0645">SetDescriptorHeaps(const UINT&amp; descriptorHeapNum, ID3D12DescriptorHeap* const* descriptorHeaps) : void</text><ellipse cx="1975.5" cy="1225.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="750" x="1984.5" y="1229.6738">SetGraphicsRootDescriptorTable(const UINT&amp; rootPrameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE handle) : void</text><ellipse cx="1975.5" cy="1243.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="1984.5" y="1247.2832">SetGraphicsRootSignature(RootSignature&amp; rootSignature) : void</text><ellipse cx="1975.5" cy="1260.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="1984.5" y="1264.8926">SetIndexBuffer(const IndexBuffer&amp; indexBuffer) : void</text><ellipse cx="1975.5" cy="1278.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="1984.5" y="1282.502">SetPipelineState(GraphicsPipelineState&amp; pipelineState) : void</text><ellipse cx="1975.5" cy="1295.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="1984.5" y="1300.1113">SetPrimitiveTopology(const D3D12_PRIMITIVE_TOPOLOGY&amp; primitiveTopology) : void</text><ellipse cx="1975.5" cy="1313.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="866" x="1984.5" y="1317.7207">SetRenderTarget(const D3D12_CPU_DESCRIPTOR_HANDLE* rtvHandle, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void</text><ellipse cx="1975.5" cy="1331.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1008" x="1984.5" y="1335.3301">SetRenderTargets(const UINT&amp; rtvNum, const D3D12_CPU_DESCRIPTOR_HANDLE rtvHandles, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void</text><ellipse cx="1975.5" cy="1348.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="1984.5" y="1352.9395">SetScissorRect(const D3D12_RECT&amp; scissorRect) : void</text><ellipse cx="1975.5" cy="1366.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="555" x="1984.5" y="1370.5488">SetScissorRects(const UINT&amp; scissorRectNum, const D3D12_RECT&amp; scissorRect) : void</text><ellipse cx="1975.5" cy="1383.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="493" x="1984.5" y="1388.1582">SetVertexBuffer(const UINT&amp; startSlot, const VertexBuffer&amp; vertexBuffer) : void</text><ellipse cx="1975.5" cy="1401.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="1984.5" y="1405.7676">SetViewport(const D3D12_VIEWPORT&amp; viewport) : void</text><ellipse cx="1975.5" cy="1419.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="1984.5" y="1423.377">SetViewports(const UINT&amp; viewportNum, const D3D12_VIEWPORT&amp; viewports) : void</text><ellipse cx="1975.5" cy="1436.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="931" x="1984.5" y="1440.9863">TransitionResourceState(ID3D12Resource&amp; resource, D3D12_RESOURCE_STATES presentState, D3D12_RESOURCE_STATES afterState) : void</text></g><!--MD5=[093b7ef505698d60121ff376dd34286f]
class DX12Wrapper.RootSignature--><g id="elem_DX12Wrapper.RootSignature"><rect codeLine="256" fill="#F1F1F1" height="171.2656" id="DX12Wrapper.RootSignature" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1175" x="11347.5" y="359"/><ellipse cx="11885.25" cy="375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11888.9375,376.2031 Q11888.6875,379.6875 11887.5469,380.8438 Q11886.5156,381.8594 11885.1094,381.8594 Q11883.7031,381.8594 11882.6719,380.8438 Q11880.9219,379.0781 11880.9219,375.4063 Q11880.9219,371.1563 11882.7969,369.25 Q11883.8438,368.2344 11885.1719,368.2344 Q11886.5781,368.2344 11887.4219,369.0469 Q11888.9063,370.5625 11888.8281,373.4375 L11886.7031,373.4375 Q11886.625,371.1094 11885.9844,370.4688 Q11885.7031,370.1719 11885.1719,370.1719 Q11884.7188,370.1719 11884.3594,370.5469 Q11883.125,371.7656 11883.125,375.2813 Q11883.125,378.3281 11884.1719,379.3438 Q11884.5938,379.7813 11885.1094,379.7813 Q11885.5625,379.7813 11886,379.3438 Q11886.5625,378.7969 11886.6406,376.2031 L11888.9375,376.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="11905.75" y="380.7285">RootSignature</text><line style="stroke:#181818;stroke-width:0.5;" x1="11348.5" x2="12521.5" y1="391" y2="391"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11355.5" y="402.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="11367.5" y="409.5332">_rootSignature : Microsoft::WRL::ComPtr&lt;ID3D12RootSignature&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="11348.5" x2="12521.5" y1="416.6094" y2="416.6094"/><ellipse cx="11358.5" cy="430.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="11367.5" y="435.1426">RootSignature()</text><ellipse cx="11358.5" cy="448.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="11367.5" y="452.752">~RootSignature()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11355.5" y="463.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1149" x="11367.5" y="470.3613">CreateRootSignature(ID3D12Device&amp; device, const DescriptorRangeData&amp; descRangeData, const D3D12_STATIC_SAMPLER_DESC&amp; samplerDescs, UINT samplerNum) : HRESULT</text><ellipse cx="11358.5" cy="483.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="11367.5" y="487.9707">GetRootSignature() : ID3D12RootSignature&amp; {query}</text><ellipse cx="11358.5" cy="501.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="512" x="11367.5" y="505.5801">Create(ID3D12Device&amp; device, const RootSignatureData&amp; data) : Utility::RESULT</text><ellipse cx="11358.5" cy="518.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1090" x="11367.5" y="523.1895">Create(ID3D12Device&amp; device, const DescriptorRangeData&amp; descRangeData, const D3D12_STATIC_SAMPLER_DESC&amp; samplerDescs, UINT samplerNum) : Utility::RESULT</text></g><!--MD5=[fdbeb6c4c123bff730e6e66c9e770c14]
class DX12Wrapper.Shader--><g id="elem_DX12Wrapper.Shader"><rect codeLine="266" fill="#F1F1F1" height="188.875" id="DX12Wrapper.Shader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="823" x="9329.5" y="1083"/><ellipse cx="9713.75" cy="1099" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9717.4375,1100.2031 Q9717.1875,1103.6875 9716.0469,1104.8438 Q9715.0156,1105.8594 9713.6094,1105.8594 Q9712.2031,1105.8594 9711.1719,1104.8438 Q9709.4219,1103.0781 9709.4219,1099.4063 Q9709.4219,1095.1563 9711.2969,1093.25 Q9712.3438,1092.2344 9713.6719,1092.2344 Q9715.0781,1092.2344 9715.9219,1093.0469 Q9717.4063,1094.5625 9717.3281,1097.4375 L9715.2031,1097.4375 Q9715.125,1095.1094 9714.4844,1094.4688 Q9714.2031,1094.1719 9713.6719,1094.1719 Q9713.2188,1094.1719 9712.8594,1094.5469 Q9711.625,1095.7656 9711.625,1099.2813 Q9711.625,1102.3281 9712.6719,1103.3438 Q9713.0938,1103.7813 9713.6094,1103.7813 Q9714.0625,1103.7813 9714.5,1103.3438 Q9715.0625,1102.7969 9715.1406,1100.2031 L9717.4375,1100.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="46" x="9734.25" y="1104.7285">Shader</text><line style="stroke:#181818;stroke-width:0.5;" x1="9330.5" x2="10151.5" y1="1115" y2="1115"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9337.5" y="1126.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="9349.5" y="1133.5332">_errorBlob : Microsoft::WRL::ComPtr&lt;ID3DBlob&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9337.5" y="1143.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="9349.5" y="1151.1426">_shaderBlob : Microsoft::WRL::ComPtr&lt;ID3DBlob&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="9330.5" x2="10151.5" y1="1158.2188" y2="1158.2188"/><ellipse cx="9340.5" cy="1172.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="9349.5" y="1176.752">Shader()</text><ellipse cx="9340.5" cy="1190.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="9349.5" y="1194.3613">~Shader()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9337.5" y="1204.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="797" x="9349.5" y="1211.9707">CompileShader(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderTypeAndVersion) : HRESULT</text><ellipse cx="9340.5" cy="1225.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="9349.5" y="1229.5801">GetShader() : ID3DBlob&amp; {query}</text><ellipse cx="9340.5" cy="1242.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="702" x="9349.5" y="1247.1895">Create(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType) : Utility::RESULT</text><ellipse cx="9340.5" cy="1260.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="9349.5" y="1264.7988">Create(const ShaderData&amp; shaderData) : Utility::RESULT</text></g><!--MD5=[23144be27de271990a11b5c2f9bc0139]
class DX12Wrapper.Texture--><g id="elem_DX12Wrapper.Texture"><rect codeLine="277" fill="#F1F1F1" height="505.8438" id="DX12Wrapper.Texture" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1426" x="7486" y="924.5"/><ellipse cx="8170.75" cy="940.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8174.4375,941.7031 Q8174.1875,945.1875 8173.0469,946.3438 Q8172.0156,947.3594 8170.6094,947.3594 Q8169.2031,947.3594 8168.1719,946.3438 Q8166.4219,944.5781 8166.4219,940.9063 Q8166.4219,936.6563 8168.2969,934.75 Q8169.3438,933.7344 8170.6719,933.7344 Q8172.0781,933.7344 8172.9219,934.5469 Q8174.4063,936.0625 8174.3281,938.9375 L8172.2031,938.9375 Q8172.125,936.6094 8171.4844,935.9688 Q8171.2031,935.6719 8170.6719,935.6719 Q8170.2188,935.6719 8169.8594,936.0469 Q8168.625,937.2656 8168.625,940.7813 Q8168.625,943.8281 8169.6719,944.8438 Q8170.0938,945.2813 8170.6094,945.2813 Q8171.0625,945.2813 8171.5,944.8438 Q8172.0625,944.2969 8172.1406,941.7031 L8174.4375,941.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="8191.25" y="946.2285">Texture</text><line style="stroke:#181818;stroke-width:0.5;" x1="7487" x2="8911" y1="956.5" y2="956.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="967.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="7506" y="975.0332">_scratchImage : DirectX::ScratchImage</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="985.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="7506" y="992.6426">_metaData : DirectX::TexMetadata</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1003.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="7506" y="1010.252">_textureBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1020.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="7506" y="1027.8613">_uploadBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1038.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="7506" y="1045.4707">_image : const DirectX::Image*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1055.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="389" x="7506" y="1063.0801">_subresources : std::vector&lt;D3D12_SUBRESOURCE_DATA&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="7487" x2="8911" y1="1070.1563" y2="1070.1563"/><ellipse cx="7497" cy="1084.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="7506" y="1088.6895">Texture()</text><ellipse cx="7497" cy="1102.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="7506" y="1106.2988">~Texture()</text><ellipse cx="7497" cy="1119.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="7506" y="1123.9082">GetImage() : DirectX::Image&amp;</text><ellipse cx="7497" cy="1137.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="7506" y="1141.5176">GetTexMetadata() : DirectX::TexMetadata&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1151.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="7506" y="1159.127">CopyCubeTexture(Dx12GraphicsEngine&amp; graphicsEngine) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1169.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="562" x="7506" y="1176.7363">CopyTexture(ID3D12Device&amp; device, Dx12GraphicsEngine&amp; graphicsEngine) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1187.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="7506" y="1194.3457">CreateUploadAndCubeTextureBuffer(ID3D12Device&amp; device) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1204.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="7506" y="1211.9551">CreateUploadAndTextureBuffer(ID3D12Device&amp; device) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1222.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="7506" y="1229.5645">LoadTextureFromDDSFile(const std::wstring&amp; texturePath) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1239.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="7506" y="1247.1738">LoadTextureFromWICFile(const std::wstring&amp; texturePath) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1257.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="7506" y="1264.7832">MapTexture() : HRESULT</text><ellipse cx="7497" cy="1278.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="7506" y="1282.3926">GetBuffer() : ID3D12Resource&amp; {query}</text><ellipse cx="7497" cy="1295.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="7506" y="1300.002">operator=(const Texture&amp; inst) : Texture&amp;</text><ellipse cx="7497" cy="1313.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="750" x="7506" y="1317.6113">CreateCubeTextureFromDDS(Dx12GraphicsEngine&amp; graphicsEngine, const std::wstring&amp; texturePath) : Utility::RESULT</text><ellipse cx="7497" cy="1330.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1400" x="7506" y="1335.2207">CreateTextureFromConstantData(Dx12GraphicsEngine&amp; graphicsEngine, uint8_t* data, const size_t&amp; stride, const size_t&amp; dataNum, const size_t&amp; width, const size_t&amp; height, const DXGI_FORMAT&amp; format) : Utility::RESULT</text><ellipse cx="7497" cy="1348.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="716" x="7506" y="1352.8301">CreateTextureFromDDS(Dx12GraphicsEngine&amp; graphicsEngine, const std::wstring&amp; texturePath) : Utility::RESULT</text><ellipse cx="7497" cy="1366.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="713" x="7506" y="1370.4395">CreateTextureFromWIC(Dx12GraphicsEngine&amp; graphicsEngine, const std::wstring&amp; texturePath) : Utility::RESULT</text><ellipse cx="7497" cy="1383.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="499" x="7506" y="1388.0488">CreateTextureFromDepthStencil(DepthStencilBuffer&amp; depthStencilBuffer) : void</text><ellipse cx="7497" cy="1401.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="523" x="7506" y="1405.6582">CreateTextureFromRenderTarget(RenderTargetBuffer&amp; renderTargetBuffer) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7494" y="1416.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="967" x="7506" y="1423.2676">SetTextureData(uint8_t* data, const size_t&amp; stride, const size_t&amp; dataNum, const size_t&amp; width, const size_t&amp; height, const DXGI_FORMAT&amp; format) : void</text></g><!--MD5=[ed04236b14e12fc04f65c53448d769ca]
class DX12Wrapper.VertexBuffer--><g id="elem_DX12Wrapper.VertexBuffer"><rect codeLine="306" fill="#F1F1F1" height="224.0938" id="DX12Wrapper.VertexBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="770" x="10188" y="1065.5"/><ellipse cx="10529.75" cy="1081.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10533.4375,1082.7031 Q10533.1875,1086.1875 10532.0469,1087.3438 Q10531.0156,1088.3594 10529.6094,1088.3594 Q10528.2031,1088.3594 10527.1719,1087.3438 Q10525.4219,1085.5781 10525.4219,1081.9063 Q10525.4219,1077.6563 10527.2969,1075.75 Q10528.3438,1074.7344 10529.6719,1074.7344 Q10531.0781,1074.7344 10531.9219,1075.5469 Q10533.4063,1077.0625 10533.3281,1079.9375 L10531.2031,1079.9375 Q10531.125,1077.6094 10530.4844,1076.9688 Q10530.2031,1076.6719 10529.6719,1076.6719 Q10529.2188,1076.6719 10528.8594,1077.0469 Q10527.625,1078.2656 10527.625,1081.7813 Q10527.625,1084.8281 10528.6719,1085.8438 Q10529.0938,1086.2813 10529.6094,1086.2813 Q10530.0625,1086.2813 10530.5,1085.8438 Q10531.0625,1085.2969 10531.1406,1082.7031 L10533.4375,1082.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="10550.25" y="1087.2285">VertexBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="10189" x2="10957" y1="1097.5" y2="1097.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10196" y="1108.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="10208" y="1116.0332">_vertexBufferView : D3D12_VERTEX_BUFFER_VIEW</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10196" y="1126.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="10208" y="1133.6426">_vertexBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10196" y="1144.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="10208" y="1151.252">_vertexNum : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="10189" x2="10957" y1="1158.3281" y2="1158.3281"/><ellipse cx="10199" cy="1172.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="10208" y="1176.8613">VertexBuffer()</text><ellipse cx="10199" cy="1190.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="10208" y="1194.4707">~VertexBuffer()</text><ellipse cx="10199" cy="1207.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="10208" y="1212.0801">GetView() : D3D12_VERTEX_BUFFER_VIEW&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10196" y="1222.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="733" x="10208" y="1229.6895">CreateVertexBufferAndView(ID3D12Device&amp; device, const UINT&amp; sizeInBytes, const UINT&amp; stribeInBytes) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10196" y="1240.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="10208" y="1247.2988">MapVertexBuffer(void* vertexData, const UINT&amp; sizeInBytes) : HRESULT</text><ellipse cx="10199" cy="1260.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="10208" y="1264.9082">GetVertexNum() : UINT {query}</text><ellipse cx="10199" cy="1278.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="744" x="10208" y="1282.5176">Create(ID3D12Device&amp; device, void* vertexData, const UINT&amp; sizeInBytes, const UINT&amp; stribeInBytes) : Utility::RESULT</text></g><!--MD5=[8fb2d9eb1e159c94de3a36fa2f2673a3]
class DX12Wrapper.DESCRIPTORTYPE--><g id="elem_DX12Wrapper.DESCRIPTORTYPE"><rect codeLine="319" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.DESCRIPTORTYPE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="175" x="10993.5" y="1118.5"/><ellipse cx="11016.15" cy="1134.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11014.8688,1133.1719 L11019.3844,1133.1719 L11019.3844,1135.125 L11014.8688,1135.125 L11014.8688,1139.4219 L11020.1031,1139.4219 L11020.1031,1141.3594 L11012.65,1141.3594 L11012.65,1127.7344 L11019.775,1127.7344 L11019.775,1129.6719 L11014.8688,1129.6719 L11014.8688,1133.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="11031.85" y="1140.2285">DESCRIPTORTYPE</text><line style="stroke:#181818;stroke-width:0.5;" x1="10994.5" x2="11167.5" y1="1150.5" y2="1150.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="10999.5" y="1169.0332">DESCRIPTORTYPE_CBV</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="10999.5" y="1186.6426">DESCRIPTORTYPE_NUM</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="10999.5" y="1204.252">DESCRIPTORTYPE_SRV</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="10999.5" y="1221.8613">DESCRIPTORTYPE_UAV</text><line style="stroke:#181818;stroke-width:0.5;" x1="10994.5" x2="11167.5" y1="1228.9375" y2="1228.9375"/></g><!--MD5=[c3baf23855a24c29f7f9ffbc38678ac0]
class DX12Wrapper.CubeRenderTargetData--><g id="elem_DX12Wrapper.CubeRenderTargetData"><rect codeLine="326" fill="#F1F1F1" height="100.8281" id="DX12Wrapper.CubeRenderTargetData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="8947.5" y="1127"/><ellipse cx="9040.25" cy="1143" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9043.9375,1144.2031 Q9043.6875,1147.6875 9042.5469,1148.8438 Q9041.5156,1149.8594 9040.1094,1149.8594 Q9038.7031,1149.8594 9037.6719,1148.8438 Q9035.9219,1147.0781 9035.9219,1143.4063 Q9035.9219,1139.1563 9037.7969,1137.25 Q9038.8438,1136.2344 9040.1719,1136.2344 Q9041.5781,1136.2344 9042.4219,1137.0469 Q9043.9063,1138.5625 9043.8281,1141.4375 L9041.7031,1141.4375 Q9041.625,1139.1094 9040.9844,1138.4688 Q9040.7031,1138.1719 9040.1719,1138.1719 Q9039.7188,1138.1719 9039.3594,1138.5469 Q9038.125,1139.7656 9038.125,1143.2813 Q9038.125,1146.3281 9039.1719,1147.3438 Q9039.5938,1147.7813 9040.1094,1147.7813 Q9040.5625,1147.7813 9041,1147.3438 Q9041.5625,1146.7969 9041.6406,1144.2031 L9043.9375,1144.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="9060.75" y="1148.7285">CubeRenderTargetData</text><line style="stroke:#181818;stroke-width:0.5;" x1="8948.5" x2="9293.5" y1="1159" y2="1159"/><ellipse cx="8958.5" cy="1173.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="8967.5" y="1177.5332">depthStencilBufferData : DepthStencilBufferData</text><ellipse cx="8958.5" cy="1190.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="8967.5" y="1195.1426">renderTargetBufferData : RenderTargetBufferData</text><ellipse cx="8958.5" cy="1208.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="8967.5" y="1212.752">useDepth : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8948.5" x2="9293.5" y1="1219.8281" y2="1219.8281"/></g><!--MD5=[f258a3f923bee2e374586a1893ffcbd8]
class DX12Wrapper.DepthStencilBufferData--><g id="elem_DX12Wrapper.DepthStencilBufferData"><rect codeLine="332" fill="#F1F1F1" height="153.6563" id="DX12Wrapper.DepthStencilBufferData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="989" x="6536.5" y="1508"/><ellipse cx="6952.75" cy="1524" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6956.4375,1525.2031 Q6956.1875,1528.6875 6955.0469,1529.8438 Q6954.0156,1530.8594 6952.6094,1530.8594 Q6951.2031,1530.8594 6950.1719,1529.8438 Q6948.4219,1528.0781 6948.4219,1524.4063 Q6948.4219,1520.1563 6950.2969,1518.25 Q6951.3438,1517.2344 6952.6719,1517.2344 Q6954.0781,1517.2344 6954.9219,1518.0469 Q6956.4063,1519.5625 6956.3281,1522.4375 L6954.2031,1522.4375 Q6954.125,1520.1094 6953.4844,1519.4688 Q6953.2031,1519.1719 6952.6719,1519.1719 Q6952.2188,1519.1719 6951.8594,1519.5469 Q6950.625,1520.7656 6950.625,1524.2813 Q6950.625,1527.3281 6951.6719,1528.3438 Q6952.0938,1528.7813 6952.6094,1528.7813 Q6953.0625,1528.7813 6953.5,1528.3438 Q6954.0625,1527.7969 6954.1406,1525.2031 L6956.4375,1525.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="6973.25" y="1529.7285">DepthStencilBufferData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6537.5" x2="7524.5" y1="1540" y2="1540"/><ellipse cx="6547.5" cy="1554.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="6556.5" y="1558.5332">depthFormat : DXGI_FORMAT</text><ellipse cx="6547.5" cy="1571.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="6556.5" y="1576.1426">height : UINT</text><ellipse cx="6547.5" cy="1589.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="6556.5" y="1593.752">width : UINT</text><ellipse cx="6547.5" cy="1607.1328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="6556.5" y="1611.3613">clearStencil : UINT8</text><ellipse cx="6547.5" cy="1624.7422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="6556.5" y="1628.9707">clearDepth : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="6537.5" x2="7524.5" y1="1636.0469" y2="1636.0469"/><ellipse cx="6547.5" cy="1650.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="963" x="6556.5" y="1654.5801">DepthStencilBufferData(const DXGI_FORMAT&amp; depthFormat, const UINT&amp; width, const UINT&amp; height, const float&amp; clearDepth, const UINT8&amp; clearStencil)</text></g><!--MD5=[591f79707ce30d1f693b24e88479eeb0]
class DX12Wrapper.DescriptorRangeData--><g id="elem_DX12Wrapper.DescriptorRangeData"><rect codeLine="341" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.DescriptorRangeData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="634" x="22" y="1118.5"/><ellipse cx="266.25" cy="1134.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M269.9375,1135.7031 Q269.6875,1139.1875 268.5469,1140.3438 Q267.5156,1141.3594 266.1094,1141.3594 Q264.7031,1141.3594 263.6719,1140.3438 Q261.9219,1138.5781 261.9219,1134.9063 Q261.9219,1130.6563 263.7969,1128.75 Q264.8438,1127.7344 266.1719,1127.7344 Q267.5781,1127.7344 268.4219,1128.5469 Q269.9063,1130.0625 269.8281,1132.9375 L267.7031,1132.9375 Q267.625,1130.6094 266.9844,1129.9688 Q266.7031,1129.6719 266.1719,1129.6719 Q265.7188,1129.6719 265.3594,1130.0469 Q264.125,1131.2656 264.125,1134.7813 Q264.125,1137.8281 265.1719,1138.8438 Q265.5938,1139.2813 266.1094,1139.2813 Q266.5625,1139.2813 267,1138.8438 Q267.5625,1138.2969 267.6406,1135.7031 L269.9375,1135.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="286.75" y="1140.2285">DescriptorRangeData</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="655" y1="1150.5" y2="1150.5"/><ellipse cx="33" cy="1164.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="42" y="1169.0332">cbvDescriptorNum : UINT</text><ellipse cx="33" cy="1182.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="42" y="1186.6426">srvDescriptorNum : UINT</text><ellipse cx="33" cy="1200.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="42" y="1204.252">uavDescriptorNum : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="655" y1="1211.3281" y2="1211.3281"/><ellipse cx="33" cy="1225.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="608" x="42" y="1229.8613">DescriptorRangeData(UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)</text></g><!--MD5=[1d3013d11483c8f7a2e6f94f89c78591]
class DX12Wrapper.InputLayout--><g id="elem_DX12Wrapper.InputLayout"><rect codeLine="348" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.InputLayout" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1319" x="11203.5" y="1109.5"/><ellipse cx="11821.75" cy="1125.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11825.4375,1126.7031 Q11825.1875,1130.1875 11824.0469,1131.3438 Q11823.0156,1132.3594 11821.6094,1132.3594 Q11820.2031,1132.3594 11819.1719,1131.3438 Q11817.4219,1129.5781 11817.4219,1125.9063 Q11817.4219,1121.6563 11819.2969,1119.75 Q11820.3438,1118.7344 11821.6719,1118.7344 Q11823.0781,1118.7344 11823.9219,1119.5469 Q11825.4063,1121.0625 11825.3281,1123.9375 L11823.2031,1123.9375 Q11823.125,1121.6094 11822.4844,1120.9688 Q11822.2031,1120.6719 11821.6719,1120.6719 Q11821.2188,1120.6719 11820.8594,1121.0469 Q11819.625,1122.2656 11819.625,1125.7813 Q11819.625,1128.8281 11820.6719,1129.8438 Q11821.0938,1130.2813 11821.6094,1130.2813 Q11822.0625,1130.2813 11822.5,1129.8438 Q11823.0625,1129.2969 11823.1406,1126.7031 L11825.4375,1126.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="11842.25" y="1131.2285">InputLayout</text><line style="stroke:#181818;stroke-width:0.5;" x1="11204.5" x2="12521.5" y1="1141.5" y2="1141.5"/><ellipse cx="11214.5" cy="1155.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="424" x="11223.5" y="1160.0332">inputElementDescs : std::vector&lt;D3D12_INPUT_ELEMENT_DESC&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="11204.5" x2="12521.5" y1="1167.1094" y2="1167.1094"/><ellipse cx="11214.5" cy="1181.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="11223.5" y="1185.6426">GetData() : D3D12_INPUT_ELEMENT_DESC*</text><ellipse cx="11214.5" cy="1199.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="184" x="11223.5" y="1203.252">DefaultLayout() : InputLayout</text><ellipse cx="11214.5" cy="1216.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="11223.5" y="1220.8613">GetSize() : UINT</text><ellipse cx="11214.5" cy="1234.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1293" x="11223.5" y="1238.4707">Append(const char* semanticName, UINT semanticIndex, DXGI_FORMAT format, UINT inputSlot, UINT alignedByteOffset, D3D12_INPUT_CLASSIFICATION inputSlotClass, UINT instanceDataStepRate) : void</text></g><!--MD5=[335eed13d38650c0df04874a49031964]
class DX12Wrapper.RenderTargetBufferData--><g id="elem_DX12Wrapper.RenderTargetBufferData"><rect codeLine="356" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.RenderTargetBufferData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="837" x="7928.5" y="1517"/><ellipse cx="8264.25" cy="1533" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8267.9375,1534.2031 Q8267.6875,1537.6875 8266.5469,1538.8438 Q8265.5156,1539.8594 8264.1094,1539.8594 Q8262.7031,1539.8594 8261.6719,1538.8438 Q8259.9219,1537.0781 8259.9219,1533.4063 Q8259.9219,1529.1563 8261.7969,1527.25 Q8262.8438,1526.2344 8264.1719,1526.2344 Q8265.5781,1526.2344 8266.4219,1527.0469 Q8267.9063,1528.5625 8267.8281,1531.4375 L8265.7031,1531.4375 Q8265.625,1529.1094 8264.9844,1528.4688 Q8264.7031,1528.1719 8264.1719,1528.1719 Q8263.7188,1528.1719 8263.3594,1528.5469 Q8262.125,1529.7656 8262.125,1533.2813 Q8262.125,1536.3281 8263.1719,1537.3438 Q8263.5938,1537.7813 8264.1094,1537.7813 Q8264.5625,1537.7813 8265,1537.3438 Q8265.5625,1536.7969 8265.6406,1534.2031 L8267.9375,1534.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="8284.75" y="1538.7285">RenderTargetBufferData</text><line style="stroke:#181818;stroke-width:0.5;" x1="7929.5" x2="8764.5" y1="1549" y2="1549"/><ellipse cx="7939.5" cy="1563.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="7948.5" y="1567.5332">colorFormat : DXGI_FORMAT</text><ellipse cx="7939.5" cy="1580.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="7948.5" y="1585.1426">height : UINT</text><ellipse cx="7939.5" cy="1598.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="7948.5" y="1602.752">width : UINT</text><ellipse cx="7939.5" cy="1616.1328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="7948.5" y="1620.3613">clearColor : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="7929.5" x2="8764.5" y1="1627.4375" y2="1627.4375"/><ellipse cx="7939.5" cy="1641.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="811" x="7948.5" y="1645.9707">RenderTargetBufferData(const DXGI_FORMAT&amp; colorFormat, const UINT&amp; width, const UINT&amp; height, const float (&amp; clearColor ))</text></g><!--MD5=[f3acdce1103e6bd92c282779b0128340]
class DX12Wrapper.RenderTargetData--><g id="elem_DX12Wrapper.RenderTargetData"><rect codeLine="364" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.RenderTargetData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="7103.5" y="1118.5"/><ellipse cx="7213.25" cy="1134.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7216.9375,1135.7031 Q7216.6875,1139.1875 7215.5469,1140.3438 Q7214.5156,1141.3594 7213.1094,1141.3594 Q7211.7031,1141.3594 7210.6719,1140.3438 Q7208.9219,1138.5781 7208.9219,1134.9063 Q7208.9219,1130.6563 7210.7969,1128.75 Q7211.8438,1127.7344 7213.1719,1127.7344 Q7214.5781,1127.7344 7215.4219,1128.5469 Q7216.9063,1130.0625 7216.8281,1132.9375 L7214.7031,1132.9375 Q7214.625,1130.6094 7213.9844,1129.9688 Q7213.7031,1129.6719 7213.1719,1129.6719 Q7212.7188,1129.6719 7212.3594,1130.0469 Q7211.125,1131.2656 7211.125,1134.7813 Q7211.125,1137.8281 7212.1719,1138.8438 Q7212.5938,1139.2813 7213.1094,1139.2813 Q7213.5625,1139.2813 7214,1138.8438 Q7214.5625,1138.2969 7214.6406,1135.7031 L7216.9375,1135.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="7233.75" y="1140.2285">RenderTargetData</text><line style="stroke:#181818;stroke-width:0.5;" x1="7104.5" x2="7449.5" y1="1150.5" y2="1150.5"/><ellipse cx="7114.5" cy="1164.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="7123.5" y="1169.0332">depthStencilBufferData : DepthStencilBufferData</text><ellipse cx="7114.5" cy="1182.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="7123.5" y="1186.6426">renderTargetBufferData : RenderTargetBufferData</text><ellipse cx="7114.5" cy="1200.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="7123.5" y="1204.252">isCubeMap : bool</text><ellipse cx="7114.5" cy="1217.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="7123.5" y="1221.8613">useDepth : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="7104.5" x2="7449.5" y1="1228.9375" y2="1228.9375"/></g><!--MD5=[3dfcd7e6f28f8badfb075d4613166696]
class DX12Wrapper.RootSignatureData--><g id="elem_DX12Wrapper.RootSignatureData"><rect codeLine="371" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.RootSignatureData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1746" x="230" y="385.5"/><ellipse cx="1038.25" cy="401.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1041.9375,402.7031 Q1041.6875,406.1875 1040.5469,407.3438 Q1039.5156,408.3594 1038.1094,408.3594 Q1036.7031,408.3594 1035.6719,407.3438 Q1033.9219,405.5781 1033.9219,401.9063 Q1033.9219,397.6563 1035.7969,395.75 Q1036.8438,394.7344 1038.1719,394.7344 Q1039.5781,394.7344 1040.4219,395.5469 Q1041.9063,397.0625 1041.8281,399.9375 L1039.7031,399.9375 Q1039.625,397.6094 1038.9844,396.9688 Q1038.7031,396.6719 1038.1719,396.6719 Q1037.7188,396.6719 1037.3594,397.0469 Q1036.125,398.2656 1036.125,401.7813 Q1036.125,404.8281 1037.1719,405.8438 Q1037.5938,406.2813 1038.1094,406.2813 Q1038.5625,406.2813 1039,405.8438 Q1039.5625,405.2969 1039.6406,402.7031 L1041.9375,402.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="1058.75" y="407.2285">RootSignatureData</text><line style="stroke:#181818;stroke-width:0.5;" x1="231" x2="1975" y1="417.5" y2="417.5"/><ellipse cx="241" cy="431.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="250" y="436.0332">_descRangeData : DescriptorRangeData</text><ellipse cx="241" cy="449.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="250" y="453.6426">_samplerData : SamplerData</text><line style="stroke:#181818;stroke-width:0.5;" x1="231" x2="1975" y1="460.7188" y2="460.7188"/><ellipse cx="241" cy="475.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1720" x="250" y="479.252">RootSignatureData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW, UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)</text><ellipse cx="241" cy="492.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="250" y="496.8613">RootSignatureData(SamplerData samplerData, DescriptorRangeData descRangeData)</text></g><!--MD5=[54e388eefde791f3df652b9a7dfed890]
class DX12Wrapper.SamplerData--><g id="elem_DX12Wrapper.SamplerData"><rect codeLine="378" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.SamplerData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1238" x="691" y="1109.5"/><ellipse cx="1264.75" cy="1125.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1268.4375,1126.7031 Q1268.1875,1130.1875 1267.0469,1131.3438 Q1266.0156,1132.3594 1264.6094,1132.3594 Q1263.2031,1132.3594 1262.1719,1131.3438 Q1260.4219,1129.5781 1260.4219,1125.9063 Q1260.4219,1121.6563 1262.2969,1119.75 Q1263.3438,1118.7344 1264.6719,1118.7344 Q1266.0781,1118.7344 1266.9219,1119.5469 Q1268.4063,1121.0625 1268.3281,1123.9375 L1266.2031,1123.9375 Q1266.125,1121.6094 1265.4844,1120.9688 Q1265.2031,1120.6719 1264.6719,1120.6719 Q1264.2188,1120.6719 1263.8594,1121.0469 Q1262.625,1122.2656 1262.625,1125.7813 Q1262.625,1128.8281 1263.6719,1129.8438 Q1264.0938,1130.2813 1264.6094,1130.2813 Q1265.0625,1130.2813 1265.5,1129.8438 Q1266.0625,1129.2969 1266.1406,1126.7031 L1268.4375,1126.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1285.25" y="1131.2285">SamplerData</text><line style="stroke:#181818;stroke-width:0.5;" x1="692" x2="1928" y1="1141.5" y2="1141.5"/><ellipse cx="702" cy="1155.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="711" y="1160.0332">samplerFilter : D3D12_FILTER</text><ellipse cx="702" cy="1173.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="711" y="1177.6426">addressU : D3D12_TEXTURE_ADDRESS_MODE</text><ellipse cx="702" cy="1191.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="711" y="1195.252">addressV : D3D12_TEXTURE_ADDRESS_MODE</text><ellipse cx="702" cy="1208.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="711" y="1212.8613">addressW : D3D12_TEXTURE_ADDRESS_MODE</text><line style="stroke:#181818;stroke-width:0.5;" x1="692" x2="1928" y1="1219.9375" y2="1219.9375"/><ellipse cx="702" cy="1234.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1212" x="711" y="1238.4707">SamplerData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW)</text></g><!--MD5=[d94d580e690d5141af657cdbf67da542]
class DX12Wrapper.ShaderData--><g id="elem_DX12Wrapper.ShaderData"><rect codeLine="386" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.ShaderData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="654" x="9414" y="1517"/><ellipse cx="9698.75" cy="1533" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9702.4375,1534.2031 Q9702.1875,1537.6875 9701.0469,1538.8438 Q9700.0156,1539.8594 9698.6094,1539.8594 Q9697.2031,1539.8594 9696.1719,1538.8438 Q9694.4219,1537.0781 9694.4219,1533.4063 Q9694.4219,1529.1563 9696.2969,1527.25 Q9697.3438,1526.2344 9698.6719,1526.2344 Q9700.0781,1526.2344 9700.9219,1527.0469 Q9702.4063,1528.5625 9702.3281,1531.4375 L9700.2031,1531.4375 Q9700.125,1529.1094 9699.4844,1528.4688 Q9699.2031,1528.1719 9698.6719,1528.1719 Q9698.2188,1528.1719 9697.8594,1528.5469 Q9696.625,1529.7656 9696.625,1533.2813 Q9696.625,1536.3281 9697.6719,1537.3438 Q9698.0938,1537.7813 9698.6094,1537.7813 Q9699.0625,1537.7813 9699.5,1537.3438 Q9700.0625,1536.7969 9700.1406,1534.2031 L9702.4375,1534.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="9719.25" y="1538.7285">ShaderData</text><line style="stroke:#181818;stroke-width:0.5;" x1="9415" x2="10067" y1="1549" y2="1549"/><ellipse cx="9425" cy="1563.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="9434" y="1567.5332">shaderFilePass : const TCHAR*</text><ellipse cx="9425" cy="1580.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="9434" y="1585.1426">entoryPointName : const char*</text><ellipse cx="9425" cy="1598.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="9434" y="1602.752">shaderType : const char*</text><line style="stroke:#181818;stroke-width:0.5;" x1="9415" x2="10067" y1="1609.8281" y2="1609.8281"/><ellipse cx="9425" cy="1624.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="628" x="9434" y="1628.3613">ShaderData(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType)</text><ellipse cx="9425" cy="1641.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="9434" y="1645.9707">ShaderData()</text></g><!--MD5=[190e5ccbc3c72e81c84f37b63ffddca6]
class DX12Wrapper.ShaderResourceViewDesc--><g id="elem_DX12Wrapper.ShaderResourceViewDesc"><rect codeLine="394" fill="#F1F1F1" height="100.8281" id="DX12Wrapper.ShaderResourceViewDesc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="414" x="10103" y="1534.5"/><ellipse cx="10221.75" cy="1550.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10225.4375,1551.7031 Q10225.1875,1555.1875 10224.0469,1556.3438 Q10223.0156,1557.3594 10221.6094,1557.3594 Q10220.2031,1557.3594 10219.1719,1556.3438 Q10217.4219,1554.5781 10217.4219,1550.9063 Q10217.4219,1546.6563 10219.2969,1544.75 Q10220.3438,1543.7344 10221.6719,1543.7344 Q10223.0781,1543.7344 10223.9219,1544.5469 Q10225.4063,1546.0625 10225.3281,1548.9375 L10223.2031,1548.9375 Q10223.125,1546.6094 10222.4844,1545.9688 Q10222.2031,1545.6719 10221.6719,1545.6719 Q10221.2188,1545.6719 10220.8594,1546.0469 Q10219.625,1547.2656 10219.625,1550.7813 Q10219.625,1553.8281 10220.6719,1554.8438 Q10221.0938,1555.2813 10221.6094,1555.2813 Q10222.0625,1555.2813 10222.5,1554.8438 Q10223.0625,1554.2969 10223.1406,1551.7031 L10225.4375,1551.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="10242.25" y="1556.2285">ShaderResourceViewDesc</text><line style="stroke:#181818;stroke-width:0.5;" x1="10104" x2="10516" y1="1566.5" y2="1566.5"/><ellipse cx="10114" cy="1580.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="323" x="10123" y="1585.0332">desc : D3D12_SHADER_RESOURCE_VIEW_DESC</text><line style="stroke:#181818;stroke-width:0.5;" x1="10104" x2="10516" y1="1592.1094" y2="1592.1094"/><ellipse cx="10114" cy="1606.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="388" x="10123" y="1610.6426">ShaderResourceViewDesc(Texture&amp; texture, bool isCubeTex)</text><ellipse cx="10114" cy="1624.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="10123" y="1628.252">~ShaderResourceViewDesc()</text></g><!--MD5=[979c18aecf6e52427c4b3423d7f56754]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.CubeRenderTargetData--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.CubeRenderTargetData"><path codeLine="412" d="M7553.55,538.93 C8052.14,623.48 8707.05,757.42 8930,907 C9012.15,962.12 9070.31,1065.32 9099.51,1126.78 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.CubeRenderTargetData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7540.69,536.75,7545.9383,541.6952,7552.5217,538.7527,7547.2734,533.8074,7540.69,536.75" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c0bac08ab9cfe0431275f82dddd454f6]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DepthStencilBuffer--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DepthStencilBuffer"><path codeLine="415" d="M6903.08,613.43 C6872,762.93 6827.8,975.47 6803.57,1091.99 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DepthStencilBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6905.76,600.53,6900.6238,605.5915,6903.3204,612.2794,6908.4567,607.2179,6905.76,600.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b7a635c4fe16328246696cd3c7199492]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="418" d="M6746.84,608.47 C6630.86,696.85 6475.27,797.81 6318,847 C5915.25,972.97 4826.82,794.87 4420,907 C4414.07,908.63 4408.14,910.35 4402.2,912.15 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6757.23,600.51,6750.0344,600.9828,6747.7033,607.8067,6754.8989,607.3339,6757.23,600.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[157a1a112a8cf469cb91303850de0d31]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DescriptorHeapDSV--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DescriptorHeapDSV"><path codeLine="421" d="M6745.61,608.44 C6629.65,696.36 6474.49,796.89 6318,847 C6036.24,937.22 5260.25,791.2 4988,907 C4912.94,938.92 4845.85,1000.14 4795.74,1056.16 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DescriptorHeapDSV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6756,600.51,6748.8037,600.9717,6746.4621,607.7921,6753.6584,607.3303,6756,600.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[84fa6b05ffe00963312eff240f59551f]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DescriptorHeapRTV--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DescriptorHeapRTV"><path codeLine="424" d="M6738.59,608.65 C6622.83,694.27 6470.18,792.46 6318,847 C6096.5,926.38 6012.86,825.86 5792,907 C5718.26,934.09 5644.76,977.34 5581.16,1021.34 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DescriptorHeapRTV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6749.32,600.67,6742.1185,601.0415,6739.6916,607.832,6746.8931,607.4605,6749.32,600.67" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0902fb3edbefb32b371020b828a99c62]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.RenderTargetBuffer--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.RenderTargetBuffer"><path codeLine="427" d="M6758.88,609.38 C6591.31,762.69 6348.44,984.88 6222.22,1100.37 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.RenderTargetBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6768.55,600.53,6761.4224,601.6242,6759.691,608.6244,6766.8186,607.5302,6768.55,600.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[150307b30740fc389759f83ffbc3bd0f]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.Texture--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.Texture"><path codeLine="430" d="M7216.91,607.18 C7377.51,700.28 7582.84,819.32 7764.2,924.45 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.Texture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7205.43,600.53,7208.6161,606.999,7215.813,606.5461,7212.6269,600.077,7205.43,600.53" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="7211.2141" y="621.9754">2</text></g><!--MD5=[56e8d41666f4cbd3d455d73a730a377a]
reverse link DX12Wrapper.CubeRenderTargetData to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.CubeRenderTargetData_DX12Wrapper.DepthStencilBufferData"><path codeLine="433" d="M9096.68,1240.02 C9067.61,1304.4 9012.33,1402.33 8930,1448 C8830.82,1503.02 8024.12,1499.79 7911,1508 C7786.06,1517.07 7651.26,1528.09 7525.6,1538.89 " fill="none" id="DX12Wrapper.CubeRenderTargetData-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9101.98,1228.02,9095.8987,1231.8953,9097.137,1238.9993,9103.2183,1235.124,9101.98,1228.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[79be0742ba62bcdab3396421e01e4f77]
reverse link DX12Wrapper.CubeRenderTargetData to DX12Wrapper.RenderTargetBufferData--><g id="link_DX12Wrapper.CubeRenderTargetData_DX12Wrapper.RenderTargetBufferData"><path codeLine="436" d="M9093.68,1240.19 C9062.92,1302.35 9006.97,1396.27 8930,1448 C8880.4,1481.33 8823.67,1506.55 8765.51,1525.62 " fill="none" id="DX12Wrapper.CubeRenderTargetData-backto-DX12Wrapper.RenderTargetBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9099.5,1228.2,9093.2834,1231.8543,9094.2657,1238.9982,9100.4823,1235.3439,9099.5,1228.2" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4f6341bb34e9b8564c28c557203613cb]
reverse link DX12Wrapper.DepthStencilBuffer to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.DepthStencilBuffer_DX12Wrapper.DepthStencilBufferData"><path codeLine="439" d="M6843.84,1274.24 C6886.94,1345.57 6945,1441.66 6984.97,1507.81 " fill="none" id="DX12Wrapper.DepthStencilBuffer-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6837.06,1263.01,6836.7347,1270.2138,6843.2591,1273.2848,6843.5845,1266.081,6837.06,1263.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c2d9836917752c66a8f61511ae771bad]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DepthStencilBuffer--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DepthStencilBuffer"><path codeLine="442" d="M5106.44,845.05 C5108.29,845.71 5110.15,846.36 5112,847 C5400.85,946.85 6203.07,791.44 6486,907 C6580.79,945.72 6665.19,1028.15 6720.13,1091.72 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DepthStencilBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5094.22,840.59,5098.4852,846.4044,5105.4929,844.7036,5101.2277,838.8892,5094.22,840.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[af72927a9bfd8e84bd714a184135bc6e]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DepthStencilBufferData"><path codeLine="445" d="M3997.91,844.71 C3995.94,845.48 3993.97,846.24 3992,847 C3878.64,890.45 3529.99,816.57 3449,907 C3408.9,951.78 3407.31,1404.7 3449,1448 C3554.22,1557.3 5578.12,1578.99 6536.17,1583.13 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4009.99,839.86,4002.9315,838.3845,3998.8547,844.3326,4005.9132,845.8081,4009.99,839.86" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[22e5c2971f978462918703e724e5485f]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="448" d="M4203.75,857.43 C4189.73,874.01 4175.82,890.47 4162.13,906.65 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4212.49,847.09,4205.5626,849.0928,4204.747,856.2576,4211.6744,854.2548,4212.49,847.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7537d1c7481e493c56bb9385e3bee6b1]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DescriptorHeapDSV--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DescriptorHeapDSV"><path codeLine="451" d="M4638.2,860.04 C4653.12,931.8 4667.5,1000.99 4679,1056.27 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DescriptorHeapDSV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4635.5,847.09,4632.8033,853.7779,4637.9396,858.8394,4640.6362,852.1515,4635.5,847.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6c1b4f3727c97aa95cfd1cc45cdbb09d]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DescriptorHeapRTV--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DescriptorHeapRTV"><path codeLine="454" d="M5022.34,855.78 C5089.82,914.65 5155.5,971.95 5212.24,1021.43 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DescriptorHeapRTV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5012.37,847.09,5014.2586,854.0494,5021.4091,854.9827,5019.5204,848.0233,5012.37,847.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2a6e94a840d46e5bdb767b6a1f675a44]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.RenderTargetBuffer--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.RenderTargetBuffer"><path codeLine="457" d="M5106.48,844.93 C5108.32,845.63 5110.16,846.32 5112,847 C5396.48,952.46 5509.6,796.11 5792,907 C5899.92,949.38 6002.02,1036.44 6067.16,1100.19 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.RenderTargetBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5094.35,840.22,5098.4909,846.1236,5105.5331,844.5719,5101.3922,838.6683,5094.35,840.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fc12a0a8306055a9abdf4a4c3a8932b8]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.RenderingContext--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.RenderingContext"><path codeLine="460" d="M3997.5,844.88 C3995.67,845.6 3993.83,846.3 3992,847 C3753.49,937.69 3669.65,849.68 3421,907 C3411.9,909.1 3402.76,911.27 3393.59,913.52 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.RenderingContext" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4009.59,840.08,4002.5357,838.5844,3998.4419,844.5208,4005.4962,846.0164,4009.59,840.08" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a56e95099f74e6e8788cac6aa8a60c33]
reverse link DX12Wrapper.FontRenderer to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.FontRenderer_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="463" d="M3610.28,568.17 C3659.44,660.55 3728.71,790.73 3790.57,906.97 " fill="none" id="DX12Wrapper.FontRenderer-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3604.08,556.52,3603.3723,563.6963,3609.7243,567.1097,3610.4321,559.9334,3604.08,556.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1628d7bf09918cf53c4da8c924e1fb72]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DepthStencilBuffer--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DepthStencilBuffer"><path codeLine="466" d="M5931.19,608.19 C6042.75,687.21 6183.38,779.43 6318,847 C6388.86,882.57 6417.89,866.41 6486,907 C6570.35,957.27 6652.32,1033.35 6709.2,1091.87 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DepthStencilBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5920.49,600.59,5923.0612,607.3271,5930.269,607.5449,5927.6978,600.8078,5920.49,600.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0c262e039aa877665a21e5338b5fc119]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="469" d="M5524.25,608.8 C5411.84,695.29 5262.5,794.28 5112,847 C4820.65,949.06 4715.25,816.83 4420,907 C4414.12,908.8 4408.23,910.67 4402.33,912.62 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5534.67,600.74,5527.4771,601.2524,5525.1836,608.089,5532.3765,607.5766,5534.67,600.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[51f13ec0bd4643a6c0562582590a433e]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DescriptorHeapDSV--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DescriptorHeapDSV"><path codeLine="472" d="M5486.64,608.26 C5375.81,684.46 5239.35,774.24 5112,847 C5058.84,877.37 5038.36,872.18 4988,907 C4925.94,949.91 4864.31,1006.27 4814.39,1056.36 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DescriptorHeapDSV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5497.63,600.69,5490.4197,600.7999,5487.748,607.4979,5494.9583,607.3879,5497.63,600.69" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b299f5b7d7fd16b77ad85290d31b5bc9]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DescriptorHeapRTV--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DescriptorHeapRTV"><path codeLine="475" d="M5640.68,612.66 C5586.04,735.57 5512.31,901.41 5458.96,1021.38 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DescriptorHeapRTV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5646.08,600.53,5639.9892,604.3904,5641.21,611.4974,5647.3008,607.637,5646.08,600.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[588706252f2a1b7ca017bfb3afbadd8b]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.RenderTargetBuffer--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.RenderTargetBuffer"><path codeLine="478" d="M5811.51,611.89 C5900.32,765 6028.04,985.21 6094.7,1100.12 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.RenderTargetBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5804.92,600.53,5804.467,607.7269,5810.9361,610.913,5811.389,603.7161,5804.92,600.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6a1ec4a1fb814f347e341f24c5f759f4]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.RenderTargetData--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.RenderTargetData"><path codeLine="481" d="M5904.94,608.79 C6017.37,695.56 6166.99,794.82 6318,847 C6479.8,902.91 6937.11,822.52 7086,907 C7169.17,954.19 7225.03,1054.25 7253.87,1118.28 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.RenderTargetData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5894.52,600.71,5896.8076,607.5486,5904,608.0672,5901.7124,601.2286,5894.52,600.71" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2aaef017c29298e2395ab29f23c46780]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.Texture--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.Texture"><path codeLine="484" d="M5902.51,608.79 C6014.99,696.39 6165.46,796.49 6318,847 C6560.93,927.44 7217.33,855.49 7468,907 C7493.09,912.16 7518.47,918.02 7543.96,924.47 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.Texture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5892.09,600.62,5894.3459,607.4691,5901.5359,608.021,5899.28,601.1719,5892.09,600.62" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="5893.4983" y="622.0698">2</text></g><!--MD5=[8960221daeb1dc96f90bb4ca6a52da5f]
reverse link DX12Wrapper.RenderTargetData to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.RenderTargetData_DX12Wrapper.DepthStencilBufferData"><path codeLine="487" d="M7234.94,1247.83 C7191.12,1320.07 7122.64,1432.94 7077.31,1507.67 " fill="none" id="DX12Wrapper.RenderTargetData-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7241.75,1236.6,7235.218,1239.655,7235.5257,1246.8595,7242.0577,1243.8045,7241.75,1236.6" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[12f372a53b50d8dd6e6421120b3bfc46]
reverse link DX12Wrapper.RenderTargetData to DX12Wrapper.RenderTargetBufferData--><g id="link_DX12Wrapper.RenderTargetData_DX12Wrapper.RenderTargetBufferData"><path codeLine="490" d="M7307.26,1248.55 C7338.31,1311.49 7392.87,1401.04 7469,1448 C7547.03,1496.13 7741.91,1528.89 7928.3,1550.17 " fill="none" id="DX12Wrapper.RenderTargetData-backto-DX12Wrapper.RenderTargetBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7301.55,1236.73,7300.5607,1243.8729,7306.7736,1247.5334,7307.763,1240.3905,7301.55,1236.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a30236c712de0934bd54118139beb6a2]
reverse link DX12Wrapper.RootSignatureData to DX12Wrapper.DescriptorRangeData--><g id="link_DX12Wrapper.RootSignatureData_DX12Wrapper.DescriptorRangeData"><path codeLine="493" d="M1032.58,512.88 C883.8,655.23 539.69,984.48 399.79,1118.33 " fill="none" id="DX12Wrapper.RootSignatureData-backto-DX12Wrapper.DescriptorRangeData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1042.09,503.78,1034.9898,505.04,1033.422,512.0786,1040.5222,510.8186,1042.09,503.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[436b8f62d3d47389c70f2c7d3b098de3]
reverse link DX12Wrapper.RootSignatureData to DX12Wrapper.SamplerData--><g id="link_DX12Wrapper.RootSignatureData_DX12Wrapper.SamplerData"><path codeLine="496" d="M1123.1,516.48 C1163.06,657.59 1251.98,971.62 1291.01,1109.45 " fill="none" id="DX12Wrapper.RootSignatureData-backto-DX12Wrapper.SamplerData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1119.5,503.78,1117.2877,510.6434,1122.7722,515.3252,1124.9845,508.4619,1119.5,503.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7fa37bdb58046748e585e50cf97cf814]
@startuml





/' Objects '/

namespace DX12Wrapper {
	class ConstantBuffer {
		+ConstantBuffer()
		+~ConstantBuffer()
		-_mappedData : BYTE*
		+GetGPUVirtualAddress() : D3D12_GPU_VIRTUAL_ADDRESS
		-CreateConstantBuffer(ID3D12Device& device, const UINT& bufferSize) : HRESULT
		-MapConstantBuffer(void* data, const UINT& bufferSize) : HRESULT
		+GetBuffer() : ID3D12Resource&
		-_constantBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_bufferSize : UINT
		+GetBufferSize() : UINT&
		+Create(ID3D12Device& device, void* data, const UINT& bufferSize) : Utility::RESULT
		+UpdateData(void* data) : void
	}

	class CubeRenderTarget {
		-_renderTargetData : CubeRenderTargetData
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, CubeRenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class DepthStencilBuffer {
		+DepthStencilBuffer()
		+~DepthStencilBuffer()
		+GetDepthStencilBufferData() : DepthStencilBufferData
		-_depthStencilBufferData : DepthStencilBufferData
		+GetBuffer() : ID3D12Resource&
		-_dsvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const DepthStencilBufferData& data) : Utility::RESULT
	}

	class DescriptorHeapCBV_SRV_UAV {
		+DescriptorHeapCBV_SRV_UAV()
		+~DescriptorHeapCBV_SRV_UAV()
		+GetGPUHandle() : CD3DX12_GPU_DESCRIPTOR_HANDLE
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartCBV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartSRV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartUAV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetSRVHandle(int index) : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		+GetDescriptorHeapAddress() : ID3D12DescriptorHeap*
		-_descriptorHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		-_registedCBVNum : UINT
		-_registedSRVNum : UINT
		-_registedUAVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+IsRegistedConstantBuffer() : bool
		+IsRegistedShaderResource() : bool
		+IsRegistedUnorderedAccessResource() : bool
		-{static} _MAX_CBV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_SRV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_UAV_DESCRIPTOR_NUM : static constexpr UINT
		+{static} NEXT_REGISTER : static constexpr int
		+RegistConstantBuffer(ID3D12Device& device, ConstantBuffer& constantBuffer, const int& registerNo) : void
		+RegistShaderResource(ID3D12Device& device, Texture& texture, ShaderResourceViewDesc& desc, const int& registerNo) : void
		+RegistUnorderedAccessResource(ID3D12Device& device, UnorderedAccessResource& unorderedAccessResource, const int& registerNo) : void
	}

	class DescriptorHeapDSV {
		+DescriptorHeapDSV()
		+~DescriptorHeapDSV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_dsvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_registedDSVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+RegistDescriptor(ID3D12Device& device, DepthStencilBuffer& buffer) : void
	}

	class DescriptorHeapRTV {
		+DescriptorHeapRTV()
		+~DescriptorHeapRTV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetNextCPUDescriptorHandle() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_rtvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_nextHandleLocation : UINT
		-_registedRTVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+{static} MAXDESCRIPTORNUM : static constexpr UINT
		+RegistDescriptor(ID3D12Device& device, RenderTargetBuffer& buffer, DXGI_FORMAT format, bool isCubeMap) : void
	}

	class Dx12GraphicsEngine {
		-Dx12GraphicsEngine()
		-~Dx12GraphicsEngine()
		-m_scissorRect : CD3DX12_RECT
		-m_viewport : CD3DX12_VIEWPORT
		+GetViewport() : CD3DX12_VIEWPORT&
		-_depthStencilBuffer : DX12Wrapper::DepthStencilBuffer
		-depthStencilBufferData : DX12Wrapper::DepthStencilBufferData
		-m_imguiHeap : DX12Wrapper::DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DX12Wrapper::DescriptorHeapDSV
		-_frameHeap : DX12Wrapper::DescriptorHeapRTV
		+GetFrameBufferDescriptorHeap() : DX12Wrapper::DescriptorHeapRTV&
		-_frameBuffers : DX12Wrapper::RenderTargetBuffer
		-m_renderContext : DX12Wrapper::RenderingContext
		+GetRenderingContext() : DX12Wrapper::RenderingContext&
		+{static} Instance() : Dx12GraphicsEngine&
		-CreateCommandX() : HRESULT
		-CreateDeviceAndDXGIFactory() : HRESULT
		-CreateFence() : HRESULT
		-CreateSwapChain(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight, const Microsoft::WRL::ComPtr<IDXGIFactory4>& dxgiFactory) : HRESULT
		-EnableDebugLayer() : HRESULT
		-_hwnd : HWND
		+CmdAllocator() : ID3D12CommandAllocator&
		+CmdQueue() : ID3D12CommandQueue&
		+Device() : ID3D12Device&
		+CmdList() : ID3D12GraphicsCommandList&
		+SwapChain() : IDXGISwapChain3&
		-_cmdAllocator : Microsoft::WRL::ComPtr<ID3D12CommandAllocator>
		-_cmdQueue : Microsoft::WRL::ComPtr<ID3D12CommandQueue>
		-_device : Microsoft::WRL::ComPtr<ID3D12Device>
		-_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-_cmdList : Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>
		-_dxgiFactory : Microsoft::WRL::ComPtr<IDXGIFactory4>
		-_swapchain : Microsoft::WRL::ComPtr<IDXGISwapChain3>
		-_fenceVal : UINT
		-_windowHeight : UINT
		-_windowWidth : UINT
		-CreateFrameRenderTarget() : Utility::RESULT
		+Init(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight) : Utility::RESULT
		-{static} DOUBLE_BUFFER : static constexpr UINT
		-m_graphicsMemory : std::unique_ptr<DirectX::GraphicsMemory>
		+BeginDraw() : void
		+EndDraw() : void
		+SetFrameRenderTarget(const CD3DX12_VIEWPORT& viewport, const CD3DX12_RECT& scissorRect) : void
	}

	class FontRenderer {
		+FontRenderer()
		+~FontRenderer()
		+{static} Instance() : FontRenderer&
		-m_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-m_fenceVal : UINT64
		+Init(const std::wstring& fontPath) : Utility::RESULT
		-m_spriteBatch : std::unique_ptr<DirectX::SpriteBatch>
		-m_spriteFont : std::unique_ptr<DirectX::SpriteFont>
		-m_fontHeap : std::unique_ptr<class DescriptorHeapCBV_SRV_UAV>
		+DrawString(const std::wstring& text, const DirectX::XMFLOAT2& pos, const float& scale, const DirectX::XMVECTORF32& color) : void
	}

	class GraphicsPipelineState {
		+GraphicsPipelineState()
		+~GraphicsPipelineState()
		-_pipelineStateDesc : D3D12_GRAPHICS_PIPELINE_STATE_DESC
		-CreateGraphicsPipelineState(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : HRESULT
		+GetPipelineState() : ID3D12PipelineState&
		-_pipelineState : Microsoft::WRL::ComPtr<ID3D12PipelineState>
		+Create(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : Utility::RESULT
	}

	class IndexBuffer {
		+IndexBuffer()
		+~IndexBuffer()
		-_indexBufferView : D3D12_INDEX_BUFFER_VIEW
		+GetView() : D3D12_INDEX_BUFFER_VIEW& {query}
		-CreateIndexBufferAndView(ID3D12Device& device, const std::vector<UINT>& index) : HRESULT
		-MapIndexBuffer(const std::vector<UINT>& index) : HRESULT
		-_indexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetIndexNum() : UINT {query}
		-_indexNum : UINT
		-_indexMap : UINT*
		+Create(ID3D12Device& device, const std::vector<UINT>& index) : Utility::RESULT
	}

	class RenderTarget {
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_renderTargetData : RenderTargetData
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, RenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class RenderTargetBuffer {
		+RenderTargetBuffer()
		+~RenderTargetBuffer()
		+GetBuffer() : ID3D12Resource&
		-_rtvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const RenderTargetBufferData& data) : Utility::RESULT
		+Create(ID3D12Device& device, IDXGISwapChain3& swapchain, const size_t& index) : Utility::RESULT
	}

	class RenderingContext {
		+RenderingContext()
		+~RenderingContext()
		-_cmdList : ID3D12GraphicsCommandList*
		+ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE dsvHandle, D3D12_CLEAR_FLAGS clearFlags, const FLOAT& clearDepth, const UINT8& clearStencil, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const DirectX::XMFLOAT4& color, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const float* color, const UINT& numRects, const D3D12_RECT* rects) : void
		+Close() : void
		+CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION& src, const D3D12_TEXTURE_COPY_LOCATION& dst, const UINT& dstX, const UINT& dstY, const UINT& dstZ, D3D12_BOX* srcBox) : void
		+DrawIndexedInstanced(const UINT& indexNumPerInstance, const UINT& instanceNum, const UINT startIndexLocation, const INT& baseVertexLocation, const UINT& startInstanceLocation) : void
		+DrawInstanced(const UINT& vertexNumPerInstance, const UINT& instanceNum, const UINT& startVertexLocation, const UINT& startInstanceLocation) : void
		+Init(ID3D12GraphicsCommandList& cmdList) : void
		+Reset(ID3D12CommandAllocator& cmdAlloc) : void
		+SetDescriptorHeap(ID3D12DescriptorHeap* const* descriptorHeap) : void
		+SetDescriptorHeap(DescriptorHeapCBV_SRV_UAV& descriptorHeap) : void
		+SetDescriptorHeaps(const UINT& descriptorHeapNum, ID3D12DescriptorHeap* const* descriptorHeaps) : void
		+SetGraphicsRootDescriptorTable(const UINT& rootPrameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE handle) : void
		+SetGraphicsRootSignature(RootSignature& rootSignature) : void
		+SetIndexBuffer(const IndexBuffer& indexBuffer) : void
		+SetPipelineState(GraphicsPipelineState& pipelineState) : void
		+SetPrimitiveTopology(const D3D12_PRIMITIVE_TOPOLOGY& primitiveTopology) : void
		+SetRenderTarget(const D3D12_CPU_DESCRIPTOR_HANDLE* rtvHandle, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetRenderTargets(const UINT& rtvNum, const D3D12_CPU_DESCRIPTOR_HANDLE rtvHandles, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetScissorRect(const D3D12_RECT& scissorRect) : void
		+SetScissorRects(const UINT& scissorRectNum, const D3D12_RECT& scissorRect) : void
		+SetVertexBuffer(const UINT& startSlot, const VertexBuffer& vertexBuffer) : void
		+SetViewport(const D3D12_VIEWPORT& viewport) : void
		+SetViewports(const UINT& viewportNum, const D3D12_VIEWPORT& viewports) : void
		+TransitionResourceState(ID3D12Resource& resource, D3D12_RESOURCE_STATES presentState, D3D12_RESOURCE_STATES afterState) : void
	}

	class RootSignature {
		+RootSignature()
		+~RootSignature()
		-CreateRootSignature(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : HRESULT
		+GetRootSignature() : ID3D12RootSignature& {query}
		-_rootSignature : Microsoft::WRL::ComPtr<ID3D12RootSignature>
		+Create(ID3D12Device& device, const RootSignatureData& data) : Utility::RESULT
		+Create(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : Utility::RESULT
	}

	class Shader {
		+Shader()
		+~Shader()
		-CompileShader(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderTypeAndVersion) : HRESULT
		+GetShader() : ID3DBlob& {query}
		-_errorBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		-_shaderBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		+Create(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType) : Utility::RESULT
		+Create(const ShaderData& shaderData) : Utility::RESULT
	}

	class Texture {
		+Texture()
		+~Texture()
		+GetImage() : DirectX::Image&
		-_scratchImage : DirectX::ScratchImage
		-_metaData : DirectX::TexMetadata
		+GetTexMetadata() : DirectX::TexMetadata&
		-CopyCubeTexture(Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CopyTexture(ID3D12Device& device, Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CreateUploadAndCubeTextureBuffer(ID3D12Device& device) : HRESULT
		-CreateUploadAndTextureBuffer(ID3D12Device& device) : HRESULT
		-LoadTextureFromDDSFile(const std::wstring& texturePath) : HRESULT
		-LoadTextureFromWICFile(const std::wstring& texturePath) : HRESULT
		-MapTexture() : HRESULT
		+GetBuffer() : ID3D12Resource& {query}
		-_textureBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_uploadBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+operator=(const Texture& inst) : Texture&
		+CreateCubeTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromConstantData(Dx12GraphicsEngine& graphicsEngine, uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : Utility::RESULT
		+CreateTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromWIC(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		-_image : const DirectX::Image*
		-_subresources : std::vector<D3D12_SUBRESOURCE_DATA>
		+CreateTextureFromDepthStencil(DepthStencilBuffer& depthStencilBuffer) : void
		+CreateTextureFromRenderTarget(RenderTargetBuffer& renderTargetBuffer) : void
		-SetTextureData(uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : void
	}

	class VertexBuffer {
		+VertexBuffer()
		+~VertexBuffer()
		-_vertexBufferView : D3D12_VERTEX_BUFFER_VIEW
		+GetView() : D3D12_VERTEX_BUFFER_VIEW& {query}
		-CreateVertexBufferAndView(ID3D12Device& device, const UINT& sizeInBytes, const UINT& stribeInBytes) : HRESULT
		-MapVertexBuffer(void* vertexData, const UINT& sizeInBytes) : HRESULT
		-_vertexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetVertexNum() : UINT {query}
		-_vertexNum : UINT
		+Create(ID3D12Device& device, void* vertexData, const UINT& sizeInBytes, const UINT& stribeInBytes) : Utility::RESULT
	}

	enum DESCRIPTORTYPE {
		DESCRIPTORTYPE_CBV
		DESCRIPTORTYPE_NUM
		DESCRIPTORTYPE_SRV
		DESCRIPTORTYPE_UAV
	}

	class CubeRenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+useDepth : bool
	}

	class DepthStencilBufferData {
		+DepthStencilBufferData(const DXGI_FORMAT& depthFormat, const UINT& width, const UINT& height, const float& clearDepth, const UINT8& clearStencil)
		+depthFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearStencil : UINT8
		+clearDepth : float
	}

	class DescriptorRangeData {
		+DescriptorRangeData(UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+cbvDescriptorNum : UINT
		+srvDescriptorNum : UINT
		+uavDescriptorNum : UINT
	}

	class InputLayout {
		+GetData() : D3D12_INPUT_ELEMENT_DESC*
		+{static} DefaultLayout() : InputLayout
		+GetSize() : UINT
		+inputElementDescs : std::vector<D3D12_INPUT_ELEMENT_DESC>
		+Append(const char* semanticName, UINT semanticIndex, DXGI_FORMAT format, UINT inputSlot, UINT alignedByteOffset, D3D12_INPUT_CLASSIFICATION inputSlotClass, UINT instanceDataStepRate) : void
	}

	class RenderTargetBufferData {
		+RenderTargetBufferData(const DXGI_FORMAT& colorFormat, const UINT& width, const UINT& height, const float (& clearColor ))
		+colorFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearColor : float
	}

	class RenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+isCubeMap : bool
		+useDepth : bool
	}

	class RootSignatureData {
		+RootSignatureData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW, UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+RootSignatureData(SamplerData samplerData, DescriptorRangeData descRangeData)
		+_descRangeData : DescriptorRangeData
		+_samplerData : SamplerData
	}

	class SamplerData {
		+SamplerData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW)
		+samplerFilter : D3D12_FILTER
		+addressU : D3D12_TEXTURE_ADDRESS_MODE
		+addressV : D3D12_TEXTURE_ADDRESS_MODE
		+addressW : D3D12_TEXTURE_ADDRESS_MODE
	}

	class ShaderData {
		+ShaderData(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType)
		+ShaderData()
		+shaderFilePass : const TCHAR*
		+entoryPointName : const char*
		+shaderType : const char*
	}

	class ShaderResourceViewDesc {
		+ShaderResourceViewDesc(Texture& texture, bool isCubeTex)
		+~ShaderResourceViewDesc()
		+desc : D3D12_SHADER_RESOURCE_VIEW_DESC
	}
}





/' Inheritance relationships '/




/' Aggregation relationships '/

DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.CubeRenderTargetData


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.CubeRenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.DepthStencilBuffer *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderingContext


DX12Wrapper.FontRenderer *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetData


DX12Wrapper.RenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.RenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.RenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.DescriptorRangeData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.SamplerData






/' Nested objects '/



@enduml

@startuml






namespace DX12Wrapper {
	class ConstantBuffer {
		+ConstantBuffer()
		+~ConstantBuffer()
		-_mappedData : BYTE*
		+GetGPUVirtualAddress() : D3D12_GPU_VIRTUAL_ADDRESS
		-CreateConstantBuffer(ID3D12Device& device, const UINT& bufferSize) : HRESULT
		-MapConstantBuffer(void* data, const UINT& bufferSize) : HRESULT
		+GetBuffer() : ID3D12Resource&
		-_constantBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_bufferSize : UINT
		+GetBufferSize() : UINT&
		+Create(ID3D12Device& device, void* data, const UINT& bufferSize) : Utility::RESULT
		+UpdateData(void* data) : void
	}

	class CubeRenderTarget {
		-_renderTargetData : CubeRenderTargetData
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, CubeRenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class DepthStencilBuffer {
		+DepthStencilBuffer()
		+~DepthStencilBuffer()
		+GetDepthStencilBufferData() : DepthStencilBufferData
		-_depthStencilBufferData : DepthStencilBufferData
		+GetBuffer() : ID3D12Resource&
		-_dsvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const DepthStencilBufferData& data) : Utility::RESULT
	}

	class DescriptorHeapCBV_SRV_UAV {
		+DescriptorHeapCBV_SRV_UAV()
		+~DescriptorHeapCBV_SRV_UAV()
		+GetGPUHandle() : CD3DX12_GPU_DESCRIPTOR_HANDLE
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartCBV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartSRV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartUAV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetSRVHandle(int index) : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		+GetDescriptorHeapAddress() : ID3D12DescriptorHeap*
		-_descriptorHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		-_registedCBVNum : UINT
		-_registedSRVNum : UINT
		-_registedUAVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+IsRegistedConstantBuffer() : bool
		+IsRegistedShaderResource() : bool
		+IsRegistedUnorderedAccessResource() : bool
		-{static} _MAX_CBV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_SRV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_UAV_DESCRIPTOR_NUM : static constexpr UINT
		+{static} NEXT_REGISTER : static constexpr int
		+RegistConstantBuffer(ID3D12Device& device, ConstantBuffer& constantBuffer, const int& registerNo) : void
		+RegistShaderResource(ID3D12Device& device, Texture& texture, ShaderResourceViewDesc& desc, const int& registerNo) : void
		+RegistUnorderedAccessResource(ID3D12Device& device, UnorderedAccessResource& unorderedAccessResource, const int& registerNo) : void
	}

	class DescriptorHeapDSV {
		+DescriptorHeapDSV()
		+~DescriptorHeapDSV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_dsvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_registedDSVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+RegistDescriptor(ID3D12Device& device, DepthStencilBuffer& buffer) : void
	}

	class DescriptorHeapRTV {
		+DescriptorHeapRTV()
		+~DescriptorHeapRTV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetNextCPUDescriptorHandle() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_rtvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_nextHandleLocation : UINT
		-_registedRTVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+{static} MAXDESCRIPTORNUM : static constexpr UINT
		+RegistDescriptor(ID3D12Device& device, RenderTargetBuffer& buffer, DXGI_FORMAT format, bool isCubeMap) : void
	}

	class Dx12GraphicsEngine {
		-Dx12GraphicsEngine()
		-~Dx12GraphicsEngine()
		-m_scissorRect : CD3DX12_RECT
		-m_viewport : CD3DX12_VIEWPORT
		+GetViewport() : CD3DX12_VIEWPORT&
		-_depthStencilBuffer : DX12Wrapper::DepthStencilBuffer
		-depthStencilBufferData : DX12Wrapper::DepthStencilBufferData
		-m_imguiHeap : DX12Wrapper::DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DX12Wrapper::DescriptorHeapDSV
		-_frameHeap : DX12Wrapper::DescriptorHeapRTV
		+GetFrameBufferDescriptorHeap() : DX12Wrapper::DescriptorHeapRTV&
		-_frameBuffers : DX12Wrapper::RenderTargetBuffer
		-m_renderContext : DX12Wrapper::RenderingContext
		+GetRenderingContext() : DX12Wrapper::RenderingContext&
		+{static} Instance() : Dx12GraphicsEngine&
		-CreateCommandX() : HRESULT
		-CreateDeviceAndDXGIFactory() : HRESULT
		-CreateFence() : HRESULT
		-CreateSwapChain(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight, const Microsoft::WRL::ComPtr<IDXGIFactory4>& dxgiFactory) : HRESULT
		-EnableDebugLayer() : HRESULT
		-_hwnd : HWND
		+CmdAllocator() : ID3D12CommandAllocator&
		+CmdQueue() : ID3D12CommandQueue&
		+Device() : ID3D12Device&
		+CmdList() : ID3D12GraphicsCommandList&
		+SwapChain() : IDXGISwapChain3&
		-_cmdAllocator : Microsoft::WRL::ComPtr<ID3D12CommandAllocator>
		-_cmdQueue : Microsoft::WRL::ComPtr<ID3D12CommandQueue>
		-_device : Microsoft::WRL::ComPtr<ID3D12Device>
		-_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-_cmdList : Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>
		-_dxgiFactory : Microsoft::WRL::ComPtr<IDXGIFactory4>
		-_swapchain : Microsoft::WRL::ComPtr<IDXGISwapChain3>
		-_fenceVal : UINT
		-_windowHeight : UINT
		-_windowWidth : UINT
		-CreateFrameRenderTarget() : Utility::RESULT
		+Init(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight) : Utility::RESULT
		-{static} DOUBLE_BUFFER : static constexpr UINT
		-m_graphicsMemory : std::unique_ptr<DirectX::GraphicsMemory>
		+BeginDraw() : void
		+EndDraw() : void
		+SetFrameRenderTarget(const CD3DX12_VIEWPORT& viewport, const CD3DX12_RECT& scissorRect) : void
	}

	class FontRenderer {
		+FontRenderer()
		+~FontRenderer()
		+{static} Instance() : FontRenderer&
		-m_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-m_fenceVal : UINT64
		+Init(const std::wstring& fontPath) : Utility::RESULT
		-m_spriteBatch : std::unique_ptr<DirectX::SpriteBatch>
		-m_spriteFont : std::unique_ptr<DirectX::SpriteFont>
		-m_fontHeap : std::unique_ptr<class DescriptorHeapCBV_SRV_UAV>
		+DrawString(const std::wstring& text, const DirectX::XMFLOAT2& pos, const float& scale, const DirectX::XMVECTORF32& color) : void
	}

	class GraphicsPipelineState {
		+GraphicsPipelineState()
		+~GraphicsPipelineState()
		-_pipelineStateDesc : D3D12_GRAPHICS_PIPELINE_STATE_DESC
		-CreateGraphicsPipelineState(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : HRESULT
		+GetPipelineState() : ID3D12PipelineState&
		-_pipelineState : Microsoft::WRL::ComPtr<ID3D12PipelineState>
		+Create(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : Utility::RESULT
	}

	class IndexBuffer {
		+IndexBuffer()
		+~IndexBuffer()
		-_indexBufferView : D3D12_INDEX_BUFFER_VIEW
		+GetView() : D3D12_INDEX_BUFFER_VIEW& {query}
		-CreateIndexBufferAndView(ID3D12Device& device, const std::vector<UINT>& index) : HRESULT
		-MapIndexBuffer(const std::vector<UINT>& index) : HRESULT
		-_indexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetIndexNum() : UINT {query}
		-_indexNum : UINT
		-_indexMap : UINT*
		+Create(ID3D12Device& device, const std::vector<UINT>& index) : Utility::RESULT
	}

	class RenderTarget {
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_renderTargetData : RenderTargetData
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, RenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class RenderTargetBuffer {
		+RenderTargetBuffer()
		+~RenderTargetBuffer()
		+GetBuffer() : ID3D12Resource&
		-_rtvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const RenderTargetBufferData& data) : Utility::RESULT
		+Create(ID3D12Device& device, IDXGISwapChain3& swapchain, const size_t& index) : Utility::RESULT
	}

	class RenderingContext {
		+RenderingContext()
		+~RenderingContext()
		-_cmdList : ID3D12GraphicsCommandList*
		+ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE dsvHandle, D3D12_CLEAR_FLAGS clearFlags, const FLOAT& clearDepth, const UINT8& clearStencil, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const DirectX::XMFLOAT4& color, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const float* color, const UINT& numRects, const D3D12_RECT* rects) : void
		+Close() : void
		+CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION& src, const D3D12_TEXTURE_COPY_LOCATION& dst, const UINT& dstX, const UINT& dstY, const UINT& dstZ, D3D12_BOX* srcBox) : void
		+DrawIndexedInstanced(const UINT& indexNumPerInstance, const UINT& instanceNum, const UINT startIndexLocation, const INT& baseVertexLocation, const UINT& startInstanceLocation) : void
		+DrawInstanced(const UINT& vertexNumPerInstance, const UINT& instanceNum, const UINT& startVertexLocation, const UINT& startInstanceLocation) : void
		+Init(ID3D12GraphicsCommandList& cmdList) : void
		+Reset(ID3D12CommandAllocator& cmdAlloc) : void
		+SetDescriptorHeap(ID3D12DescriptorHeap* const* descriptorHeap) : void
		+SetDescriptorHeap(DescriptorHeapCBV_SRV_UAV& descriptorHeap) : void
		+SetDescriptorHeaps(const UINT& descriptorHeapNum, ID3D12DescriptorHeap* const* descriptorHeaps) : void
		+SetGraphicsRootDescriptorTable(const UINT& rootPrameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE handle) : void
		+SetGraphicsRootSignature(RootSignature& rootSignature) : void
		+SetIndexBuffer(const IndexBuffer& indexBuffer) : void
		+SetPipelineState(GraphicsPipelineState& pipelineState) : void
		+SetPrimitiveTopology(const D3D12_PRIMITIVE_TOPOLOGY& primitiveTopology) : void
		+SetRenderTarget(const D3D12_CPU_DESCRIPTOR_HANDLE* rtvHandle, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetRenderTargets(const UINT& rtvNum, const D3D12_CPU_DESCRIPTOR_HANDLE rtvHandles, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetScissorRect(const D3D12_RECT& scissorRect) : void
		+SetScissorRects(const UINT& scissorRectNum, const D3D12_RECT& scissorRect) : void
		+SetVertexBuffer(const UINT& startSlot, const VertexBuffer& vertexBuffer) : void
		+SetViewport(const D3D12_VIEWPORT& viewport) : void
		+SetViewports(const UINT& viewportNum, const D3D12_VIEWPORT& viewports) : void
		+TransitionResourceState(ID3D12Resource& resource, D3D12_RESOURCE_STATES presentState, D3D12_RESOURCE_STATES afterState) : void
	}

	class RootSignature {
		+RootSignature()
		+~RootSignature()
		-CreateRootSignature(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : HRESULT
		+GetRootSignature() : ID3D12RootSignature& {query}
		-_rootSignature : Microsoft::WRL::ComPtr<ID3D12RootSignature>
		+Create(ID3D12Device& device, const RootSignatureData& data) : Utility::RESULT
		+Create(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : Utility::RESULT
	}

	class Shader {
		+Shader()
		+~Shader()
		-CompileShader(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderTypeAndVersion) : HRESULT
		+GetShader() : ID3DBlob& {query}
		-_errorBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		-_shaderBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		+Create(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType) : Utility::RESULT
		+Create(const ShaderData& shaderData) : Utility::RESULT
	}

	class Texture {
		+Texture()
		+~Texture()
		+GetImage() : DirectX::Image&
		-_scratchImage : DirectX::ScratchImage
		-_metaData : DirectX::TexMetadata
		+GetTexMetadata() : DirectX::TexMetadata&
		-CopyCubeTexture(Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CopyTexture(ID3D12Device& device, Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CreateUploadAndCubeTextureBuffer(ID3D12Device& device) : HRESULT
		-CreateUploadAndTextureBuffer(ID3D12Device& device) : HRESULT
		-LoadTextureFromDDSFile(const std::wstring& texturePath) : HRESULT
		-LoadTextureFromWICFile(const std::wstring& texturePath) : HRESULT
		-MapTexture() : HRESULT
		+GetBuffer() : ID3D12Resource& {query}
		-_textureBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_uploadBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+operator=(const Texture& inst) : Texture&
		+CreateCubeTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromConstantData(Dx12GraphicsEngine& graphicsEngine, uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : Utility::RESULT
		+CreateTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromWIC(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		-_image : const DirectX::Image*
		-_subresources : std::vector<D3D12_SUBRESOURCE_DATA>
		+CreateTextureFromDepthStencil(DepthStencilBuffer& depthStencilBuffer) : void
		+CreateTextureFromRenderTarget(RenderTargetBuffer& renderTargetBuffer) : void
		-SetTextureData(uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : void
	}

	class VertexBuffer {
		+VertexBuffer()
		+~VertexBuffer()
		-_vertexBufferView : D3D12_VERTEX_BUFFER_VIEW
		+GetView() : D3D12_VERTEX_BUFFER_VIEW& {query}
		-CreateVertexBufferAndView(ID3D12Device& device, const UINT& sizeInBytes, const UINT& stribeInBytes) : HRESULT
		-MapVertexBuffer(void* vertexData, const UINT& sizeInBytes) : HRESULT
		-_vertexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetVertexNum() : UINT {query}
		-_vertexNum : UINT
		+Create(ID3D12Device& device, void* vertexData, const UINT& sizeInBytes, const UINT& stribeInBytes) : Utility::RESULT
	}

	enum DESCRIPTORTYPE {
		DESCRIPTORTYPE_CBV
		DESCRIPTORTYPE_NUM
		DESCRIPTORTYPE_SRV
		DESCRIPTORTYPE_UAV
	}

	class CubeRenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+useDepth : bool
	}

	class DepthStencilBufferData {
		+DepthStencilBufferData(const DXGI_FORMAT& depthFormat, const UINT& width, const UINT& height, const float& clearDepth, const UINT8& clearStencil)
		+depthFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearStencil : UINT8
		+clearDepth : float
	}

	class DescriptorRangeData {
		+DescriptorRangeData(UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+cbvDescriptorNum : UINT
		+srvDescriptorNum : UINT
		+uavDescriptorNum : UINT
	}

	class InputLayout {
		+GetData() : D3D12_INPUT_ELEMENT_DESC*
		+{static} DefaultLayout() : InputLayout
		+GetSize() : UINT
		+inputElementDescs : std::vector<D3D12_INPUT_ELEMENT_DESC>
		+Append(const char* semanticName, UINT semanticIndex, DXGI_FORMAT format, UINT inputSlot, UINT alignedByteOffset, D3D12_INPUT_CLASSIFICATION inputSlotClass, UINT instanceDataStepRate) : void
	}

	class RenderTargetBufferData {
		+RenderTargetBufferData(const DXGI_FORMAT& colorFormat, const UINT& width, const UINT& height, const float (& clearColor ))
		+colorFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearColor : float
	}

	class RenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+isCubeMap : bool
		+useDepth : bool
	}

	class RootSignatureData {
		+RootSignatureData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW, UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+RootSignatureData(SamplerData samplerData, DescriptorRangeData descRangeData)
		+_descRangeData : DescriptorRangeData
		+_samplerData : SamplerData
	}

	class SamplerData {
		+SamplerData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW)
		+samplerFilter : D3D12_FILTER
		+addressU : D3D12_TEXTURE_ADDRESS_MODE
		+addressV : D3D12_TEXTURE_ADDRESS_MODE
		+addressW : D3D12_TEXTURE_ADDRESS_MODE
	}

	class ShaderData {
		+ShaderData(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType)
		+ShaderData()
		+shaderFilePass : const TCHAR*
		+entoryPointName : const char*
		+shaderType : const char*
	}

	class ShaderResourceViewDesc {
		+ShaderResourceViewDesc(Texture& texture, bool isCubeTex)
		+~ShaderResourceViewDesc()
		+desc : D3D12_SHADER_RESOURCE_VIEW_DESC
	}
}










DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.CubeRenderTargetData


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.CubeRenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.DepthStencilBuffer *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderingContext


DX12Wrapper.FontRenderer *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetData


DX12Wrapper.RenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.RenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.RenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.DescriptorRangeData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.SamplerData









@enduml

PlantUML version 1.2022.7(Tue Aug 23 02:01:30 JST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: MS932
Language: ja
Country: JP
--></g></svg>