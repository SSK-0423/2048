<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="4095px" preserveAspectRatio="none" style="width:19632px;height:4095px;background:#FFFFFF;" version="1.1" viewBox="0 0 19632 4095" width="19632px" zoomAndPan="magnify"><defs/><g><!--MD5=[76ce0ed0bc115f21bb1602e6b80d6725]
cluster Game2048--><g id="cluster_Game2048"><path d="M8.5,1211 L81.5,1211 A3.75,3.75 0 0 1 84,1213.5 L91,1234.6094 L3789.5,1234.6094 A2.5,2.5 0 0 1 3792,1237.1094 L3792,2007 A2.5,2.5 0 0 1 3789.5,2009.5 L8.5,2009.5 A2.5,2.5 0 0 1 6,2007 L6,1213.5 A2.5,2.5 0 0 1 8.5,1211 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="91" y1="1234.6094" y2="1234.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="72" x="10" y="1227.5332">Game2048</text></g><!--MD5=[a3db38b29c3436960cdd3b658ea5cf84]
cluster Framework--><g id="cluster_Framework"><path d="M3818.5,6 L3897.5,6 A3.75,3.75 0 0 1 3900,8.5 L3907,29.6094 L6746.5,29.6094 A2.5,2.5 0 0 1 6749,32.1094 L6749,2909.5 A2.5,2.5 0 0 1 6746.5,2912 L3818.5,2912 A2.5,2.5 0 0 1 3816,2909.5 L3816,8.5 A2.5,2.5 0 0 1 3818.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3816" x2="3907" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="78" x="3820" y="22.5332">Framework</text></g><!--MD5=[c97e9a9cfa9deabdd062feba0846bb18]
cluster DX12Wrapper--><g id="cluster_DX12Wrapper"><path d="M6775.5,2416 L6871.5,2416 A3.75,3.75 0 0 1 6874,2418.5 L6881,2439.6094 L19622.5,2439.6094 A2.5,2.5 0 0 1 19625,2442.1094 L19625,4085.5 A2.5,2.5 0 0 1 19622.5,4088 L6775.5,4088 A2.5,2.5 0 0 1 6773,4085.5 L6773,2418.5 A2.5,2.5 0 0 1 6775.5,2416 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6773" x2="6881" y1="2439.6094" y2="2439.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="95" x="6777" y="2432.5332">DX12Wrapper</text></g><!--MD5=[4c636a34c13e801d0c480ad53dc0b798]
class Game2048.Game2048--><g id="elem_Game2048.Game2048"><rect codeLine="9" fill="#F1F1F1" height="118.4375" id="Game2048.Game2048" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="114" x="326" y="1423.5"/><ellipse cx="346.4" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M350.0875,1440.7031 Q349.8375,1444.1875 348.6969,1445.3438 Q347.6656,1446.3594 346.2594,1446.3594 Q344.8531,1446.3594 343.8219,1445.3438 Q342.0719,1443.5781 342.0719,1439.9063 Q342.0719,1435.6563 343.9469,1433.75 Q344.9938,1432.7344 346.3219,1432.7344 Q347.7281,1432.7344 348.5719,1433.5469 Q350.0563,1435.0625 349.9781,1437.9375 L347.8531,1437.9375 Q347.775,1435.6094 347.1344,1434.9688 Q346.8531,1434.6719 346.3219,1434.6719 Q345.8688,1434.6719 345.5094,1435.0469 Q344.275,1436.2656 344.275,1439.7813 Q344.275,1442.8281 345.3219,1443.8438 Q345.7438,1444.2813 346.2594,1444.2813 Q346.7125,1444.2813 347.15,1443.8438 Q347.7125,1443.2969 347.7906,1440.7031 L350.0875,1440.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="361.6" y="1445.2285">Game2048</text><line style="stroke:#181818;stroke-width:0.5;" x1="327" x2="439" y1="1455.5" y2="1455.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="327" x2="439" y1="1463.5" y2="1463.5"/><ellipse cx="337" cy="1477.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="346" y="1482.0332">Game2048()</text><ellipse cx="337" cy="1495.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="346" y="1499.6426">~Game2048()</text><ellipse cx="337" cy="1513.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="346" y="1517.252">Final() : void</text><ellipse cx="337" cy="1530.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="346" y="1534.8613">Init() : void</text></g><!--MD5=[143e6f982b969b2c771dfa4af232e750]
class Game2048.GameScene--><g id="elem_Game2048.GameScene"><rect codeLine="16" fill="#F1F1F1" height="118.4375" id="Game2048.GameScene" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="22" y="1423.5"/><ellipse cx="42.4" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M46.0875,1440.7031 Q45.8375,1444.1875 44.6969,1445.3438 Q43.6656,1446.3594 42.2594,1446.3594 Q40.8531,1446.3594 39.8219,1445.3438 Q38.0719,1443.5781 38.0719,1439.9063 Q38.0719,1435.6563 39.9469,1433.75 Q40.9938,1432.7344 42.3219,1432.7344 Q43.7281,1432.7344 44.5719,1433.5469 Q46.0563,1435.0625 45.9781,1437.9375 L43.8531,1437.9375 Q43.775,1435.6094 43.1344,1434.9688 Q42.8531,1434.6719 42.3219,1434.6719 Q41.8688,1434.6719 41.5094,1435.0469 Q40.275,1436.2656 40.275,1439.7813 Q40.275,1442.8281 41.3219,1443.8438 Q41.7438,1444.2813 42.2594,1444.2813 Q42.7125,1444.2813 43.15,1443.8438 Q43.7125,1443.2969 43.7906,1440.7031 L46.0875,1440.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="57.6" y="1445.2285">GameScene</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="143" y1="1455.5" y2="1455.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="143" y1="1463.5" y2="1463.5"/><ellipse cx="33" cy="1477.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="42" y="1482.0332">GameScene()</text><ellipse cx="33" cy="1495.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="42" y="1499.6426">~GameScene()</text><ellipse cx="33" cy="1513.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="42" y="1517.252">Final() : void</text><ellipse cx="33" cy="1530.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="42" y="1534.8613">Init() : void</text></g><!--MD5=[339339ce73ebd7f6400ea39ce48cb19a]
class Game2048.GameSceneCanvas--><g id="elem_Game2048.GameSceneCanvas"><rect codeLine="23" fill="#F1F1F1" height="118.4375" id="Game2048.GameSceneCanvas" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="1154" y="1423.5"/><ellipse cx="1174.4" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1178.0875,1440.7031 Q1177.8375,1444.1875 1176.6969,1445.3438 Q1175.6656,1446.3594 1174.2594,1446.3594 Q1172.8531,1446.3594 1171.8219,1445.3438 Q1170.0719,1443.5781 1170.0719,1439.9063 Q1170.0719,1435.6563 1171.9469,1433.75 Q1172.9938,1432.7344 1174.3219,1432.7344 Q1175.7281,1432.7344 1176.5719,1433.5469 Q1178.0563,1435.0625 1177.9781,1437.9375 L1175.8531,1437.9375 Q1175.775,1435.6094 1175.1344,1434.9688 Q1174.8531,1434.6719 1174.3219,1434.6719 Q1173.8688,1434.6719 1173.5094,1435.0469 Q1172.275,1436.2656 1172.275,1439.7813 Q1172.275,1442.8281 1173.3219,1443.8438 Q1173.7438,1444.2813 1174.2594,1444.2813 Q1174.7125,1444.2813 1175.15,1443.8438 Q1175.7125,1443.2969 1175.7906,1440.7031 L1178.0875,1440.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1189.6" y="1445.2285">GameSceneCanvas</text><line style="stroke:#181818;stroke-width:0.5;" x1="1155" x2="1323" y1="1455.5" y2="1455.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1155" x2="1323" y1="1463.5" y2="1463.5"/><ellipse cx="1165" cy="1477.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="1174" y="1482.0332">GameSceneCanvas()</text><ellipse cx="1165" cy="1495.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1174" y="1499.6426">~GameSceneCanvas()</text><ellipse cx="1165" cy="1513.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1174" y="1517.252">Final() : void</text><ellipse cx="1165" cy="1530.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1174" y="1534.8613">Init() : void</text></g><!--MD5=[583b407578065590f7240991331a4d7d]
class Game2048.GameTimer--><g id="elem_Game2048.GameTimer"><rect codeLine="30" fill="#F1F1F1" height="136.0469" id="Game2048.GameTimer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="276" x="2242" y="1414.5"/><ellipse cx="2338.75" cy="1430.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2342.4375,1431.7031 Q2342.1875,1435.1875 2341.0469,1436.3438 Q2340.0156,1437.3594 2338.6094,1437.3594 Q2337.2031,1437.3594 2336.1719,1436.3438 Q2334.4219,1434.5781 2334.4219,1430.9063 Q2334.4219,1426.6563 2336.2969,1424.75 Q2337.3438,1423.7344 2338.6719,1423.7344 Q2340.0781,1423.7344 2340.9219,1424.5469 Q2342.4063,1426.0625 2342.3281,1428.9375 L2340.2031,1428.9375 Q2340.125,1426.6094 2339.4844,1425.9688 Q2339.2031,1425.6719 2338.6719,1425.6719 Q2338.2188,1425.6719 2337.8594,1426.0469 Q2336.625,1427.2656 2336.625,1430.7813 Q2336.625,1433.8281 2337.6719,1434.8438 Q2338.0938,1435.2813 2338.6094,1435.2813 Q2339.0625,1435.2813 2339.5,1434.8438 Q2340.0625,1434.2969 2340.1406,1431.7031 L2342.4375,1431.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="2359.25" y="1436.2285">GameTimer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2243" x2="2517" y1="1446.5" y2="1446.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2250" y="1457.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="2262" y="1465.0332">m_elapsedTime : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="2243" x2="2517" y1="1472.1094" y2="1472.1094"/><ellipse cx="2253" cy="1486.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="2262" y="1490.6426">GameTimer(Framework::Object* owner)</text><ellipse cx="2253" cy="1504.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="2262" y="1508.252">~GameTimer()</text><ellipse cx="2253" cy="1521.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2262" y="1525.8613">Draw() : void</text><ellipse cx="2253" cy="1539.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="2262" y="1543.4707">Update(float deltaTime) : void</text></g><!--MD5=[1c5cc52da0ed3cb06ae4842d338367f4]
class Game2048.Grid--><g id="elem_Game2048.Grid"><rect codeLine="38" fill="#F1F1F1" height="470.625" id="Game2048.Grid" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="512" x="3264" y="1247"/><ellipse cx="3502.25" cy="1263" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3505.9375,1264.2031 Q3505.6875,1267.6875 3504.5469,1268.8438 Q3503.5156,1269.8594 3502.1094,1269.8594 Q3500.7031,1269.8594 3499.6719,1268.8438 Q3497.9219,1267.0781 3497.9219,1263.4063 Q3497.9219,1259.1563 3499.7969,1257.25 Q3500.8438,1256.2344 3502.1719,1256.2344 Q3503.5781,1256.2344 3504.4219,1257.0469 Q3505.9063,1258.5625 3505.8281,1261.4375 L3503.7031,1261.4375 Q3503.625,1259.1094 3502.9844,1258.4688 Q3502.7031,1258.1719 3502.1719,1258.1719 Q3501.7188,1258.1719 3501.3594,1258.5469 Q3500.125,1259.7656 3500.125,1263.2813 Q3500.125,1266.3281 3501.1719,1267.3438 Q3501.5938,1267.7813 3502.1094,1267.7813 Q3502.5625,1267.7813 3503,1267.3438 Q3503.5625,1266.7969 3503.6406,1264.2031 L3505.9375,1264.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="3522.75" y="1268.7285">Grid</text><line style="stroke:#181818;stroke-width:0.5;" x1="3265" x2="3775" y1="1279" y2="1279"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1290.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="3284" y="1297.5332">m_gameState : GAME_STATE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1307.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="3284" y="1315.1426">m_gridLeft : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1325.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="3284" y="1332.752">m_gridTop : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1343.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="3284" y="1350.3613">m_randomEngine : std::mt19937_64</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1360.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="3284" y="1367.9707">m_randomGenerator : std::uniform_real_distribution&lt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1378.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="3284" y="1385.5801">m_gameClearText : std::unique_ptr&lt;class Framework::Object&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1395.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="390" x="3284" y="1403.1895">m_gameOverText : std::unique_ptr&lt;class Framework::Object&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1413.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="3284" y="1420.7988">m_tiles : std::vector&lt;std::vector&lt;std::unique_ptr&lt;class Framework::Object&gt;&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1431.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="3284" y="1438.4082">m_grid : std::vector&lt;std::vector&lt;unsigned int&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="3265" x2="3775" y1="1445.4844" y2="1445.4844"/><ellipse cx="3275" cy="1459.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="3284" y="1464.0176">Grid(Framework::Object* owner)</text><ellipse cx="3275" cy="1477.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="45" x="3284" y="1481.627">~Grid()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1492.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="3284" y="1499.2363">CheckInputDirection() : INPUT_DIRECTION</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1509.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="3284" y="1516.8457">CheckGameClear() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1527.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="3284" y="1534.4551">CheckGameOver() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1544.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="3284" y="1552.0645">Move(INPUT_DIRECTION direction) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1562.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="3284" y="1569.6738">Union(INPUT_DIRECTION direction) : bool</text><ellipse cx="3275" cy="1583.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3284" y="1587.2832">Draw() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1597.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="3284" y="1604.8926">GameClear(float deltaTime) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1615.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="3284" y="1622.502">GameOver(float deltaTime) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1632.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="3284" y="1640.1113">Playing(float deltaTime) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1650.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="3284" y="1657.7207">SpawnTile(INPUT_DIRECTION direction) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1668.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="3284" y="1675.3301">TileDraw() : void</text><ellipse cx="3275" cy="1688.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="3284" y="1692.9395">Update(float deltaTime) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3272" y="1703.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="3284" y="1710.5488">UpdateTile(float deltaTime) : void</text></g><!--MD5=[df9843074aa3587d29d7aef2e12c6c63]
class Game2048.PressEnterText--><g id="elem_Game2048.PressEnterText"><rect codeLine="65" fill="#F1F1F1" height="136.0469" id="Game2048.PressEnterText" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="335" x="2893.5" y="1414.5"/><ellipse cx="3008.25" cy="1430.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3011.9375,1431.7031 Q3011.6875,1435.1875 3010.5469,1436.3438 Q3009.5156,1437.3594 3008.1094,1437.3594 Q3006.7031,1437.3594 3005.6719,1436.3438 Q3003.9219,1434.5781 3003.9219,1430.9063 Q3003.9219,1426.6563 3005.7969,1424.75 Q3006.8438,1423.7344 3008.1719,1423.7344 Q3009.5781,1423.7344 3010.4219,1424.5469 Q3011.9063,1426.0625 3011.8281,1428.9375 L3009.7031,1428.9375 Q3009.625,1426.6094 3008.9844,1425.9688 Q3008.7031,1425.6719 3008.1719,1425.6719 Q3007.7188,1425.6719 3007.3594,1426.0469 Q3006.125,1427.2656 3006.125,1430.7813 Q3006.125,1433.8281 3007.1719,1434.8438 Q3007.5938,1435.2813 3008.1094,1435.2813 Q3008.5625,1435.2813 3009,1434.8438 Q3009.5625,1434.2969 3009.6406,1431.7031 L3011.9375,1431.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="3028.75" y="1436.2285">PressEnterText</text><line style="stroke:#181818;stroke-width:0.5;" x1="2894.5" x2="3227.5" y1="1446.5" y2="1446.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2901.5" y="1457.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="2913.5" y="1465.0332">m_elapsedTime : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="2894.5" x2="3227.5" y1="1472.1094" y2="1472.1094"/><ellipse cx="2904.5" cy="1486.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="2913.5" y="1490.6426">PressEnterText(class Framework::Object* owner)</text><ellipse cx="2904.5" cy="1504.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2913.5" y="1508.252">~PressEnterText()</text><ellipse cx="2904.5" cy="1521.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2913.5" y="1525.8613">Draw() : void</text><ellipse cx="2904.5" cy="1539.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="2913.5" y="1543.4707">Update(float deltaTime) : void</text></g><!--MD5=[6e8c4a537435b2eed2c1c477ef546112]
class Game2048.QuitButton--><g id="elem_Game2048.QuitButton"><rect codeLine="73" fill="#F1F1F1" height="118.4375" id="Game2048.QuitButton" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="305" x="2553.5" y="1423.5"/><ellipse cx="2668.25" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2671.9375,1440.7031 Q2671.6875,1444.1875 2670.5469,1445.3438 Q2669.5156,1446.3594 2668.1094,1446.3594 Q2666.7031,1446.3594 2665.6719,1445.3438 Q2663.9219,1443.5781 2663.9219,1439.9063 Q2663.9219,1435.6563 2665.7969,1433.75 Q2666.8438,1432.7344 2668.1719,1432.7344 Q2669.5781,1432.7344 2670.4219,1433.5469 Q2671.9063,1435.0625 2671.8281,1437.9375 L2669.7031,1437.9375 Q2669.625,1435.6094 2668.9844,1434.9688 Q2668.7031,1434.6719 2668.1719,1434.6719 Q2667.7188,1434.6719 2667.3594,1435.0469 Q2666.125,1436.2656 2666.125,1439.7813 Q2666.125,1442.8281 2667.1719,1443.8438 Q2667.5938,1444.2813 2668.1094,1444.2813 Q2668.5625,1444.2813 2669,1443.8438 Q2669.5625,1443.2969 2669.6406,1440.7031 L2671.9375,1440.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="2688.75" y="1445.2285">QuitButton</text><line style="stroke:#181818;stroke-width:0.5;" x1="2554.5" x2="2857.5" y1="1455.5" y2="1455.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="2554.5" x2="2857.5" y1="1463.5" y2="1463.5"/><ellipse cx="2564.5" cy="1477.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="2573.5" y="1482.0332">QuitButton(class Framework::Object* owner)</text><ellipse cx="2564.5" cy="1495.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="2573.5" y="1499.6426">~QuitButton()</text><ellipse cx="2564.5" cy="1513.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2573.5" y="1517.252">Draw() : void</text><ellipse cx="2564.5" cy="1530.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="2573.5" y="1534.8613">Update(float deltaTime) : void</text></g><!--MD5=[c929866a9fc515bba284828d78bcc21a]
class Game2048.Renderer--><g id="elem_Game2048.Renderer"><rect codeLine="80" fill="#F1F1F1" height="136.0469" id="Game2048.Renderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="643" x="475.5" y="1414.5"/><ellipse cx="762.75" cy="1430.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M766.4375,1431.7031 Q766.1875,1435.1875 765.0469,1436.3438 Q764.0156,1437.3594 762.6094,1437.3594 Q761.2031,1437.3594 760.1719,1436.3438 Q758.4219,1434.5781 758.4219,1430.9063 Q758.4219,1426.6563 760.2969,1424.75 Q761.3438,1423.7344 762.6719,1423.7344 Q764.0781,1423.7344 764.9219,1424.5469 Q766.4063,1426.0625 766.3281,1428.9375 L764.2031,1428.9375 Q764.125,1426.6094 763.4844,1425.9688 Q763.2031,1425.6719 762.6719,1425.6719 Q762.2188,1425.6719 761.8594,1426.0469 Q760.625,1427.2656 760.625,1430.7813 Q760.625,1433.8281 761.6719,1434.8438 Q762.0938,1435.2813 762.6094,1435.2813 Q763.0625,1435.2813 763.5,1434.8438 Q764.0625,1434.2969 764.1406,1431.7031 L766.4375,1431.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="783.25" y="1436.2285">Renderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="476.5" x2="1117.5" y1="1446.5" y2="1446.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="476.5" x2="1117.5" y1="1454.5" y2="1454.5"/><ellipse cx="486.5" cy="1468.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="495.5" y="1473.0332">Renderer()</text><ellipse cx="486.5" cy="1486.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="495.5" y="1490.6426">~Renderer()</text><ellipse cx="486.5" cy="1504.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="495.5" y="1508.252">Init() : Utility::RESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="483.5" y="1518.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="617" x="495.5" y="1525.8613">RenderScene(const std::vector&lt;std::unique_ptr&lt;class Framework::Object&gt;&gt;&amp; gameObjects) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="483.5" y="1536.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="573" x="495.5" y="1543.4707">RenderUI(const std::vector&lt;std::unique_ptr&lt;class Framework::Canvas&gt;&gt;&amp; canvases) : void</text></g><!--MD5=[969b04ea6ddf91124977a8c05a4ad214]
class Game2048.Tile--><g id="elem_Game2048.Tile"><rect codeLine="88" fill="#F1F1F1" height="276.9219" id="Game2048.Tile" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="653" x="1553.5" y="1344"/><ellipse cx="1864.25" cy="1360" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1867.9375,1361.2031 Q1867.6875,1364.6875 1866.5469,1365.8438 Q1865.5156,1366.8594 1864.1094,1366.8594 Q1862.7031,1366.8594 1861.6719,1365.8438 Q1859.9219,1364.0781 1859.9219,1360.4063 Q1859.9219,1356.1563 1861.7969,1354.25 Q1862.8438,1353.2344 1864.1719,1353.2344 Q1865.5781,1353.2344 1866.4219,1354.0469 Q1867.9063,1355.5625 1867.8281,1358.4375 L1865.7031,1358.4375 Q1865.625,1356.1094 1864.9844,1355.4688 Q1864.7031,1355.1719 1864.1719,1355.1719 Q1863.7188,1355.1719 1863.3594,1355.5469 Q1862.125,1356.7656 1862.125,1360.2813 Q1862.125,1363.3281 1863.1719,1364.3438 Q1863.5938,1364.7813 1864.1094,1364.7813 Q1864.5625,1364.7813 1865,1364.3438 Q1865.5625,1363.7969 1865.6406,1361.2031 L1867.9375,1361.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="23" x="1884.75" y="1365.7285">Tile</text><line style="stroke:#181818;stroke-width:0.5;" x1="1554.5" x2="2205.5" y1="1376" y2="1376"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1561.5" y="1387.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1573.5" y="1394.5332">m_height : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1561.5" y="1404.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1573.5" y="1412.1426">m_width : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1561.5" y="1422.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="627" x="1573.5" y="1429.752">m_tileTextures : static std::unordered_map&lt;unsigned int, std::shared_ptr&lt;DX12Wrapper::Texture&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1561.5" y="1440.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="1573.5" y="1447.3613">m_number : unsigned int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1554.5" x2="2205.5" y1="1454.4375" y2="1454.4375"/><ellipse cx="1564.5" cy="1468.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="1573.5" y="1472.9707">Tile(Framework::Object* owner)</text><ellipse cx="1564.5" cy="1486.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1573.5" y="1490.5801">~Tile()</text><ellipse cx="1564.5" cy="1503.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="1573.5" y="1508.1895">GetNumber() : unsigned int</text><ellipse cx="1564.5" cy="1521.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1573.5" y="1525.7988">Draw() : void</text><ellipse cx="1564.5" cy="1539.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1573.5" y="1543.4082">LoadTileTextures() : void</text><ellipse cx="1564.5" cy="1556.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="1573.5" y="1561.0176">SetGridPosition(unsigned int x, unsigned int y, float gridLeft, float gridTop) : void</text><ellipse cx="1564.5" cy="1574.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="1573.5" y="1578.627">SetNumber(unsigned int number) : void</text><ellipse cx="1564.5" cy="1592.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="1573.5" y="1596.2363">SetScale(float width, float height) : void</text><ellipse cx="1564.5" cy="1609.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="1573.5" y="1613.8457">Update(float deltaTime) : void</text></g><!--MD5=[badfe561d62a0f52c21b800cd321d5ce]
class Game2048.TitleScene--><g id="elem_Game2048.TitleScene"><rect codeLine="104" fill="#F1F1F1" height="118.4375" id="Game2048.TitleScene" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="179.5" y="1423.5"/><ellipse cx="199.9" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M203.5875,1440.7031 Q203.3375,1444.1875 202.1969,1445.3438 Q201.1656,1446.3594 199.7594,1446.3594 Q198.3531,1446.3594 197.3219,1445.3438 Q195.5719,1443.5781 195.5719,1439.9063 Q195.5719,1435.6563 197.4469,1433.75 Q198.4938,1432.7344 199.8219,1432.7344 Q201.2281,1432.7344 202.0719,1433.5469 Q203.5563,1435.0625 203.4781,1437.9375 L201.3531,1437.9375 Q201.275,1435.6094 200.6344,1434.9688 Q200.3531,1434.6719 199.8219,1434.6719 Q199.3688,1434.6719 199.0094,1435.0469 Q197.775,1436.2656 197.775,1439.7813 Q197.775,1442.8281 198.8219,1443.8438 Q199.2438,1444.2813 199.7594,1444.2813 Q200.2125,1444.2813 200.65,1443.8438 Q201.2125,1443.2969 201.2906,1440.7031 L203.5875,1440.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="215.1" y="1445.2285">TitleScene</text><line style="stroke:#181818;stroke-width:0.5;" x1="180.5" x2="289.5" y1="1455.5" y2="1455.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="180.5" x2="289.5" y1="1463.5" y2="1463.5"/><ellipse cx="190.5" cy="1477.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="199.5" y="1482.0332">TitleScene()</text><ellipse cx="190.5" cy="1495.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="199.5" y="1499.6426">~TitleScene()</text><ellipse cx="190.5" cy="1513.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="199.5" y="1517.252">Final() : void</text><ellipse cx="190.5" cy="1530.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="199.5" y="1534.8613">Init() : void</text></g><!--MD5=[19592363d259605592f500b11e6cc160]
class Game2048.TitleSceneCanvas--><g id="elem_Game2048.TitleSceneCanvas"><rect codeLine="111" fill="#F1F1F1" height="118.4375" id="Game2048.TitleSceneCanvas" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="1359.5" y="1423.5"/><ellipse cx="1379.9" cy="1439.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1383.5875,1440.7031 Q1383.3375,1444.1875 1382.1969,1445.3438 Q1381.1656,1446.3594 1379.7594,1446.3594 Q1378.3531,1446.3594 1377.3219,1445.3438 Q1375.5719,1443.5781 1375.5719,1439.9063 Q1375.5719,1435.6563 1377.4469,1433.75 Q1378.4938,1432.7344 1379.8219,1432.7344 Q1381.2281,1432.7344 1382.0719,1433.5469 Q1383.5563,1435.0625 1383.4781,1437.9375 L1381.3531,1437.9375 Q1381.275,1435.6094 1380.6344,1434.9688 Q1380.3531,1434.6719 1379.8219,1434.6719 Q1379.3688,1434.6719 1379.0094,1435.0469 Q1377.775,1436.2656 1377.775,1439.7813 Q1377.775,1442.8281 1378.8219,1443.8438 Q1379.2438,1444.2813 1379.7594,1444.2813 Q1380.2125,1444.2813 1380.65,1443.8438 Q1381.2125,1443.2969 1381.2906,1440.7031 L1383.5875,1440.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1395.1" y="1445.2285">TitleSceneCanvas</text><line style="stroke:#181818;stroke-width:0.5;" x1="1360.5" x2="1517.5" y1="1455.5" y2="1455.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1360.5" x2="1517.5" y1="1463.5" y2="1463.5"/><ellipse cx="1370.5" cy="1477.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1379.5" y="1482.0332">TitleSceneCanvas()</text><ellipse cx="1370.5" cy="1495.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1379.5" y="1499.6426">~TitleSceneCanvas()</text><ellipse cx="1370.5" cy="1513.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1379.5" y="1517.252">Final() : void</text><ellipse cx="1370.5" cy="1530.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1379.5" y="1534.8613">Init() : void</text></g><!--MD5=[6defd214f024561847a191484dd2d82f]
class Game2048.GameScene::DRAW_LAYER--><g id="elem_Game2048.GameScene::DRAW_LAYER"><rect codeLine="118" fill="#F1F1F1" height="136.0469" id="Game2048.GameScene::DRAW_LAYER" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="213" x="1933.5" y="1857.5"/><ellipse cx="1948.5" cy="1873.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1947.2188,1872.1719 L1951.7344,1872.1719 L1951.7344,1874.125 L1947.2188,1874.125 L1947.2188,1878.4219 L1952.4531,1878.4219 L1952.4531,1880.3594 L1945,1880.3594 L1945,1866.7344 L1952.125,1866.7344 L1952.125,1868.6719 L1947.2188,1868.6719 L1947.2188,1872.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1962.5" y="1879.2285">GameScene::DRAW_LAYER</text><line style="stroke:#181818;stroke-width:0.5;" x1="1934.5" x2="2145.5" y1="1889.5" y2="1889.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1939.5" y="1908.0332">BACKGROUND</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="1939.5" y="1925.6426">GRID_BACKGROUND</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1939.5" y="1943.252">GRID_LINE</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="1939.5" y="1960.8613">TILE</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1939.5" y="1978.4707">UI</text><line style="stroke:#181818;stroke-width:0.5;" x1="1934.5" x2="2145.5" y1="1985.5469" y2="1985.5469"/></g><!--MD5=[843309f31855e032483264b0643c4f7c]
class Game2048.Grid::GAME_STATE--><g id="elem_Game2048.Grid::GAME_STATE"><rect codeLine="126" fill="#F1F1F1" height="100.8281" id="Game2048.Grid::GAME_STATE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="3312" y="1875"/><ellipse cx="3327" cy="1891" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3325.7188,1889.6719 L3330.2344,1889.6719 L3330.2344,1891.625 L3325.7188,1891.625 L3325.7188,1895.9219 L3330.9531,1895.9219 L3330.9531,1897.8594 L3323.5,1897.8594 L3323.5,1884.2344 L3330.625,1884.2344 L3330.625,1886.1719 L3325.7188,1886.1719 L3325.7188,1889.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="3341" y="1896.7285">Grid::GAME_STATE</text><line style="stroke:#181818;stroke-width:0.5;" x1="3313" x2="3471" y1="1907" y2="1907"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="3318" y="1925.5332">GAME_CLEAR</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="3318" y="1943.1426">GAME_OVER</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="3318" y="1960.752">PLAYING</text><line style="stroke:#181818;stroke-width:0.5;" x1="3313" x2="3471" y1="1967.8281" y2="1967.8281"/></g><!--MD5=[bd7c124710029db2788698bc7f105b01]
class Game2048.Grid::INPUT_DIRECTION--><g id="elem_Game2048.Grid::INPUT_DIRECTION"><rect codeLine="132" fill="#F1F1F1" height="136.0469" id="Game2048.Grid::INPUT_DIRECTION" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="3507" y="1857.5"/><ellipse cx="3522" cy="1873.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3520.7188,1872.1719 L3525.2344,1872.1719 L3525.2344,1874.125 L3520.7188,1874.125 L3520.7188,1878.4219 L3525.9531,1878.4219 L3525.9531,1880.3594 L3518.5,1880.3594 L3518.5,1866.7344 L3525.625,1866.7344 L3525.625,1868.6719 L3520.7188,1868.6719 L3520.7188,1872.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="3536" y="1879.2285">Grid::INPUT_DIRECTION</text><line style="stroke:#181818;stroke-width:0.5;" x1="3508" x2="3694" y1="1889.5" y2="1889.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="3513" y="1908.0332">DOWN</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="3513" y="1925.6426">LEFT</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="3513" y="1943.252">NONE</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="3513" y="1960.8613">RIGHT</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="18" x="3513" y="1978.4707">UP</text><line style="stroke:#181818;stroke-width:0.5;" x1="3508" x2="3694" y1="1985.5469" y2="1985.5469"/></g><!--MD5=[4a2a674c1e33f1cf79c73cb8c0b621b4]
class Framework.Button--><g id="elem_Framework.Button"><rect codeLine="143" fill="#F1F1F1" height="276.9219" id="Framework.Button" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="396" x="5266" y="1344"/><ellipse cx="5439.25" cy="1360" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5442.9375,1361.2031 Q5442.6875,1364.6875 5441.5469,1365.8438 Q5440.5156,1366.8594 5439.1094,1366.8594 Q5437.7031,1366.8594 5436.6719,1365.8438 Q5434.9219,1364.0781 5434.9219,1360.4063 Q5434.9219,1356.1563 5436.7969,1354.25 Q5437.8438,1353.2344 5439.1719,1353.2344 Q5440.5781,1353.2344 5441.4219,1354.0469 Q5442.9063,1355.5625 5442.8281,1358.4375 L5440.7031,1358.4375 Q5440.625,1356.1094 5439.9844,1355.4688 Q5439.7031,1355.1719 5439.1719,1355.1719 Q5438.7188,1355.1719 5438.3594,1355.5469 Q5437.125,1356.7656 5437.125,1360.2813 Q5437.125,1363.3281 5438.1719,1364.3438 Q5438.5938,1364.7813 5439.1094,1364.7813 Q5439.5625,1364.7813 5440,1364.3438 Q5440.5625,1363.7969 5440.6406,1361.2031 L5442.9375,1361.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="5459.75" y="1365.7285">Button</text><line style="stroke:#181818;stroke-width:0.5;" x1="5267" x2="5661" y1="1376" y2="1376"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5274" y="1387.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="5286" y="1394.5332">m_spriteRenderer : std::unique_ptr&lt;class SpriteRenderer&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5274" y="1404.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="5286" y="1412.1426">m_text : std::unique_ptr&lt;class Text&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5267" x2="5661" y1="1419.2188" y2="1419.2188"/><ellipse cx="5277" cy="1433.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="5286" y="1437.752">Button(Object* owner)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5274" y="1448.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="5286" y="1455.3613">function&lt;void()</text><ellipse cx="5277" cy="1468.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="5286" y="1472.9707">~Button()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5274" y="1483.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="5286" y="1490.5801">CheckClick() : bool</text><ellipse cx="5277" cy="1503.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5286" y="1508.1895">Draw() : void</text><ellipse cx="5277" cy="1521.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="5286" y="1525.7988">SetOnClick(const std::function&lt;void ( )&gt;&amp; onClick) : void</text><ellipse cx="5277" cy="1539.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="5286" y="1543.4082">SetPosition(float x, float y) : void</text><ellipse cx="5277" cy="1556.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="5286" y="1561.0176">SetScale(float x, float y) : void</text><ellipse cx="5277" cy="1574.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="5286" y="1578.627">SetText(const std::wstring&amp; text) : void</text><ellipse cx="5277" cy="1592.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="5286" y="1596.2363">SetTexture(const std::wstring&amp; path) : void</text><ellipse cx="5277" cy="1609.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5286" y="1613.8457">Update(float deltaTime) : void</text></g><!--MD5=[dea210b1331468af915400744cab8931]
class Framework.ButtonRenderer--><g id="elem_Framework.ButtonRenderer"><rect codeLine="159" fill="#F1F1F1" height="224.0938" id="Framework.ButtonRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="495" x="6237.5" y="963"/><ellipse cx="6430.25" cy="979" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6433.9375,980.2031 Q6433.6875,983.6875 6432.5469,984.8438 Q6431.5156,985.8594 6430.1094,985.8594 Q6428.7031,985.8594 6427.6719,984.8438 Q6425.9219,983.0781 6425.9219,979.4063 Q6425.9219,975.1563 6427.7969,973.25 Q6428.8438,972.2344 6430.1719,972.2344 Q6431.5781,972.2344 6432.4219,973.0469 Q6433.9063,974.5625 6433.8281,977.4375 L6431.7031,977.4375 Q6431.625,975.1094 6430.9844,974.4688 Q6430.7031,974.1719 6430.1719,974.1719 Q6429.7188,974.1719 6429.3594,974.5469 Q6428.125,975.7656 6428.125,979.2813 Q6428.125,982.3281 6429.1719,983.3438 Q6429.5938,983.7813 6430.1094,983.7813 Q6430.5625,983.7813 6431,983.3438 Q6431.5625,982.7969 6431.6406,980.2031 L6433.9375,980.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="6450.75" y="984.7285">ButtonRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="6238.5" x2="6731.5" y1="995" y2="995"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1006.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="6257.5" y="1013.5332">m_pipelineState : std::unique_ptr&lt;DX12Wrapper::GraphicsPipelineState&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1023.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="469" x="6257.5" y="1031.1426">m_pipelineState2 : std::unique_ptr&lt;DX12Wrapper::GraphicsPipelineState&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1041.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="6257.5" y="1048.752">m_rootSignature : std::unique_ptr&lt;DX12Wrapper::RootSignature&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1059.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="424" x="6257.5" y="1066.3613">m_rootSignature2 : std::unique_ptr&lt;DX12Wrapper::RootSignature&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6238.5" x2="6731.5" y1="1073.4375" y2="1073.4375"/><ellipse cx="6248.5" cy="1087.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="6257.5" y="1091.9707">ButtonRenderer()</text><ellipse cx="6248.5" cy="1105.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="6257.5" y="1109.5801">~ButtonRenderer()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1119.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="6257.5" y="1127.1895">CreateGraphicsPipelineState(ID3D12Device&amp; device) : Utility::RESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1137.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="395" x="6257.5" y="1144.7988">CreateRootSignature(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="6248.5" cy="1158.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="6257.5" y="1162.4082">Init() : Utility::RESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6245.5" y="1172.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="6257.5" y="1180.0176">Render() : void</text></g><!--MD5=[e14442d2eba71443910b41b8795164a7]
class Framework.Camera--><g id="elem_Framework.Camera"><rect codeLine="172" fill="#F1F1F1" height="276.9219" id="Framework.Camera" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="445" x="5794.5" y="1344"/><ellipse cx="5987.75" cy="1360" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5991.4375,1361.2031 Q5991.1875,1364.6875 5990.0469,1365.8438 Q5989.0156,1366.8594 5987.6094,1366.8594 Q5986.2031,1366.8594 5985.1719,1365.8438 Q5983.4219,1364.0781 5983.4219,1360.4063 Q5983.4219,1356.1563 5985.2969,1354.25 Q5986.3438,1353.2344 5987.6719,1353.2344 Q5989.0781,1353.2344 5989.9219,1354.0469 Q5991.4063,1355.5625 5991.3281,1358.4375 L5989.2031,1358.4375 Q5989.125,1356.1094 5988.4844,1355.4688 Q5988.2031,1355.1719 5987.6719,1355.1719 Q5987.2188,1355.1719 5986.8594,1355.5469 Q5985.625,1356.7656 5985.625,1360.2813 Q5985.625,1363.3281 5986.6719,1364.3438 Q5987.0938,1364.7813 5987.6094,1364.7813 Q5988.0625,1364.7813 5988.5,1364.3438 Q5989.0625,1363.7969 5989.1406,1361.2031 L5991.4375,1361.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="6008.25" y="1365.7285">Camera</text><line style="stroke:#181818;stroke-width:0.5;" x1="5795.5" x2="6238.5" y1="1376" y2="1376"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5802.5" y="1387.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="5814.5" y="1394.5332">m_bufferData : CameraData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5802.5" y="1404.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="5814.5" y="1412.1426">m_far : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5802.5" y="1422.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="5814.5" y="1429.752">m_near : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5802.5" y="1440.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="419" x="5814.5" y="1447.3613">m_cameraBuffer : std::unique_ptr&lt;DX12Wrapper::ConstantBuffer&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5795.5" x2="6238.5" y1="1454.4375" y2="1454.4375"/><ellipse cx="5805.5" cy="1468.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="5814.5" y="1472.9707">Camera(Object* owner)</text><ellipse cx="5805.5" cy="1486.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="5814.5" y="1490.5801">~Camera()</text><ellipse cx="5805.5" cy="1503.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="5814.5" y="1508.1895">GetConstantBuffer() : DX12Wrapper::ConstantBuffer&amp; {query}</text><ellipse cx="5805.5" cy="1521.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="5814.5" y="1525.7988">GetProjectionMatrix() : DirectX::XMMATRIX {query}</text><ellipse cx="5805.5" cy="1539.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="5814.5" y="1543.4082">GetViewMatrix() : DirectX::XMMATRIX {query}</text><ellipse cx="5805.5" cy="1556.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="5814.5" y="1561.0176">GetFar() : float {query}</text><ellipse cx="5805.5" cy="1574.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="5814.5" y="1578.627">GetNear() : float {query}</text><ellipse cx="5805.5" cy="1592.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5814.5" y="1596.2363">Draw() : void</text><ellipse cx="5805.5" cy="1609.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5814.5" y="1613.8457">Update(float deltaTime) : void</text></g><!--MD5=[327e35ebdfb4f1962a6cc73ddd1dbbde]
class Framework.Canvas--><g id="elem_Framework.Canvas"><rect codeLine="188" fill="#F1F1F1" height="171.2656" id="Framework.Canvas" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="358" x="3832" y="989.5"/><ellipse cx="3983.25" cy="1005.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3981.2188,1011.8594 L3978.9219,1011.8594 L3982.4219,998.2344 L3984.2813,998.2344 L3987.7656,1011.8594 L3985.4688,1011.8594 L3984.5469,1008.0781 L3982.1563,1008.0781 L3981.2188,1011.8594 Z M3983.2813,1002.25 L3983.4063,1002.25 L3982.6563,1006.125 L3984.0313,1006.125 L3983.2813,1002.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="47" x="4003.75" y="1011.2285">Canvas</text><line style="stroke:#181818;stroke-width:0.5;" x1="3833" x2="4189" y1="1021.5" y2="1021.5"/><polygon fill="none" points="3843,1030.8047,3847,1034.8047,3843,1038.8047,3839,1034.8047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="3852" y="1040.0332">m_guiObjects : std::vector&lt;std::unique_ptr&lt;Object&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="3833" x2="4189" y1="1047.1094" y2="1047.1094"/><ellipse cx="3843" cy="1061.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="3852" y="1065.6426">Canvas()</text><ellipse cx="3843" cy="1079.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="3852" y="1083.252">~Canvas()</text><ellipse cx="3843" cy="1096.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3852" y="1100.8613">Draw() : void</text><ellipse cx="3843" cy="1114.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="78" x="3852" y="1118.4707">Final() : void</text><ellipse cx="3843" cy="1131.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="66" x="3852" y="1136.0801">Init() : void</text><ellipse cx="3843" cy="1149.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="3852" y="1153.6895">Update(float deltaTime) : void</text></g><!--MD5=[94f8ffddd6dd2db7d720d9892ccd6440]
class Framework.Game--><g id="elem_Framework.Game"><rect codeLine="198" fill="#F1F1F1" height="206.4844" id="Framework.Game" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="393" x="5394.5" y="192"/><ellipse cx="5567.75" cy="208" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5571.4375,209.2031 Q5571.1875,212.6875 5570.0469,213.8438 Q5569.0156,214.8594 5567.6094,214.8594 Q5566.2031,214.8594 5565.1719,213.8438 Q5563.4219,212.0781 5563.4219,208.4063 Q5563.4219,204.1563 5565.2969,202.25 Q5566.3438,201.2344 5567.6719,201.2344 Q5569.0781,201.2344 5569.9219,202.0469 Q5571.4063,203.5625 5571.3281,206.4375 L5569.2031,206.4375 Q5569.125,204.1094 5568.4844,203.4688 Q5568.2031,203.1719 5567.6719,203.1719 Q5567.2188,203.1719 5566.8594,203.5469 Q5565.625,204.7656 5565.625,208.2813 Q5565.625,211.3281 5566.6719,212.3438 Q5567.0938,212.7813 5567.6094,212.7813 Q5568.0625,212.7813 5568.5,212.3438 Q5569.0625,211.7969 5569.1406,209.2031 L5571.4375,209.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="5588.25" y="213.7285">Game</text><line style="stroke:#181818;stroke-width:0.5;" x1="5395.5" x2="5786.5" y1="224" y2="224"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5402.5" y="235.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="5414.5" y="242.5332">m_gameImpl : GameImpl&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5402.5" y="252.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="5414.5" y="260.1426">m_renderer : IRenderer&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5402.5" y="270.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="5414.5" y="277.752">m_window : Window</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5402.5" y="288.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="5414.5" y="295.3613">m_prevFrameTime : std::chrono::system_clock::time_point</text><line style="stroke:#181818;stroke-width:0.5;" x1="5395.5" x2="5786.5" y1="302.4375" y2="302.4375"/><ellipse cx="5405.5" cy="316.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="323" x="5414.5" y="320.9707">Game(GameImpl&amp; gameImpl, IRenderer&amp; renderer)</text><ellipse cx="5405.5" cy="334.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="5414.5" y="338.5801">~Game()</text><ellipse cx="5405.5" cy="351.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="5414.5" y="356.1895">Final() : void</text><ellipse cx="5405.5" cy="369.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="5414.5" y="373.7988">Init() : void</text><ellipse cx="5405.5" cy="387.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="5414.5" y="391.4082">Run() : void</text></g><!--MD5=[fc3dbc5fbada1314ca4885ed282c8371]
class Framework.GameImpl--><g id="elem_Framework.GameImpl"><rect codeLine="210" fill="#F1F1F1" height="118.4375" id="Framework.GameImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="107" x="5506.5" y="696.5"/><ellipse cx="5526.45" cy="712.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5524.4188,718.8594 L5522.1219,718.8594 L5525.6219,705.2344 L5527.4813,705.2344 L5530.9656,718.8594 L5528.6688,718.8594 L5527.7469,715.0781 L5525.3563,715.0781 L5524.4188,718.8594 Z M5526.4813,709.25 L5526.6063,709.25 L5525.8563,713.125 L5527.2313,713.125 L5526.4813,709.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="5541.55" y="718.2285">GameImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="5507.5" x2="5612.5" y1="728.5" y2="728.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="5507.5" x2="5612.5" y1="736.5" y2="736.5"/><ellipse cx="5517.5" cy="750.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="5526.5" y="755.0332">GameImpl()</text><ellipse cx="5517.5" cy="768.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="5526.5" y="772.6426">~GameImpl()</text><ellipse cx="5517.5" cy="786.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="78" x="5526.5" y="790.252">Final() : void</text><ellipse cx="5517.5" cy="803.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="66" x="5526.5" y="807.8613">Init() : void</text></g><!--MD5=[f9a25af77f6aac3c79e6f1bff8e1601b]
class Framework.IComponent--><g id="elem_Framework.IComponent"><rect codeLine="217" fill="#F1F1F1" height="136.0469" id="Framework.IComponent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="4225" y="1007"/><ellipse cx="4288.25" cy="1023" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4286.2188,1029.3594 L4283.9219,1029.3594 L4287.4219,1015.7344 L4289.2813,1015.7344 L4292.7656,1029.3594 L4290.4688,1029.3594 L4289.5469,1025.5781 L4287.1563,1025.5781 L4286.2188,1029.3594 Z M4288.2813,1019.75 L4288.4063,1019.75 L4287.6563,1023.625 L4289.0313,1023.625 L4288.2813,1019.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="77" x="4308.75" y="1028.7285">IComponent</text><line style="stroke:#181818;stroke-width:0.5;" x1="4226" x2="4436" y1="1039" y2="1039"/><polygon fill="none" points="4236,1048.3047,4240,1052.3047,4236,1056.3047,4232,1052.3047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="4245" y="1057.5332">m_owner : Object*</text><line style="stroke:#181818;stroke-width:0.5;" x1="4226" x2="4436" y1="1064.6094" y2="1064.6094"/><ellipse cx="4236" cy="1078.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="4245" y="1083.1426">IComponent(Object* owner)</text><ellipse cx="4236" cy="1096.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="4245" y="1100.752">~IComponent()</text><ellipse cx="4236" cy="1114.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="79" x="4245" y="1118.3613">Draw() : void</text><ellipse cx="4236" cy="1131.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="186" x="4245" y="1135.9707">Update(float deltaTime) : void</text></g><!--MD5=[5c0d86024b35a1704b0feeab323bf699]
class Framework.IRenderer--><g id="elem_Framework.IRenderer"><rect codeLine="225" fill="#F1F1F1" height="153.6563" id="Framework.IRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="563" x="5648.5" y="678.5"/><ellipse cx="5893.75" cy="694.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5891.7188,700.8594 L5889.4219,700.8594 L5892.9219,687.2344 L5894.7813,687.2344 L5898.2656,700.8594 L5895.9688,700.8594 L5895.0469,697.0781 L5892.6563,697.0781 L5891.7188,700.8594 Z M5893.7813,691.25 L5893.9063,691.25 L5893.1563,695.125 L5894.5313,695.125 L5893.7813,691.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="5914.25" y="700.2285">IRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5649.5" x2="6210.5" y1="710.5" y2="710.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="5649.5" x2="6210.5" y1="718.5" y2="718.5"/><ellipse cx="5659.5" cy="732.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="5668.5" y="737.0332">IRenderer()</text><ellipse cx="5659.5" cy="750.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="5668.5" y="754.6426">~IRenderer()</text><ellipse cx="5659.5" cy="768.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="138" x="5668.5" y="772.252">Init() : Utility::RESULT</text><ellipse cx="5659.5" cy="785.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="5668.5" y="789.8613">Render(const class Scene* scene) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5656.5" y="800.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="537" x="5668.5" y="807.4707">RenderScene(const std::vector&lt;std::unique_ptr&lt;class Object&gt;&gt;&amp; gameObjects) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5656.5" y="817.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="493" x="5668.5" y="825.0801">RenderUI(const std::vector&lt;std::unique_ptr&lt;class Canvas&gt;&gt;&amp; canvases) : void</text></g><!--MD5=[34078cc2f82541a52a2c9db37c08beef]
class Framework.InputSystem--><g id="elem_Framework.InputSystem"><rect codeLine="234" fill="#F1F1F1" height="505.8438" id="Framework.InputSystem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="385" x="4974.5" y="42"/><ellipse cx="5124.25" cy="58" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5127.9375,59.2031 Q5127.6875,62.6875 5126.5469,63.8438 Q5125.5156,64.8594 5124.1094,64.8594 Q5122.7031,64.8594 5121.6719,63.8438 Q5119.9219,62.0781 5119.9219,58.4063 Q5119.9219,54.1563 5121.7969,52.25 Q5122.8438,51.2344 5124.1719,51.2344 Q5125.5781,51.2344 5126.4219,52.0469 Q5127.9063,53.5625 5127.8281,56.4375 L5125.7031,56.4375 Q5125.625,54.1094 5124.9844,53.4688 Q5124.7031,53.1719 5124.1719,53.1719 Q5123.7188,53.1719 5123.3594,53.5469 Q5122.125,54.7656 5122.125,58.2813 Q5122.125,61.3281 5123.1719,62.3438 Q5123.5938,62.7813 5124.1094,62.7813 Q5124.5625,62.7813 5125,62.3438 Q5125.5625,61.7969 5125.6406,59.2031 L5127.9375,59.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="5144.75" y="63.7285">InputSystem</text><line style="stroke:#181818;stroke-width:0.5;" x1="4975.5" x2="5358.5" y1="74" y2="74"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="85.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="4994.5" y="92.5332">m_keysState : BUTTON_STATE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="102.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="4994.5" y="110.1426">m_mouseButtonState : BUTTON_STATE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="120.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="4994.5" y="127.752">m_currentKeys : BYTE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="138.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="4994.5" y="145.3613">m_prevKeys : BYTE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="155.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="4994.5" y="162.9707">m_currentMouse : DIMOUSESTATE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="173.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="4994.5" y="180.5801">m_prevMouse : DIMOUSESTATE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="190.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="4994.5" y="198.1895">m_hwnd : HWND</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="208.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="4994.5" y="215.7988">m_directInputInterface : LPDIRECTINPUT8</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="226.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="4994.5" y="233.4082">m_keyboard : LPDIRECTINPUTDEVICE8</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="243.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="4994.5" y="251.0176">m_mouse : LPDIRECTINPUTDEVICE8</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="261.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="4994.5" y="268.627">m_mouseWheelMovement : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="279.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="4994.5" y="286.2363">m_mouseXMovement : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="296.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="4994.5" y="303.8457">m_mouseYMovement : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="4975.5" x2="5358.5" y1="310.9219" y2="310.9219"/><ellipse cx="4985.5" cy="325.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="4994.5" y="329.4551">InputSystem()</text><ellipse cx="4985.5" cy="342.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="4994.5" y="347.0645">~InputSystem()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="357.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="4994.5" y="364.6738">SetupKeyboard(HWND&amp; hwnd) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="375.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="4994.5" y="382.2832">SetupMouse(HWND&amp; hwnd) : HRESULT</text><ellipse cx="4985.5" cy="395.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="161" x="4994.5" y="399.8926">Instance() : InputSystem&amp;</text><ellipse cx="4985.5" cy="413.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="4994.5" y="417.502">GetMousePosition() : POINT</text><ellipse cx="4985.5" cy="430.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="4994.5" y="435.1113">Init(HWND&amp; hwnd) : Utility::RESULT</text><ellipse cx="4985.5" cy="448.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="4994.5" y="452.7207">GetKeyDown(Framework::BYTE keyCode) : bool</text><ellipse cx="4985.5" cy="466.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="359" x="4994.5" y="470.3301">GetMouseButtonDown(MOUSECODE mouseCode) : bool</text><ellipse cx="4985.5" cy="483.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="4994.5" y="487.9395">Update() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="498.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="4994.5" y="505.5488">UpdateKeyStates() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4982.5" y="515.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="4994.5" y="523.1582">UpdateMouseStates() : void</text><ellipse cx="4985.5" cy="536.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="4994.5" y="540.7676">ViewMouseCursor() : void</text></g><!--MD5=[7374851574cbc7cddaf79e352704db2e]
class Framework.Object--><g id="elem_Framework.Object"><rect codeLine="263" fill="#F1F1F1" height="312.1406" id="Framework.Object" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="403" x="3986.5" y="1326.5"/><ellipse cx="4163.25" cy="1342.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4166.9375,1343.7031 Q4166.6875,1347.1875 4165.5469,1348.3438 Q4164.5156,1349.3594 4163.1094,1349.3594 Q4161.7031,1349.3594 4160.6719,1348.3438 Q4158.9219,1346.5781 4158.9219,1342.9063 Q4158.9219,1338.6563 4160.7969,1336.75 Q4161.8438,1335.7344 4163.1719,1335.7344 Q4164.5781,1335.7344 4165.4219,1336.5469 Q4166.9063,1338.0625 4166.8281,1340.9375 L4164.7031,1340.9375 Q4164.625,1338.6094 4163.9844,1337.9688 Q4163.7031,1337.6719 4163.1719,1337.6719 Q4162.7188,1337.6719 4162.3594,1338.0469 Q4161.125,1339.2656 4161.125,1342.7813 Q4161.125,1345.8281 4162.1719,1346.8438 Q4162.5938,1347.2813 4163.1094,1347.2813 Q4163.5625,1347.2813 4164,1346.8438 Q4164.5625,1346.2969 4164.6406,1343.7031 L4166.9375,1343.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="4183.75" y="1348.2285">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="3987.5" x2="4388.5" y1="1358.5" y2="1358.5"/><polygon fill="none" points="3997.5,1367.8047,4001.5,1371.8047,3997.5,1375.8047,3993.5,1371.8047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="4006.5" y="1377.0332">m_parent : Object*</text><polygon fill="none" points="3997.5,1385.4141,4001.5,1389.4141,3997.5,1393.4141,3993.5,1389.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="4006.5" y="1394.6426">m_isActive : bool</text><polygon fill="none" points="3997.5,1403.0234,4001.5,1407.0234,3997.5,1411.0234,3993.5,1407.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377" x="4006.5" y="1412.252">m_components : std::vector&lt;std::unique_ptr&lt;IComponent&gt;&gt;</text><polygon fill="none" points="3997.5,1420.6328,4001.5,1424.6328,3997.5,1428.6328,3993.5,1424.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="4006.5" y="1429.8613">m_children : std::vector&lt;std::unique_ptr&lt;Object&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="3987.5" x2="4388.5" y1="1436.9375" y2="1436.9375"/><ellipse cx="3997.5" cy="1451.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="4006.5" y="1455.4707">Object()</text><ellipse cx="3997.5" cy="1468.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="4006.5" y="1473.0801">~Object()</text><ellipse cx="3997.5" cy="1486.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="4006.5" y="1490.6895">Parent() : Object*</text><ellipse cx="3997.5" cy="1504.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="4006.5" y="1508.2988">AddComponent(Object* owner) : T*</text><ellipse cx="3997.5" cy="1521.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="4006.5" y="1525.9082">GetComponent() : T*</text><ellipse cx="3997.5" cy="1539.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="4006.5" y="1543.5176">GetActive() : bool</text><ellipse cx="3997.5" cy="1556.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="4006.5" y="1561.127">AddChild(std::unique_ptr&lt;Object&gt;&amp; child) : void</text><ellipse cx="3997.5" cy="1574.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="4006.5" y="1578.7363">Draw() : void</text><ellipse cx="3997.5" cy="1592.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="4006.5" y="1596.3457">SetActive(bool isActive) : void</text><ellipse cx="3997.5" cy="1609.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="4006.5" y="1613.9551">SetParent(Object* parent) : void</text><ellipse cx="3997.5" cy="1627.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="4006.5" y="1631.5645">Update(float deltaTime) : void</text></g><!--MD5=[163bce86f55a4eacf63e765e1feeea97]
class Framework.Scene--><g id="elem_Framework.Scene"><rect codeLine="281" fill="#F1F1F1" height="294.5313" id="Framework.Scene" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="488" x="4025" y="608"/><ellipse cx="4244.75" cy="624" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4242.7188,630.3594 L4240.4219,630.3594 L4243.9219,616.7344 L4245.7813,616.7344 L4249.2656,630.3594 L4246.9688,630.3594 L4246.0469,626.5781 L4243.6563,626.5781 L4242.7188,630.3594 Z M4244.7813,620.75 L4244.9063,620.75 L4244.1563,624.625 L4245.5313,624.625 L4244.7813,620.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="40" x="4265.25" y="629.7285">Scene</text><line style="stroke:#181818;stroke-width:0.5;" x1="4026" x2="4512" y1="640" y2="640"/><polygon fill="none" points="4036,649.3047,4040,653.3047,4036,657.3047,4032,653.3047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="4045" y="658.5332">m_isActive : bool</text><polygon fill="none" points="4036,666.9141,4040,670.9141,4036,674.9141,4032,670.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="346" x="4045" y="676.1426">m_cameraObject : static std::unique_ptr&lt;GameObject&gt;</text><polygon fill="none" points="4036,684.5234,4040,688.5234,4036,692.5234,4032,688.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="4045" y="693.752">m_canvases : std::vector&lt;std::unique_ptr&lt;Canvas&gt;&gt;</text><polygon fill="none" points="4036,702.1328,4040,706.1328,4036,710.1328,4032,706.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="4045" y="711.3613">m_gameObjects : std::vector&lt;std::unique_ptr&lt;GameObject&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4026" x2="4512" y1="718.4375" y2="718.4375"/><ellipse cx="4036" cy="732.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="4045" y="736.9707">Scene()</text><ellipse cx="4036" cy="750.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="4045" y="754.5801">~Scene()</text><ellipse cx="4036" cy="767.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="154" x="4045" y="772.1895">GetCamera() : Camera&amp;</text><ellipse cx="4036" cy="785.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="408" x="4045" y="789.7988">GetCanvases() : std::vector&lt;std::unique_ptr&lt;Canvas&gt;&gt;&amp; {query}</text><ellipse cx="4036" cy="803.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="462" x="4045" y="807.4082">GetGameObjects() : std::vector&lt;std::unique_ptr&lt;GameObject&gt;&gt;&amp; {query}</text><ellipse cx="4036" cy="820.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="78" x="4045" y="825.0176">Final() : void</text><ellipse cx="4036" cy="838.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="66" x="4045" y="842.627">Init() : void</text><ellipse cx="4036" cy="856.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="4045" y="860.2363">LateUpdate(float deltaTime) : void</text><ellipse cx="4036" cy="873.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="4045" y="877.8457">SetActive(bool isActive) : void</text><ellipse cx="4036" cy="891.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="4045" y="895.4551">Update(float deltaTime) : void</text></g><!--MD5=[5b4e595e579928e8aba3f726c721a6af]
class Framework.SceneManager--><g id="elem_Framework.SceneManager"><rect codeLine="298" fill="#F1F1F1" height="276.9219" id="Framework.SceneManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="476" x="4463" y="156.5"/><ellipse cx="4648.75" cy="172.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4652.4375,173.7031 Q4652.1875,177.1875 4651.0469,178.3438 Q4650.0156,179.3594 4648.6094,179.3594 Q4647.2031,179.3594 4646.1719,178.3438 Q4644.4219,176.5781 4644.4219,172.9063 Q4644.4219,168.6563 4646.2969,166.75 Q4647.3438,165.7344 4648.6719,165.7344 Q4650.0781,165.7344 4650.9219,166.5469 Q4652.4063,168.0625 4652.3281,170.9375 L4650.2031,170.9375 Q4650.125,168.6094 4649.4844,167.9688 Q4649.2031,167.6719 4648.6719,167.6719 Q4648.2188,167.6719 4647.8594,168.0469 Q4646.625,169.2656 4646.625,172.7813 Q4646.625,175.8281 4647.6719,176.8438 Q4648.0938,177.2813 4648.6094,177.2813 Q4649.0625,177.2813 4649.5,176.8438 Q4650.0625,176.2969 4650.1406,173.7031 L4652.4375,173.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="4669.25" y="178.2285">SceneManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="4464" x2="4938" y1="188.5" y2="188.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4471" y="199.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="4483" y="207.0332">m_isSceneChanged : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4471" y="217.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="4483" y="224.6426">m_activeSceneName : const char*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4471" y="235.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="4483" y="242.252">m_oldSceneName : const char*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4471" y="252.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="450" x="4483" y="259.8613">m_scenes : std::unordered_map&lt;const char*, std::unique_ptr&lt;Scene&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4464" x2="4938" y1="266.9375" y2="266.9375"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4471" y="278.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="4483" y="285.4707">SceneManager()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4471" y="295.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="4483" y="303.0801">~SceneManager()</text><ellipse cx="4474" cy="316.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="180" x="4483" y="320.6895">Instance() : SceneManager&amp;</text><ellipse cx="4474" cy="334.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="4483" y="338.2988">ActiveSceneDraw(class IRenderer&amp; renderer) : void</text><ellipse cx="4474" cy="351.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="4483" y="355.9082">ActiveSceneFinal() : void</text><ellipse cx="4474" cy="369.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="4483" y="373.5176">ActiveSceneLateUpdate(float deltaTime) : void</text><ellipse cx="4474" cy="386.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="4483" y="391.127">ActiveSceneUpdate(float deltaTime) : void</text><ellipse cx="4474" cy="404.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="4483" y="408.7363">AddScene(const char* name) : void</text><ellipse cx="4474" cy="422.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="4483" y="426.3457">LoadScene(const char* name) : void</text></g><!--MD5=[e4479cc02a535d7a5b3afa7acf7d90dc]
class Framework.ShaderLibrary--><g id="elem_Framework.ShaderLibrary"><rect codeLine="314" fill="#F1F1F1" height="171.2656" id="Framework.ShaderLibrary" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="910" x="5823" y="209.5"/><ellipse cx="6228.75" cy="225.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6232.4375,226.7031 Q6232.1875,230.1875 6231.0469,231.3438 Q6230.0156,232.3594 6228.6094,232.3594 Q6227.2031,232.3594 6226.1719,231.3438 Q6224.4219,229.5781 6224.4219,225.9063 Q6224.4219,221.6563 6226.2969,219.75 Q6227.3438,218.7344 6228.6719,218.7344 Q6230.0781,218.7344 6230.9219,219.5469 Q6232.4063,221.0625 6232.3281,223.9375 L6230.2031,223.9375 Q6230.125,221.6094 6229.4844,220.9688 Q6229.2031,220.6719 6228.6719,220.6719 Q6228.2188,220.6719 6227.8594,221.0469 Q6226.625,222.2656 6226.625,225.7813 Q6226.625,228.8281 6227.6719,229.8438 Q6228.0938,230.2813 6228.6094,230.2813 Q6229.0625,230.2813 6229.5,229.8438 Q6230.0625,229.2969 6230.1406,226.7031 L6232.4375,226.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="6249.25" y="231.2285">ShaderLibrary</text><line style="stroke:#181818;stroke-width:0.5;" x1="5824" x2="6732" y1="241.5" y2="241.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5831" y="252.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="438" x="5843" y="260.0332">_shaderTypeMap : std::unordered_map&lt;SHADERTYPE, const char*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5831" y="270.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="5843" y="277.6426">_shaderMap : std::unordered_map&lt;std::string, DX12Wrapper::Shader&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5824" x2="6732" y1="284.7188" y2="284.7188"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5831" y="296.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="5843" y="303.252">ShaderLibrary()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5831" y="313.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="5843" y="320.8613">~ShaderLibrary()</text><ellipse cx="5834" cy="334.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="421" x="5843" y="338.4707">GetShader(const std::string&amp; shaderTag) : DX12Wrapper::Shader*</text><ellipse cx="5834" cy="351.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="174" x="5843" y="356.0801">Instance() : ShaderLibrary&amp;</text><ellipse cx="5834" cy="369.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="884" x="5843" y="373.6895">RegistShader(const TCHAR* shaderFileName, const std::string&amp; shaderTag, SHADERTYPE shaderType, const char* entryPointName) : void</text></g><!--MD5=[1a576c24206dd1002dc3f836a25b88c4]
class Framework.SoundClip--><g id="elem_Framework.SoundClip"><rect codeLine="324" fill="#F1F1F1" height="118.4375" id="Framework.SoundClip" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="3832.5" y="696.5"/><ellipse cx="3874.5" cy="712.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3878.1875,713.7031 Q3877.9375,717.1875 3876.7969,718.3438 Q3875.7656,719.3594 3874.3594,719.3594 Q3872.9531,719.3594 3871.9219,718.3438 Q3870.1719,716.5781 3870.1719,712.9063 Q3870.1719,708.6563 3872.0469,706.75 Q3873.0938,705.7344 3874.4219,705.7344 Q3875.8281,705.7344 3876.6719,706.5469 Q3878.1563,708.0625 3878.0781,710.9375 L3875.9531,710.9375 Q3875.875,708.6094 3875.2344,707.9688 Q3874.9531,707.6719 3874.4219,707.6719 Q3873.9688,707.6719 3873.6094,708.0469 Q3872.375,709.2656 3872.375,712.7813 Q3872.375,715.8281 3873.4219,716.8438 Q3873.8438,717.2813 3874.3594,717.2813 Q3874.8125,717.2813 3875.25,716.8438 Q3875.8125,716.2969 3875.8906,713.7031 L3878.1875,713.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="3894.5" y="718.2285">SoundClip</text><line style="stroke:#181818;stroke-width:0.5;" x1="3833.5" x2="3988.5" y1="728.5" y2="728.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3833.5" x2="3988.5" y1="736.5" y2="736.5"/><ellipse cx="3843.5" cy="750.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="3852.5" y="755.0332">SoundClip()</text><ellipse cx="3843.5" cy="768.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="3852.5" y="772.6426">~SoundClip()</text><ellipse cx="3843.5" cy="786.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="3852.5" y="790.252">PlayLoop() : void</text><ellipse cx="3843.5" cy="803.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="3852.5" y="807.8613">PlayOneShot() : void</text></g><!--MD5=[49d710f24a6c3ead192e33fd075d2dd0]
class Framework.SoundManager--><g id="elem_Framework.SoundManager"><rect codeLine="331" fill="#F1F1F1" height="153.6563" id="Framework.SoundManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="274" x="4154" y="218"/><ellipse cx="4238.25" cy="234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4241.9375,235.2031 Q4241.6875,238.6875 4240.5469,239.8438 Q4239.5156,240.8594 4238.1094,240.8594 Q4236.7031,240.8594 4235.6719,239.8438 Q4233.9219,238.0781 4233.9219,234.4063 Q4233.9219,230.1563 4235.7969,228.25 Q4236.8438,227.2344 4238.1719,227.2344 Q4239.5781,227.2344 4240.4219,228.0469 Q4241.9063,229.5625 4241.8281,232.4375 L4239.7031,232.4375 Q4239.625,230.1094 4238.9844,229.4688 Q4238.7031,229.1719 4238.1719,229.1719 Q4237.7188,229.1719 4237.3594,229.5469 Q4236.125,230.7656 4236.125,234.2813 Q4236.125,237.3281 4237.1719,238.3438 Q4237.5938,238.7813 4238.1094,238.7813 Q4238.5625,238.7813 4239,238.3438 Q4239.5625,237.7969 4239.6406,235.2031 L4241.9375,235.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="4258.75" y="239.7285">SoundManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="4155" x2="4427" y1="250" y2="250"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4162" y="261.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="4174" y="268.5332">m_soundClips : std::vector&lt;SoundClip&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4155" x2="4427" y1="275.6094" y2="275.6094"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4162" y="286.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="4174" y="294.1426">SoundManager()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4162" y="304.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="4174" y="311.752">~SoundManager()</text><ellipse cx="4165" cy="325.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="181" x="4174" y="329.3613">Instance() : SoundManager&amp;</text><ellipse cx="4165" cy="342.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="4174" y="346.9707">PlayLoop(const char* name) : void</text><ellipse cx="4165" cy="360.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="4174" y="364.5801">PlayOneShot(const char* name) : void</text></g><!--MD5=[119c2a4c33d536aaf787dfd0d56ecff1]
class Framework.Sprite--><g id="elem_Framework.Sprite"><rect codeLine="340" fill="#F1F1F1" height="259.3125" id="Framework.Sprite" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="558" x="6175" y="2133"/><ellipse cx="6431.25" cy="2149" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6434.9375,2150.2031 Q6434.6875,2153.6875 6433.5469,2154.8438 Q6432.5156,2155.8594 6431.1094,2155.8594 Q6429.7031,2155.8594 6428.6719,2154.8438 Q6426.9219,2153.0781 6426.9219,2149.4063 Q6426.9219,2145.1563 6428.7969,2143.25 Q6429.8438,2142.2344 6431.1719,2142.2344 Q6432.5781,2142.2344 6433.4219,2143.0469 Q6434.9063,2144.5625 6434.8281,2147.4375 L6432.7031,2147.4375 Q6432.625,2145.1094 6431.9844,2144.4688 Q6431.7031,2144.1719 6431.1719,2144.1719 Q6430.7188,2144.1719 6430.3594,2144.5469 Q6429.125,2145.7656 6429.125,2149.2813 Q6429.125,2152.3281 6430.1719,2153.3438 Q6430.5938,2153.7813 6431.1094,2153.7813 Q6431.5625,2153.7813 6432,2153.3438 Q6432.5625,2152.7969 6432.6406,2150.2031 L6434.9375,2150.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="6451.75" y="2154.7285">Sprite</text><line style="stroke:#181818;stroke-width:0.5;" x1="6176" x2="6732" y1="2165" y2="2165"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6183" y="2176.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="6195" y="2183.5332">m_texture : std::shared_ptr&lt;DX12Wrapper::Texture&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6183" y="2193.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="532" x="6195" y="2201.1426">m_descriptorHeap : std::unique_ptr&lt;DX12Wrapper::DescriptorHeapCBV_SRV_UAV&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6183" y="2211.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="6195" y="2218.752">m_indexBuffer : std::unique_ptr&lt;DX12Wrapper::IndexBuffer&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6183" y="2229.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="6195" y="2236.3613">m_vertexBuffer : std::unique_ptr&lt;DX12Wrapper::VertexBuffer&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6183" y="2246.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="6195" y="2253.9707">m_vertex : std::vector&lt;SpriteVertex&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6176" x2="6732" y1="2261.0469" y2="2261.0469"/><ellipse cx="6186" cy="2275.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="6195" y="2279.5801">Sprite(const std::wstring&amp; path, SPRITE_PIVOT pivot)</text><ellipse cx="6186" cy="2292.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="6195" y="2297.1895">~Sprite()</text><ellipse cx="6186" cy="2310.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="6195" y="2314.7988">GetDescriptorHeap() : DX12Wrapper::DescriptorHeapCBV_SRV_UAV&amp; {query}</text><ellipse cx="6186" cy="2328.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="6195" y="2332.4082">GetIndexBuffer() : DX12Wrapper::IndexBuffer&amp; {query}</text><ellipse cx="6186" cy="2345.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="357" x="6195" y="2350.0176">GetVertexBuffer() : DX12Wrapper::VertexBuffer&amp; {query}</text><ellipse cx="6186" cy="2363.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="6195" y="2367.627">LoadTexture(const std::wstring&amp; path) : void</text><ellipse cx="6186" cy="2381.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="6195" y="2385.2363">SetTexture(std::shared_ptr&lt;DX12Wrapper::Texture&gt;&amp; texture) : void</text></g><!--MD5=[94f74936299d6e59797a0cc70ae909b7]
class Framework.SpriteRenderer--><g id="elem_Framework.SpriteRenderer"><rect codeLine="355" fill="#F1F1F1" height="294.5313" id="Framework.SpriteRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="487" x="5220.5" y="1778"/><ellipse cx="5411.25" cy="1794" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5414.9375,1795.2031 Q5414.6875,1798.6875 5413.5469,1799.8438 Q5412.5156,1800.8594 5411.1094,1800.8594 Q5409.7031,1800.8594 5408.6719,1799.8438 Q5406.9219,1798.0781 5406.9219,1794.4063 Q5406.9219,1790.1563 5408.7969,1788.25 Q5409.8438,1787.2344 5411.1719,1787.2344 Q5412.5781,1787.2344 5413.4219,1788.0469 Q5414.9063,1789.5625 5414.8281,1792.4375 L5412.7031,1792.4375 Q5412.625,1790.1094 5411.9844,1789.4688 Q5411.7031,1789.1719 5411.1719,1789.1719 Q5410.7188,1789.1719 5410.3594,1789.5469 Q5409.125,1790.7656 5409.125,1794.2813 Q5409.125,1797.3281 5410.1719,1798.3438 Q5410.5938,1798.7813 5411.1094,1798.7813 Q5411.5625,1798.7813 5412,1798.3438 Q5412.5625,1797.7969 5412.6406,1795.2031 L5414.9375,1795.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="5431.75" y="1799.7285">SpriteRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5221.5" x2="5706.5" y1="1810" y2="1810"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5228.5" y="1821.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="5240.5" y="1828.5332">m_drawMode : SPRITE_DRAW_MODE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5228.5" y="1838.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="437" x="5240.5" y="1846.1426">m_drawModeBuffer : std::unique_ptr&lt;DX12Wrapper::ConstantBuffer&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5228.5" y="1856.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="5240.5" y="1863.752">m_pipelineState : std::unique_ptr&lt;DX12Wrapper::GraphicsPipelineState&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5228.5" y="1874.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="5240.5" y="1881.3613">m_rootSignature : std::unique_ptr&lt;DX12Wrapper::RootSignature&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5228.5" y="1891.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="5240.5" y="1898.9707">m_sprite : std::unique_ptr&lt;class Sprite&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5221.5" x2="5706.5" y1="1906.0469" y2="1906.0469"/><ellipse cx="5231.5" cy="1920.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="5240.5" y="1924.5801">SpriteRenderer(Framework::Object* owner)</text><ellipse cx="5231.5" cy="1937.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="5240.5" y="1942.1895">~SpriteRenderer()</text><ellipse cx="5231.5" cy="1955.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="5240.5" y="1959.7988">CreateGraphicsPipelineState(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="5231.5" cy="1973.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="395" x="5240.5" y="1977.4082">CreateRootSignature(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="5231.5" cy="1990.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5240.5" y="1995.0176">Draw() : void</text><ellipse cx="5231.5" cy="2008.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="5240.5" y="2012.627">SetDrawMode(SPRITE_DRAW_MODE drawMode) : void</text><ellipse cx="5231.5" cy="2026.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="5240.5" y="2030.2363">SetLayer(UINT layer) : void</text><ellipse cx="5231.5" cy="2043.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="5240.5" y="2047.8457">SetSprite(class Sprite* sprite) : void</text><ellipse cx="5231.5" cy="2061.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5240.5" y="2065.4551">Update(float deltaTime) : void</text></g><!--MD5=[b67a5837f0ea2a54d816d740462e319e]
class Framework.Text--><g id="elem_Framework.Text"><rect codeLine="372" fill="#F1F1F1" height="259.3125" id="Framework.Text" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="371" x="5742.5" y="1796"/><ellipse cx="5910.25" cy="1812" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5913.9375,1813.2031 Q5913.6875,1816.6875 5912.5469,1817.8438 Q5911.5156,1818.8594 5910.1094,1818.8594 Q5908.7031,1818.8594 5907.6719,1817.8438 Q5905.9219,1816.0781 5905.9219,1812.4063 Q5905.9219,1808.1563 5907.7969,1806.25 Q5908.8438,1805.2344 5910.1719,1805.2344 Q5911.5781,1805.2344 5912.4219,1806.0469 Q5913.9063,1807.5625 5913.8281,1810.4375 L5911.7031,1810.4375 Q5911.625,1808.1094 5910.9844,1807.4688 Q5910.7031,1807.1719 5910.1719,1807.1719 Q5909.7188,1807.1719 5909.3594,1807.5469 Q5908.125,1808.7656 5908.125,1812.2813 Q5908.125,1815.3281 5909.1719,1816.3438 Q5909.5938,1816.7813 5910.1094,1816.7813 Q5910.5625,1816.7813 5911,1816.3438 Q5911.5625,1815.7969 5911.6406,1813.2031 L5913.9375,1813.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="5930.75" y="1817.7285">Text</text><line style="stroke:#181818;stroke-width:0.5;" x1="5743.5" x2="6112.5" y1="1828" y2="1828"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5750.5" y="1839.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="5762.5" y="1846.5332">m_fontRenderer : DX12Wrapper::FontRenderer&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5750.5" y="1856.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="5762.5" y="1864.1426">m_color : DirectX::XMVECTORF32</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5750.5" y="1874.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="5762.5" y="1881.752">m_text : std::wstring</text><line style="stroke:#181818;stroke-width:0.5;" x1="5743.5" x2="6112.5" y1="1888.8281" y2="1888.8281"/><ellipse cx="5753.5" cy="1903.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="5762.5" y="1907.3613">Text(Object* owner)</text><ellipse cx="5753.5" cy="1920.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="45" x="5762.5" y="1924.9707">~Text()</text><ellipse cx="5753.5" cy="1938.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5762.5" y="1942.5801">Draw() : void</text><ellipse cx="5753.5" cy="1955.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="5762.5" y="1960.1895">SetColor(const DirectX::XMVECTORF32&amp; color) : void</text><ellipse cx="5753.5" cy="1973.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="5762.5" y="1977.7988">SetPosition(const DirectX::XMFLOAT2&amp; position) : void</text><ellipse cx="5753.5" cy="1991.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="5762.5" y="1995.4082">SetRotation(float angle) : void</text><ellipse cx="5753.5" cy="2008.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="5762.5" y="2013.0176">SetScale(const float&amp; scale) : void</text><ellipse cx="5753.5" cy="2026.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="5762.5" y="2030.627">SetText(const std::wstring&amp; text) : void</text><ellipse cx="5753.5" cy="2044.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5762.5" y="2048.2363">Update(float deltaTime) : void</text></g><!--MD5=[c3b8850b82856c2c4080299b6fb44c90]
class Framework.Transform2D--><g id="elem_Framework.Transform2D"><rect codeLine="387" fill="#F1F1F1" height="259.3125" id="Framework.Transform2D" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="458" x="6275" y="1353"/><ellipse cx="6458.25" cy="1369" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6461.9375,1370.2031 Q6461.6875,1373.6875 6460.5469,1374.8438 Q6459.5156,1375.8594 6458.1094,1375.8594 Q6456.7031,1375.8594 6455.6719,1374.8438 Q6453.9219,1373.0781 6453.9219,1369.4063 Q6453.9219,1365.1563 6455.7969,1363.25 Q6456.8438,1362.2344 6458.1719,1362.2344 Q6459.5781,1362.2344 6460.4219,1363.0469 Q6461.9063,1364.5625 6461.8281,1367.4375 L6459.7031,1367.4375 Q6459.625,1365.1094 6458.9844,1364.4688 Q6458.7031,1364.1719 6458.1719,1364.1719 Q6457.7188,1364.1719 6457.3594,1364.5469 Q6456.125,1365.7656 6456.125,1369.2813 Q6456.125,1372.3281 6457.1719,1373.3438 Q6457.5938,1373.7813 6458.1094,1373.7813 Q6458.5625,1373.7813 6459,1373.3438 Q6459.5625,1372.7969 6459.6406,1370.2031 L6461.9375,1370.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="6478.75" y="1374.7285">Transform2D</text><line style="stroke:#181818;stroke-width:0.5;" x1="6276" x2="6732" y1="1385" y2="1385"/><ellipse cx="6286" cy="1399.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="6295" y="1403.5332">position : DirectX::XMFLOAT2</text><ellipse cx="6286" cy="1416.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="6295" y="1421.1426">scale : DirectX::XMFLOAT2</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6283" y="1431.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="6295" y="1438.752">m_bufferData : Transform2DData</text><ellipse cx="6286" cy="1452.1328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="6295" y="1456.3613">angle : float</text><ellipse cx="6286" cy="1469.7422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="6295" y="1473.9707">depth : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6283" y="1484.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432" x="6295" y="1491.5801">m_transformBuffer : std::unique_ptr&lt;DX12Wrapper::ConstantBuffer&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6276" x2="6732" y1="1498.6563" y2="1498.6563"/><ellipse cx="6286" cy="1512.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="6295" y="1517.1895">Transform2D(Object* owner)</text><ellipse cx="6286" cy="1530.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="6295" y="1534.7988">~Transform2D()</text><ellipse cx="6286" cy="1548.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="6295" y="1552.4082">GetConstantBuffer() : DX12Wrapper::ConstantBuffer&amp;</text><ellipse cx="6286" cy="1565.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="6295" y="1570.0176">GetTransformMatrix() : DirectX::XMMATRIX</text><ellipse cx="6286" cy="1583.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="6295" y="1587.627">Draw() : void</text><ellipse cx="6286" cy="1601.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="6295" y="1605.2363">Update(float deltaTime) : void</text></g><!--MD5=[649c30b002908cf98c46b0210f31e60e]
class Framework.Window--><g id="elem_Framework.Window"><rect codeLine="402" fill="#F1F1F1" height="188.875" id="Framework.Window" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="465" x="5006.5" y="661"/><ellipse cx="5210.25" cy="677" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5213.9375,678.2031 Q5213.6875,681.6875 5212.5469,682.8438 Q5211.5156,683.8594 5210.1094,683.8594 Q5208.7031,683.8594 5207.6719,682.8438 Q5205.9219,681.0781 5205.9219,677.4063 Q5205.9219,673.1563 5207.7969,671.25 Q5208.8438,670.2344 5210.1719,670.2344 Q5211.5781,670.2344 5212.4219,671.0469 Q5213.9063,672.5625 5213.8281,675.4375 L5211.7031,675.4375 Q5211.625,673.1094 5210.9844,672.4688 Q5210.7031,672.1719 5210.1719,672.1719 Q5209.7188,672.1719 5209.3594,672.5469 Q5208.125,673.7656 5208.125,677.2813 Q5208.125,680.3281 5209.1719,681.3438 Q5209.5938,681.7813 5210.1094,681.7813 Q5210.5625,681.7813 5211,681.3438 Q5211.5625,680.7969 5211.6406,678.2031 L5213.9375,678.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="5230.75" y="682.7285">Window</text><line style="stroke:#181818;stroke-width:0.5;" x1="5007.5" x2="5470.5" y1="693" y2="693"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5014.5" y="704.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="5026.5" y="711.5332">m_wndClassEx : WNDCLASSEX</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5014.5" y="721.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="5026.5" y="729.1426">m_hwnd : static HWND</text><line style="stroke:#181818;stroke-width:0.5;" x1="5007.5" x2="5470.5" y1="736.2188" y2="736.2188"/><ellipse cx="5017.5" cy="750.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="5026.5" y="754.752">Window()</text><ellipse cx="5017.5" cy="768.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="5026.5" y="772.3613">~Window()</text><ellipse cx="5017.5" cy="785.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="129" x="5026.5" y="789.9707">GetHwnd() : HWND&amp;</text><ellipse cx="5017.5" cy="803.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="149" x="5026.5" y="807.5801">GetWindowSize() : SIZE</text><ellipse cx="5017.5" cy="820.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="5026.5" y="825.1895">DispatchWindowMessage() : bool</text><ellipse cx="5017.5" cy="838.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439" x="5026.5" y="842.7988">Create(const TCHAR* windowName, LONG width, LONG height) : void</text></g><!--MD5=[0b5317aef40e18066871cf474a2b3a2e]
class Framework.BUTTON_STATE--><g id="elem_Framework.BUTTON_STATE"><rect codeLine="413" fill="#F1F1F1" height="118.4375" id="Framework.BUTTON_STATE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="4830.5" y="696.5"/><ellipse cx="4845.5" cy="712.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4844.2188,711.1719 L4848.7344,711.1719 L4848.7344,713.125 L4844.2188,713.125 L4844.2188,717.4219 L4849.4531,717.4219 L4849.4531,719.3594 L4842,719.3594 L4842,705.7344 L4849.125,705.7344 L4849.125,707.6719 L4844.2188,707.6719 L4844.2188,711.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="4859.5" y="718.2285">BUTTON_STATE</text><line style="stroke:#181818;stroke-width:0.5;" x1="4831.5" x2="4970.5" y1="728.5" y2="728.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="4836.5" y="747.0332">DOWN</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="4836.5" y="764.6426">HOLD</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="4836.5" y="782.252">NONE</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="18" x="4836.5" y="799.8613">UP</text><line style="stroke:#181818;stroke-width:0.5;" x1="4831.5" x2="4970.5" y1="806.9375" y2="806.9375"/></g><!--MD5=[3f59ffb1103ad7ea8fdf318a4911297d]
class Framework.MOUSECODE--><g id="elem_Framework.MOUSECODE"><rect codeLine="420" fill="#F1F1F1" height="100.8281" id="Framework.MOUSECODE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="3997.5" y="244.5"/><ellipse cx="4012.5" cy="260.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4011.2188,259.1719 L4015.7344,259.1719 L4015.7344,261.125 L4011.2188,261.125 L4011.2188,265.4219 L4016.4531,265.4219 L4016.4531,267.3594 L4009,267.3594 L4009,253.7344 L4016.125,253.7344 L4016.125,255.6719 L4011.2188,255.6719 L4011.2188,259.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="4026.5" y="266.2285">MOUSECODE</text><line style="stroke:#181818;stroke-width:0.5;" x1="3998.5" x2="4117.5" y1="276.5" y2="276.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="4003.5" y="295.0332">LEFT</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="4003.5" y="312.6426">RIGHT</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="4003.5" y="330.252">WHEEL</text><line style="stroke:#181818;stroke-width:0.5;" x1="3998.5" x2="4117.5" y1="337.3281" y2="337.3281"/></g><!--MD5=[e577def750b1928e715528286174c075]
class Framework.SHADERTYPE--><g id="elem_Framework.SHADERTYPE"><rect codeLine="426" fill="#F1F1F1" height="83.2188" id="Framework.SHADERTYPE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="124" x="6247" y="714"/><ellipse cx="6262" cy="730" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6260.7188,728.6719 L6265.2344,728.6719 L6265.2344,730.625 L6260.7188,730.625 L6260.7188,734.9219 L6265.9531,734.9219 L6265.9531,736.8594 L6258.5,736.8594 L6258.5,723.2344 L6265.625,723.2344 L6265.625,725.1719 L6260.7188,725.1719 L6260.7188,728.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="6276" y="735.7285">SHADERTYPE</text><line style="stroke:#181818;stroke-width:0.5;" x1="6248" x2="6370" y1="746" y2="746"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="6253" y="764.5332">PIXEL</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="6253" y="782.1426">VERTEX</text><line style="stroke:#181818;stroke-width:0.5;" x1="6248" x2="6370" y1="789.2188" y2="789.2188"/></g><!--MD5=[118f0f9d5ff832a52b550eecf6ee7e7f]
class Framework.SPRITE_DRAW_MODE--><g id="elem_Framework.SPRITE_DRAW_MODE"><rect codeLine="431" fill="#F1F1F1" height="83.2188" id="Framework.SPRITE_DRAW_MODE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="5231" y="2221"/><ellipse cx="5246" cy="2237" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5244.7188,2235.6719 L5249.2344,2235.6719 L5249.2344,2237.625 L5244.7188,2237.625 L5244.7188,2241.9219 L5249.9531,2241.9219 L5249.9531,2243.8594 L5242.5,2243.8594 L5242.5,2230.2344 L5249.625,2230.2344 L5249.625,2232.1719 L5244.7188,2232.1719 L5244.7188,2235.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="5260" y="2242.7285">SPRITE_DRAW_MODE</text><line style="stroke:#181818;stroke-width:0.5;" x1="5232" x2="5410" y1="2253" y2="2253"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="5237" y="2271.5332">GAMEOBJECT</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="23" x="5237" y="2289.1426">GUI</text><line style="stroke:#181818;stroke-width:0.5;" x1="5232" x2="5410" y1="2296.2188" y2="2296.2188"/></g><!--MD5=[748a11c8bc94caf1c2766a37fc71d294]
class Framework.SPRITE_PIVOT--><g id="elem_Framework.SPRITE_PIVOT"><rect codeLine="436" fill="#F1F1F1" height="83.2188" id="Framework.SPRITE_PIVOT" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="3832" y="253.5"/><ellipse cx="3847" cy="269.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3845.7188,268.1719 L3850.2344,268.1719 L3850.2344,270.125 L3845.7188,270.125 L3845.7188,274.4219 L3850.9531,274.4219 L3850.9531,276.3594 L3843.5,276.3594 L3843.5,262.7344 L3850.625,262.7344 L3850.625,264.6719 L3845.7188,264.6719 L3845.7188,268.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="3861" y="275.2285">SPRITE_PIVOT</text><line style="stroke:#181818;stroke-width:0.5;" x1="3833" x2="3961" y1="285.5" y2="285.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="3838" y="304.0332">CENTER</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="3838" y="321.6426">TOP_LEFT</text><line style="stroke:#181818;stroke-width:0.5;" x1="3833" x2="3961" y1="328.7188" y2="328.7188"/></g><!--MD5=[d03bc6c25f32e614c663c7e5c5937217]
class Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX--><g id="elem_Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX"><rect codeLine="441" fill="#F1F1F1" height="118.4375" id="Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="322" x="5446" y="2203.5"/><ellipse cx="5461" cy="2219.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5459.7188,2218.1719 L5464.2344,2218.1719 L5464.2344,2220.125 L5459.7188,2220.125 L5459.7188,2224.4219 L5464.9531,2224.4219 L5464.9531,2226.3594 L5457.5,2226.3594 L5457.5,2212.7344 L5464.625,2212.7344 L5464.625,2214.6719 L5459.7188,2214.6719 L5459.7188,2218.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="5475" y="2225.2285">SpriteRenderer::CONSTANT_BUFFER_INDEX</text><line style="stroke:#181818;stroke-width:0.5;" x1="5447" x2="5767" y1="2235.5" y2="2235.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="5452" y="2254.0332">BUFFER_COUNT</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="5452" y="2271.6426">CAMERA</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="5452" y="2289.252">DRAW_MODE</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="5452" y="2306.8613">TRANSFORM</text><line style="stroke:#181818;stroke-width:0.5;" x1="5447" x2="5767" y1="2313.9375" y2="2313.9375"/></g><!--MD5=[d186ab9b51d1bf169734395f191bdee8]
class Framework.Camera::CameraData--><g id="elem_Framework.Camera::CameraData"><rect codeLine="448" fill="#F1F1F1" height="83.2188" id="Framework.Camera::CameraData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="222" x="6149" y="1884"/><ellipse cx="6187.4" cy="1900" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6191.0875,1901.2031 Q6190.8375,1904.6875 6189.6969,1905.8438 Q6188.6656,1906.8594 6187.2594,1906.8594 Q6185.8531,1906.8594 6184.8219,1905.8438 Q6183.0719,1904.0781 6183.0719,1900.4063 Q6183.0719,1896.1563 6184.9469,1894.25 Q6185.9938,1893.2344 6187.3219,1893.2344 Q6188.7281,1893.2344 6189.5719,1894.0469 Q6191.0563,1895.5625 6190.9781,1898.4375 L6188.8531,1898.4375 Q6188.775,1896.1094 6188.1344,1895.4688 Q6187.8531,1895.1719 6187.3219,1895.1719 Q6186.8688,1895.1719 6186.5094,1895.5469 Q6185.275,1896.7656 6185.275,1900.2813 Q6185.275,1903.3281 6186.3219,1904.3438 Q6186.7438,1904.7813 6187.2594,1904.7813 Q6187.7125,1904.7813 6188.15,1904.3438 Q6188.7125,1903.7969 6188.7906,1901.2031 L6191.0875,1901.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="6206.6" y="1905.7285">Camera::CameraData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6150" x2="6370" y1="1916" y2="1916"/><ellipse cx="6160" cy="1930.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="6169" y="1934.5332">projection : DirectX::XMMATRIX</text><ellipse cx="6160" cy="1947.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="6169" y="1952.1426">view : DirectX::XMMATRIX</text><line style="stroke:#181818;stroke-width:0.5;" x1="6150" x2="6370" y1="1959.2188" y2="1959.2188"/></g><!--MD5=[5488f5c4420238f6637fe9c52720a2ee]
class Framework.Sprite::SpriteVertex--><g id="elem_Framework.Sprite::SpriteVertex"><rect codeLine="453" fill="#F1F1F1" height="83.2188" id="Framework.Sprite::SpriteVertex" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="6531" y="2813"/><ellipse cx="6567.6" cy="2829" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6571.2875,2830.2031 Q6571.0375,2833.6875 6569.8969,2834.8438 Q6568.8656,2835.8594 6567.4594,2835.8594 Q6566.0531,2835.8594 6565.0219,2834.8438 Q6563.2719,2833.0781 6563.2719,2829.4063 Q6563.2719,2825.1563 6565.1469,2823.25 Q6566.1938,2822.2344 6567.5219,2822.2344 Q6568.9281,2822.2344 6569.7719,2823.0469 Q6571.2563,2824.5625 6571.1781,2827.4375 L6569.0531,2827.4375 Q6568.975,2825.1094 6568.3344,2824.4688 Q6568.0531,2824.1719 6567.5219,2824.1719 Q6567.0688,2824.1719 6566.7094,2824.5469 Q6565.475,2825.7656 6565.475,2829.2813 Q6565.475,2832.3281 6566.5219,2833.3438 Q6566.9438,2833.7813 6567.4594,2833.7813 Q6567.9125,2833.7813 6568.35,2833.3438 Q6568.9125,2832.7969 6568.9906,2830.2031 L6571.2875,2830.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="6586.4" y="2834.7285">Sprite::SpriteVertex</text><line style="stroke:#181818;stroke-width:0.5;" x1="6532" x2="6732" y1="2845" y2="2845"/><ellipse cx="6542" cy="2859.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="6551" y="2863.5332">uv : DirectX::XMFLOAT2</text><ellipse cx="6542" cy="2876.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="6551" y="2881.1426">vertex : DirectX::XMFLOAT3</text><line style="stroke:#181818;stroke-width:0.5;" x1="6532" x2="6732" y1="2888.2188" y2="2888.2188"/></g><!--MD5=[b8e94a326cb6066da7999960604adf96]
class Framework.Transform2D::Transform2DData--><g id="elem_Framework.Transform2D::Transform2DData"><rect codeLine="458" fill="#F1F1F1" height="65.6094" id="Framework.Transform2D::Transform2DData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="236" x="6406" y="1892.5"/><ellipse cx="6421" cy="1908.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6424.6875,1909.7031 Q6424.4375,1913.1875 6423.2969,1914.3438 Q6422.2656,1915.3594 6420.8594,1915.3594 Q6419.4531,1915.3594 6418.4219,1914.3438 Q6416.6719,1912.5781 6416.6719,1908.9063 Q6416.6719,1904.6563 6418.5469,1902.75 Q6419.5938,1901.7344 6420.9219,1901.7344 Q6422.3281,1901.7344 6423.1719,1902.5469 Q6424.6563,1904.0625 6424.5781,1906.9375 L6422.4531,1906.9375 Q6422.375,1904.6094 6421.7344,1903.9688 Q6421.4531,1903.6719 6420.9219,1903.6719 Q6420.4688,1903.6719 6420.1094,1904.0469 Q6418.875,1905.2656 6418.875,1908.7813 Q6418.875,1911.8281 6419.9219,1912.8438 Q6420.3438,1913.2813 6420.8594,1913.2813 Q6421.3125,1913.2813 6421.75,1912.8438 Q6422.3125,1912.2969 6422.3906,1909.7031 L6424.6875,1909.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="6435" y="1914.2285">Transform2D::Transform2DData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6407" x2="6641" y1="1924.5" y2="1924.5"/><ellipse cx="6417" cy="1938.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="6426" y="1943.0332">model : DirectX::XMMATRIX</text><line style="stroke:#181818;stroke-width:0.5;" x1="6407" x2="6641" y1="1950.1094" y2="1950.1094"/></g><!--MD5=[015cff356b3184d62b83d7c002a5d996]
class DX12Wrapper.ConstantBuffer--><g id="elem_DX12Wrapper.ConstantBuffer"><rect codeLine="465" fill="#F1F1F1" height="259.3125" id="DX12Wrapper.ConstantBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="553" x="12171.5" y="2725"/><ellipse cx="12396.25" cy="2741" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12399.9375,2742.2031 Q12399.6875,2745.6875 12398.5469,2746.8438 Q12397.5156,2747.8594 12396.1094,2747.8594 Q12394.7031,2747.8594 12393.6719,2746.8438 Q12391.9219,2745.0781 12391.9219,2741.4063 Q12391.9219,2737.1563 12393.7969,2735.25 Q12394.8438,2734.2344 12396.1719,2734.2344 Q12397.5781,2734.2344 12398.4219,2735.0469 Q12399.9063,2736.5625 12399.8281,2739.4375 L12397.7031,2739.4375 Q12397.625,2737.1094 12396.9844,2736.4688 Q12396.7031,2736.1719 12396.1719,2736.1719 Q12395.7188,2736.1719 12395.3594,2736.5469 Q12394.125,2737.7656 12394.125,2741.2813 Q12394.125,2744.3281 12395.1719,2745.3438 Q12395.5938,2745.7813 12396.1094,2745.7813 Q12396.5625,2745.7813 12397,2745.3438 Q12397.5625,2744.7969 12397.6406,2742.2031 L12399.9375,2742.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="12416.75" y="2746.7285">ConstantBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="12172.5" x2="12723.5" y1="2757" y2="2757"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12179.5" y="2768.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="12191.5" y="2775.5332">_mappedData : BYTE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12179.5" y="2785.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="12191.5" y="2793.1426">_constantBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12179.5" y="2803.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="12191.5" y="2810.752">_bufferSize : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="12172.5" x2="12723.5" y1="2817.8281" y2="2817.8281"/><ellipse cx="12182.5" cy="2832.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="12191.5" y="2836.3613">ConstantBuffer()</text><ellipse cx="12182.5" cy="2849.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="12191.5" y="2853.9707">~ConstantBuffer()</text><ellipse cx="12182.5" cy="2867.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="12191.5" y="2871.5801">GetGPUVirtualAddress() : D3D12_GPU_VIRTUAL_ADDRESS</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12179.5" y="2881.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="519" x="12191.5" y="2889.1895">CreateConstantBuffer(ID3D12Device&amp; device, const UINT&amp; bufferSize) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12179.5" y="2899.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="422" x="12191.5" y="2906.7988">MapConstantBuffer(void* data, const UINT&amp; bufferSize) : HRESULT</text><ellipse cx="12182.5" cy="2920.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="12191.5" y="2924.4082">GetBuffer() : ID3D12Resource&amp;</text><ellipse cx="12182.5" cy="2937.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="12191.5" y="2942.0176">GetBufferSize() : UINT&amp;</text><ellipse cx="12182.5" cy="2955.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="527" x="12191.5" y="2959.627">Create(ID3D12Device&amp; device, void* data, const UINT&amp; bufferSize) : Utility::RESULT</text><ellipse cx="12182.5" cy="2973.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="12191.5" y="2977.2363">UpdateData(void* data) : void</text></g><!--MD5=[bcffbf7b73ddbd0500447a0451b8a00a]
class DX12Wrapper.CubeRenderTarget--><g id="elem_DX12Wrapper.CubeRenderTarget"><rect codeLine="480" fill="#F1F1F1" height="312.1406" id="DX12Wrapper.CubeRenderTarget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1205" x="10931.5" y="2698.5"/><ellipse cx="11468.25" cy="2714.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11471.9375,2715.7031 Q11471.6875,2719.1875 11470.5469,2720.3438 Q11469.5156,2721.3594 11468.1094,2721.3594 Q11466.7031,2721.3594 11465.6719,2720.3438 Q11463.9219,2718.5781 11463.9219,2714.9063 Q11463.9219,2710.6563 11465.7969,2708.75 Q11466.8438,2707.7344 11468.1719,2707.7344 Q11469.5781,2707.7344 11470.4219,2708.5469 Q11471.9063,2710.0625 11471.8281,2712.9375 L11469.7031,2712.9375 Q11469.625,2710.6094 11468.9844,2709.9688 Q11468.7031,2709.6719 11468.1719,2709.6719 Q11467.7188,2709.6719 11467.3594,2710.0469 Q11466.125,2711.2656 11466.125,2714.7813 Q11466.125,2717.8281 11467.1719,2718.8438 Q11467.5938,2719.2813 11468.1094,2719.2813 Q11468.5625,2719.2813 11469,2718.8438 Q11469.5625,2718.2969 11469.6406,2715.7031 L11471.9375,2715.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="11488.75" y="2720.2285">CubeRenderTarget</text><line style="stroke:#181818;stroke-width:0.5;" x1="10932.5" x2="12135.5" y1="2730.5" y2="2730.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2741.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="10951.5" y="2749.0332">_renderTargetData : CubeRenderTargetData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2759.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="10951.5" y="2766.6426">_depthStencilBuffer : DepthStencilBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2777.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="10951.5" y="2784.252">_textureHeap : DescriptorHeapCBV_SRV_UAV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2794.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="10951.5" y="2801.8613">_dsvHeap : DescriptorHeapDSV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2812.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="10951.5" y="2819.4707">_rtvHeap : DescriptorHeapRTV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2829.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="10951.5" y="2837.0801">_renderTargetBuffer : RenderTargetBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2847.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="10951.5" y="2854.6895">_depthStencilTexture : Texture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10939.5" y="2865.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="10951.5" y="2872.2988">_renderTargetTexture : Texture</text><line style="stroke:#181818;stroke-width:0.5;" x1="10932.5" x2="12135.5" y1="2879.375" y2="2879.375"/><ellipse cx="10942.5" cy="2893.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="10951.5" y="2897.9082">GetDepthStencilTexture() : Texture&amp;</text><ellipse cx="10942.5" cy="2911.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="10951.5" y="2915.5176">GetRenderTargetTexture() : Texture&amp;</text><ellipse cx="10942.5" cy="2928.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="592" x="10951.5" y="2933.127">Create(ID3D12Device&amp; device, CubeRenderTargetData&amp; renderTargetData) : Utility::RESULT</text><ellipse cx="10942.5" cy="2946.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1179" x="10951.5" y="2950.7363">BeginMultiRendering(CubeRenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="10942.5" cy="2964.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="785" x="10951.5" y="2968.3457">BeginRendering(RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="10942.5" cy="2981.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="750" x="10951.5" y="2985.9551">EndMultiRendering(CubeRenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext) : void</text><ellipse cx="10942.5" cy="2999.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="10951.5" y="3003.5645">EndRendering(RenderingContext&amp; renderContext) : void</text></g><!--MD5=[9532d3fded6d24aba1a3ab0a6b9b9e95]
class DX12Wrapper.DepthStencilBuffer--><g id="elem_DX12Wrapper.DepthStencilBuffer"><rect codeLine="498" fill="#F1F1F1" height="171.2656" id="DX12Wrapper.DepthStencilBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="565" x="15533.5" y="3502"/><ellipse cx="15752.75" cy="3518" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15756.4375,3519.2031 Q15756.1875,3522.6875 15755.0469,3523.8438 Q15754.0156,3524.8594 15752.6094,3524.8594 Q15751.2031,3524.8594 15750.1719,3523.8438 Q15748.4219,3522.0781 15748.4219,3518.4063 Q15748.4219,3514.1563 15750.2969,3512.25 Q15751.3438,3511.2344 15752.6719,3511.2344 Q15754.0781,3511.2344 15754.9219,3512.0469 Q15756.4063,3513.5625 15756.3281,3516.4375 L15754.2031,3516.4375 Q15754.125,3514.1094 15753.4844,3513.4688 Q15753.2031,3513.1719 15752.6719,3513.1719 Q15752.2188,3513.1719 15751.8594,3513.5469 Q15750.625,3514.7656 15750.625,3518.2813 Q15750.625,3521.3281 15751.6719,3522.3438 Q15752.0938,3522.7813 15752.6094,3522.7813 Q15753.0625,3522.7813 15753.5,3522.3438 Q15754.0625,3521.7969 15754.1406,3519.2031 L15756.4375,3519.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="15773.25" y="3523.7285">DepthStencilBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="15534.5" x2="16097.5" y1="3534" y2="3534"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15541.5" y="3545.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="15553.5" y="3552.5332">_depthStencilBufferData : DepthStencilBufferData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15541.5" y="3562.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="15553.5" y="3570.1426">_dsvBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="15534.5" x2="16097.5" y1="3577.2188" y2="3577.2188"/><ellipse cx="15544.5" cy="3591.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="15553.5" y="3595.752">DepthStencilBuffer()</text><ellipse cx="15544.5" cy="3609.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="15553.5" y="3613.3613">~DepthStencilBuffer()</text><ellipse cx="15544.5" cy="3626.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="15553.5" y="3630.9707">GetDepthStencilBufferData() : DepthStencilBufferData</text><ellipse cx="15544.5" cy="3644.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="15553.5" y="3648.5801">GetBuffer() : ID3D12Resource&amp;</text><ellipse cx="15544.5" cy="3661.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="15553.5" y="3666.1895">Create(ID3D12Device&amp; device, const DepthStencilBufferData&amp; data) : Utility::RESULT</text></g><!--MD5=[4b82e7ad6d2a27158818db97925d4934]
class DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="elem_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><rect codeLine="508" fill="#F1F1F1" height="541.0625" id="DX12Wrapper.DescriptorHeapCBV_SRV_UAV" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="936" x="11066" y="3317"/><ellipse cx="11431.25" cy="3333" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11434.9375,3334.2031 Q11434.6875,3337.6875 11433.5469,3338.8438 Q11432.5156,3339.8594 11431.1094,3339.8594 Q11429.7031,3339.8594 11428.6719,3338.8438 Q11426.9219,3337.0781 11426.9219,3333.4063 Q11426.9219,3329.1563 11428.7969,3327.25 Q11429.8438,3326.2344 11431.1719,3326.2344 Q11432.5781,3326.2344 11433.4219,3327.0469 Q11434.9063,3328.5625 11434.8281,3331.4375 L11432.7031,3331.4375 Q11432.625,3329.1094 11431.9844,3328.4688 Q11431.7031,3328.1719 11431.1719,3328.1719 Q11430.7188,3328.1719 11430.3594,3328.5469 Q11429.125,3329.7656 11429.125,3333.2813 Q11429.125,3336.3281 11430.1719,3337.3438 Q11430.5938,3337.7813 11431.1094,3337.7813 Q11431.5625,3337.7813 11432,3337.3438 Q11432.5625,3336.7969 11432.6406,3334.2031 L11434.9375,3334.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="11451.75" y="3338.7285">DescriptorHeapCBV_SRV_UAV</text><line style="stroke:#181818;stroke-width:0.5;" x1="11067" x2="12001" y1="3349" y2="3349"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3360.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="428" x="11086" y="3367.5332">_descriptorHeap : Microsoft::WRL::ComPtr&lt;ID3D12DescriptorHeap&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3377.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="11086" y="3385.1426">_handleIncrimentSize : SIZE_T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3395.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="11086" y="3402.752">_registedCBVNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3413.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="11086" y="3420.3613">_registedSRVNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3430.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="11086" y="3437.9707">_registedUAVNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3448.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="351" x="11086" y="3455.5801">_MAX_CBV_DESCRIPTOR_NUM : static constexpr UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3465.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="351" x="11086" y="3473.1895">_MAX_SRV_DESCRIPTOR_NUM : static constexpr UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3483.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="350" x="11086" y="3490.7988">_MAX_UAV_DESCRIPTOR_NUM : static constexpr UINT</text><ellipse cx="11077" cy="3504.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="242" x="11086" y="3508.4082">NEXT_REGISTER : static constexpr int</text><line style="stroke:#181818;stroke-width:0.5;" x1="11067" x2="12001" y1="3515.4844" y2="3515.4844"/><ellipse cx="11077" cy="3529.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="11086" y="3534.0176">DescriptorHeapCBV_SRV_UAV()</text><ellipse cx="11077" cy="3547.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="11086" y="3551.627">~DescriptorHeapCBV_SRV_UAV()</text><ellipse cx="11077" cy="3565.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377" x="11086" y="3569.2363">GetGPUHandle() : CD3DX12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="11077" cy="3582.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507" x="11086" y="3586.8457">GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE</text><ellipse cx="11077" cy="3600.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="509" x="11086" y="3604.4551">GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="11077" cy="3617.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="537" x="11086" y="3622.0645">GetGPUDescriptorHandleForHeapStartCBV() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="11077" cy="3635.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="537" x="11086" y="3639.6738">GetGPUDescriptorHandleForHeapStartSRV() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="11077" cy="3653.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="536" x="11086" y="3657.2832">GetGPUDescriptorHandleForHeapStartUAV() : D3D12_GPU_DESCRIPTOR_HANDLE</text><ellipse cx="11077" cy="3670.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="11086" y="3674.8926">GetSRVHandle(int index) : D3D12_GPU_DESCRIPTOR_HANDLE</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11074" y="3685.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="11086" y="3692.502">CreateDescriptorHeap(ID3D12Device&amp; device) : HRESULT</text><ellipse cx="11077" cy="3705.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="11086" y="3710.1113">GetDescriptorHeapAddress() : ID3D12DescriptorHeap*</text><ellipse cx="11077" cy="3723.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="11086" y="3727.7207">GetHandleIncrimentSize() : SIZE_T</text><ellipse cx="11077" cy="3741.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="11086" y="3745.3301">Create(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="11077" cy="3758.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="11086" y="3762.9395">IsRegistedConstantBuffer() : bool</text><ellipse cx="11077" cy="3776.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="11086" y="3780.5488">IsRegistedShaderResource() : bool</text><ellipse cx="11077" cy="3793.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="11086" y="3798.1582">IsRegistedUnorderedAccessResource() : bool</text><ellipse cx="11077" cy="3811.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="674" x="11086" y="3815.7676">RegistConstantBuffer(ID3D12Device&amp; device, ConstantBuffer&amp; constantBuffer, const int&amp; registerNo) : void</text><ellipse cx="11077" cy="3829.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="809" x="11086" y="3833.377">RegistShaderResource(ID3D12Device&amp; device, Texture&amp; texture, ShaderResourceViewDesc&amp; desc, const int&amp; registerNo) : void</text><ellipse cx="11077" cy="3846.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="910" x="11086" y="3850.9863">RegistUnorderedAccessResource(ID3D12Device&amp; device, UnorderedAccessResource&amp; unorderedAccessResource, const int&amp; registerNo) : void</text></g><!--MD5=[2b8b5e69ebd69c77afae1ef0c58c98ec]
class DX12Wrapper.DescriptorHeapDSV--><g id="elem_DX12Wrapper.DescriptorHeapDSV"><rect codeLine="539" fill="#F1F1F1" height="241.7031" id="DX12Wrapper.DescriptorHeapDSV" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="533" x="14965.5" y="3466.5"/><ellipse cx="15164.75" cy="3482.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15168.4375,3483.7031 Q15168.1875,3487.1875 15167.0469,3488.3438 Q15166.0156,3489.3594 15164.6094,3489.3594 Q15163.2031,3489.3594 15162.1719,3488.3438 Q15160.4219,3486.5781 15160.4219,3482.9063 Q15160.4219,3478.6563 15162.2969,3476.75 Q15163.3438,3475.7344 15164.6719,3475.7344 Q15166.0781,3475.7344 15166.9219,3476.5469 Q15168.4063,3478.0625 15168.3281,3480.9375 L15166.2031,3480.9375 Q15166.125,3478.6094 15165.4844,3477.9688 Q15165.2031,3477.6719 15164.6719,3477.6719 Q15164.2188,3477.6719 15163.8594,3478.0469 Q15162.625,3479.2656 15162.625,3482.7813 Q15162.625,3485.8281 15163.6719,3486.8438 Q15164.0938,3487.2813 15164.6094,3487.2813 Q15165.0625,3487.2813 15165.5,3486.8438 Q15166.0625,3486.2969 15166.1406,3483.7031 L15168.4375,3483.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="15185.25" y="3488.2285">DescriptorHeapDSV</text><line style="stroke:#181818;stroke-width:0.5;" x1="14966.5" x2="15497.5" y1="3498.5" y2="3498.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14973.5" y="3509.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="14985.5" y="3517.0332">_dsvHeap : Microsoft::WRL::ComPtr&lt;ID3D12DescriptorHeap&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14973.5" y="3527.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="14985.5" y="3534.6426">_handleIncrimentSize : SIZE_T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14973.5" y="3545.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="14985.5" y="3552.252">_registedDSVNum : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="14966.5" x2="15497.5" y1="3559.3281" y2="3559.3281"/><ellipse cx="14976.5" cy="3573.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="14985.5" y="3577.8613">DescriptorHeapDSV()</text><ellipse cx="14976.5" cy="3591.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="14985.5" y="3595.4707">~DescriptorHeapDSV()</text><ellipse cx="14976.5" cy="3608.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507" x="14985.5" y="3613.0801">GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14973.5" y="3623.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="14985.5" y="3630.6895">CreateDescriptorHeap(ID3D12Device&amp; device) : HRESULT</text><ellipse cx="14976.5" cy="3644.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="14985.5" y="3648.2988">GetHandleIncrimentSize() : SIZE_T</text><ellipse cx="14976.5" cy="3661.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="14985.5" y="3665.9082">GetRegistedDescriptorNum() : UINT</text><ellipse cx="14976.5" cy="3679.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="14985.5" y="3683.5176">Create(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="14976.5" cy="3696.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="473" x="14985.5" y="3701.127">RegistDescriptor(ID3D12Device&amp; device, DepthStencilBuffer&amp; buffer) : void</text></g><!--MD5=[fd902796c8f281cc91c37326deda5cd0]
class DX12Wrapper.DescriptorHeapRTV--><g id="elem_DX12Wrapper.DescriptorHeapRTV"><rect codeLine="553" fill="#F1F1F1" height="312.1406" id="DX12Wrapper.DescriptorHeapRTV" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="769" x="13085.5" y="3431.5"/><ellipse cx="13402.75" cy="3447.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13406.4375,3448.7031 Q13406.1875,3452.1875 13405.0469,3453.3438 Q13404.0156,3454.3594 13402.6094,3454.3594 Q13401.2031,3454.3594 13400.1719,3453.3438 Q13398.4219,3451.5781 13398.4219,3447.9063 Q13398.4219,3443.6563 13400.2969,3441.75 Q13401.3438,3440.7344 13402.6719,3440.7344 Q13404.0781,3440.7344 13404.9219,3441.5469 Q13406.4063,3443.0625 13406.3281,3445.9375 L13404.2031,3445.9375 Q13404.125,3443.6094 13403.4844,3442.9688 Q13403.2031,3442.6719 13402.6719,3442.6719 Q13402.2188,3442.6719 13401.8594,3443.0469 Q13400.625,3444.2656 13400.625,3447.7813 Q13400.625,3450.8281 13401.6719,3451.8438 Q13402.0938,3452.2813 13402.6094,3452.2813 Q13403.0625,3452.2813 13403.5,3451.8438 Q13404.0625,3451.2969 13404.1406,3448.7031 L13406.4375,3448.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="13423.25" y="3453.2285">DescriptorHeapRTV</text><line style="stroke:#181818;stroke-width:0.5;" x1="13086.5" x2="13853.5" y1="3463.5" y2="3463.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13093.5" y="3474.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="13105.5" y="3482.0332">_rtvHeap : Microsoft::WRL::ComPtr&lt;ID3D12DescriptorHeap&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13093.5" y="3492.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="13105.5" y="3499.6426">_handleIncrimentSize : SIZE_T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13093.5" y="3510.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="13105.5" y="3517.252">_nextHandleLocation : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13093.5" y="3527.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="13105.5" y="3534.8613">_registedRTVNum : UINT</text><ellipse cx="13096.5" cy="3548.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="291" x="13105.5" y="3552.4707">MAXDESCRIPTORNUM : static constexpr UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="13086.5" x2="13853.5" y1="3559.5469" y2="3559.5469"/><ellipse cx="13096.5" cy="3573.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="13105.5" y="3578.0801">DescriptorHeapRTV()</text><ellipse cx="13096.5" cy="3591.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="13105.5" y="3595.6895">~DescriptorHeapRTV()</text><ellipse cx="13096.5" cy="3609.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507" x="13105.5" y="3613.2988">GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE</text><ellipse cx="13096.5" cy="3626.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="13105.5" y="3630.9082">GetNextCPUDescriptorHandle() : D3D12_CPU_DESCRIPTOR_HANDLE</text><ellipse cx="13096.5" cy="3644.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="509" x="13105.5" y="3648.5176">GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13093.5" y="3658.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="13105.5" y="3666.127">CreateDescriptorHeap(ID3D12Device&amp; device) : HRESULT</text><ellipse cx="13096.5" cy="3679.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="13105.5" y="3683.7363">GetHandleIncrimentSize() : SIZE_T</text><ellipse cx="13096.5" cy="3697.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="13105.5" y="3701.3457">GetRegistedDescriptorNum() : UINT</text><ellipse cx="13096.5" cy="3714.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="13105.5" y="3718.9551">Create(ID3D12Device&amp; device) : Utility::RESULT</text><ellipse cx="13096.5" cy="3732.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="743" x="13105.5" y="3736.5645">RegistDescriptor(ID3D12Device&amp; device, RenderTargetBuffer&amp; buffer, DXGI_FORMAT format, bool isCubeMap) : void</text></g><!--MD5=[0033b9a06f99d825ede1cbe18adf6982]
class DX12Wrapper.Dx12GraphicsEngine--><g id="elem_DX12Wrapper.Dx12GraphicsEngine"><rect codeLine="571" fill="#F1F1F1" height="805.2031" id="DX12Wrapper.Dx12GraphicsEngine" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1084" x="16102" y="2452"/><ellipse cx="16573.25" cy="2468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16576.9375,2469.2031 Q16576.6875,2472.6875 16575.5469,2473.8438 Q16574.5156,2474.8594 16573.1094,2474.8594 Q16571.7031,2474.8594 16570.6719,2473.8438 Q16568.9219,2472.0781 16568.9219,2468.4063 Q16568.9219,2464.1563 16570.7969,2462.25 Q16571.8438,2461.2344 16573.1719,2461.2344 Q16574.5781,2461.2344 16575.4219,2462.0469 Q16576.9063,2463.5625 16576.8281,2466.4375 L16574.7031,2466.4375 Q16574.625,2464.1094 16573.9844,2463.4688 Q16573.7031,2463.1719 16573.1719,2463.1719 Q16572.7188,2463.1719 16572.3594,2463.5469 Q16571.125,2464.7656 16571.125,2468.2813 Q16571.125,2471.3281 16572.1719,2472.3438 Q16572.5938,2472.7813 16573.1094,2472.7813 Q16573.5625,2472.7813 16574,2472.3438 Q16574.5625,2471.7969 16574.6406,2469.2031 L16576.9375,2469.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="16593.75" y="2473.7285">Dx12GraphicsEngine</text><line style="stroke:#181818;stroke-width:0.5;" x1="16103" x2="17185" y1="2484" y2="2484"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2495.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="16122" y="2502.5332">m_scissorRect : CD3DX12_RECT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2512.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="16122" y="2520.1426">m_viewport : CD3DX12_VIEWPORT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2530.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="16122" y="2537.752">_depthStencilBuffer : DX12Wrapper::DepthStencilBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2548.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="16122" y="2555.3613">depthStencilBufferData : DX12Wrapper::DepthStencilBufferData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2565.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="16122" y="2572.9707">m_imguiHeap : DX12Wrapper::DescriptorHeapCBV_SRV_UAV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2583.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="16122" y="2590.5801">_dsvHeap : DX12Wrapper::DescriptorHeapDSV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2600.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="16122" y="2608.1895">_frameHeap : DX12Wrapper::DescriptorHeapRTV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2618.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="16122" y="2625.7988">_frameBuffers : DX12Wrapper::RenderTargetBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2636.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="16122" y="2643.4082">m_renderContext : DX12Wrapper::RenderingContext</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2653.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="16122" y="2661.0176">_hwnd : HWND</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2671.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="16122" y="2678.627">_cmdAllocator : Microsoft::WRL::ComPtr&lt;ID3D12CommandAllocator&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2689.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="16122" y="2696.2363">_cmdQueue : Microsoft::WRL::ComPtr&lt;ID3D12CommandQueue&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2706.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="16122" y="2713.8457">_device : Microsoft::WRL::ComPtr&lt;ID3D12Device&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2724.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="16122" y="2731.4551">_fence : Microsoft::WRL::ComPtr&lt;ID3D12Fence&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2741.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425" x="16122" y="2749.0645">_cmdList : Microsoft::WRL::ComPtr&lt;ID3D12GraphicsCommandList&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2759.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="16122" y="2766.6738">_dxgiFactory : Microsoft::WRL::ComPtr&lt;IDXGIFactory4&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2777.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="16122" y="2784.2832">_swapchain : Microsoft::WRL::ComPtr&lt;IDXGISwapChain3&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2794.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="16122" y="2801.8926">_fenceVal : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2812.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="16122" y="2819.502">_windowHeight : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2829.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="16122" y="2837.1113">_windowWidth : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2847.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="263" x="16122" y="2854.7207">DOUBLE_BUFFER : static constexpr UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2865.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="406" x="16122" y="2872.3301">m_graphicsMemory : std::unique_ptr&lt;DirectX::GraphicsMemory&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="16103" x2="17185" y1="2879.4063" y2="2879.4063"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2890.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="16122" y="2897.9395">Dx12GraphicsEngine()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2908.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="16122" y="2915.5488">~Dx12GraphicsEngine()</text><ellipse cx="16113" cy="2928.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="16122" y="2933.1582">GetViewport() : CD3DX12_VIEWPORT&amp;</text><ellipse cx="16113" cy="2946.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="454" x="16122" y="2950.7676">GetFrameBufferDescriptorHeap() : DX12Wrapper::DescriptorHeapRTV&amp;</text><ellipse cx="16113" cy="2964.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="16122" y="2968.377">GetRenderingContext() : DX12Wrapper::RenderingContext&amp;</text><ellipse cx="16113" cy="2981.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="217" x="16122" y="2985.9863">Instance() : Dx12GraphicsEngine&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="2996.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="16122" y="3003.5957">CreateCommandX() : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="3013.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="16122" y="3021.2051">CreateDeviceAndDXGIFactory() : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="3031.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="16122" y="3038.8145">CreateFence() : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="3049.1953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1058" x="16122" y="3056.4238">CreateSwapChain(const HWND&amp; hwnd, const UINT&amp; windowWidth, const UINT&amp; windowHeight, const Microsoft::WRL::ComPtr&lt;IDXGIFactory4&gt;&amp; dxgiFactory) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="3066.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="16122" y="3074.0332">EnableDebugLayer() : HRESULT</text><ellipse cx="16113" cy="3087.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="16122" y="3091.6426">CmdAllocator() : ID3D12CommandAllocator&amp;</text><ellipse cx="16113" cy="3105.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="16122" y="3109.252">CmdQueue() : ID3D12CommandQueue&amp;</text><ellipse cx="16113" cy="3122.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="16122" y="3126.8613">Device() : ID3D12Device&amp;</text><ellipse cx="16113" cy="3140.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="16122" y="3144.4707">CmdList() : ID3D12GraphicsCommandList&amp;</text><ellipse cx="16113" cy="3157.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="16122" y="3162.0801">SwapChain() : IDXGISwapChain3&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16110" y="3172.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="16122" y="3179.6895">CreateFrameRenderTarget() : Utility::RESULT</text><ellipse cx="16113" cy="3193.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="604" x="16122" y="3197.2988">Init(const HWND&amp; hwnd, const UINT&amp; windowWidth, const UINT&amp; windowHeight) : Utility::RESULT</text><ellipse cx="16113" cy="3210.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="16122" y="3214.9082">BeginDraw() : void</text><ellipse cx="16113" cy="3228.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="16122" y="3232.5176">EndDraw() : void</text><ellipse cx="16113" cy="3245.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="16122" y="3250.127">SetFrameRenderTarget(const CD3DX12_VIEWPORT&amp; viewport, const CD3DX12_RECT&amp; scissorRect) : void</text></g><!--MD5=[433afccaa822407cbb6c3aa4fea4e1f2]
class DX12Wrapper.FontRenderer--><g id="elem_DX12Wrapper.FontRenderer"><rect codeLine="617" fill="#F1F1F1" height="224.0938" id="DX12Wrapper.FontRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="859" x="10037.5" y="2742.5"/><ellipse cx="10418.25" cy="2758.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10421.9375,2759.7031 Q10421.6875,2763.1875 10420.5469,2764.3438 Q10419.5156,2765.3594 10418.1094,2765.3594 Q10416.7031,2765.3594 10415.6719,2764.3438 Q10413.9219,2762.5781 10413.9219,2758.9063 Q10413.9219,2754.6563 10415.7969,2752.75 Q10416.8438,2751.7344 10418.1719,2751.7344 Q10419.5781,2751.7344 10420.4219,2752.5469 Q10421.9063,2754.0625 10421.8281,2756.9375 L10419.7031,2756.9375 Q10419.625,2754.6094 10418.9844,2753.9688 Q10418.7031,2753.6719 10418.1719,2753.6719 Q10417.7188,2753.6719 10417.3594,2754.0469 Q10416.125,2755.2656 10416.125,2758.7813 Q10416.125,2761.8281 10417.1719,2762.8438 Q10417.5938,2763.2813 10418.1094,2763.2813 Q10418.5625,2763.2813 10419,2762.8438 Q10419.5625,2762.2969 10419.6406,2759.7031 L10421.9375,2759.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="10438.75" y="2764.2285">FontRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="10038.5" x2="10895.5" y1="2774.5" y2="2774.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10045.5" y="2785.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="10057.5" y="2793.0332">m_fence : Microsoft::WRL::ComPtr&lt;ID3D12Fence&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10045.5" y="2803.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="10057.5" y="2810.6426">m_fenceVal : UINT64</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10045.5" y="2821.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="10057.5" y="2828.252">m_spriteBatch : std::unique_ptr&lt;DirectX::SpriteBatch&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10045.5" y="2838.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="10057.5" y="2845.8613">m_spriteFont : std::unique_ptr&lt;DirectX::SpriteFont&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10045.5" y="2856.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432" x="10057.5" y="2863.4707">m_fontHeap : std::unique_ptr&lt;class DescriptorHeapCBV_SRV_UAV&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="10038.5" x2="10895.5" y1="2870.5469" y2="2870.5469"/><ellipse cx="10048.5" cy="2884.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="10057.5" y="2889.0801">FontRenderer()</text><ellipse cx="10048.5" cy="2902.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="10057.5" y="2906.6895">~FontRenderer()</text><ellipse cx="10048.5" cy="2920.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="173" x="10057.5" y="2924.2988">Instance() : FontRenderer&amp;</text><ellipse cx="10048.5" cy="2937.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="10057.5" y="2941.9082">Init(const std::wstring&amp; fontPath) : Utility::RESULT</text><ellipse cx="10048.5" cy="2955.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="833" x="10057.5" y="2959.5176">DrawString(const std::wstring&amp; text, const DirectX::XMFLOAT2&amp; pos, const float&amp; scale, const DirectX::XMVECTORF32&amp; color) : void</text></g><!--MD5=[7fa1be801d5ad1629bd1f128a3f53531]
class DX12Wrapper.GraphicsPipelineState--><g id="elem_DX12Wrapper.GraphicsPipelineState"><rect codeLine="630" fill="#F1F1F1" height="171.2656" id="DX12Wrapper.GraphicsPipelineState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="891" x="12759.5" y="2769"/><ellipse cx="13130.75" cy="2785" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13134.4375,2786.2031 Q13134.1875,2789.6875 13133.0469,2790.8438 Q13132.0156,2791.8594 13130.6094,2791.8594 Q13129.2031,2791.8594 13128.1719,2790.8438 Q13126.4219,2789.0781 13126.4219,2785.4063 Q13126.4219,2781.1563 13128.2969,2779.25 Q13129.3438,2778.2344 13130.6719,2778.2344 Q13132.0781,2778.2344 13132.9219,2779.0469 Q13134.4063,2780.5625 13134.3281,2783.4375 L13132.2031,2783.4375 Q13132.125,2781.1094 13131.4844,2780.4688 Q13131.2031,2780.1719 13130.6719,2780.1719 Q13130.2188,2780.1719 13129.8594,2780.5469 Q13128.625,2781.7656 13128.625,2785.2813 Q13128.625,2788.3281 13129.6719,2789.3438 Q13130.0938,2789.7813 13130.6094,2789.7813 Q13131.0625,2789.7813 13131.5,2789.3438 Q13132.0625,2788.7969 13132.1406,2786.2031 L13134.4375,2786.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="13151.25" y="2790.7285">GraphicsPipelineState</text><line style="stroke:#181818;stroke-width:0.5;" x1="12760.5" x2="13649.5" y1="2801" y2="2801"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12767.5" y="2812.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="422" x="12779.5" y="2819.5332">_pipelineStateDesc : D3D12_GRAPHICS_PIPELINE_STATE_DESC</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12767.5" y="2829.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="12779.5" y="2837.1426">_pipelineState : Microsoft::WRL::ComPtr&lt;ID3D12PipelineState&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="12760.5" x2="13649.5" y1="2844.2188" y2="2844.2188"/><ellipse cx="12770.5" cy="2858.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="12779.5" y="2862.752">GraphicsPipelineState()</text><ellipse cx="12770.5" cy="2876.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="12779.5" y="2880.3613">~GraphicsPipelineState()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12767.5" y="2890.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="865" x="12779.5" y="2897.9707">CreateGraphicsPipelineState(ID3D12Device&amp; device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC&amp; piplineStateDesc) : HRESULT</text><ellipse cx="12770.5" cy="2911.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="12779.5" y="2915.5801">GetPipelineState() : ID3D12PipelineState&amp;</text><ellipse cx="12770.5" cy="2928.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="757" x="12779.5" y="2933.1895">Create(ID3D12Device&amp; device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC&amp; piplineStateDesc) : Utility::RESULT</text></g><!--MD5=[5d864dc34a81646399c444beaf06a9d1]
class DX12Wrapper.IndexBuffer--><g id="elem_DX12Wrapper.IndexBuffer"><rect codeLine="640" fill="#F1F1F1" height="241.7031" id="DX12Wrapper.IndexBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="627" x="9375.5" y="2733.5"/><ellipse cx="9649.25" cy="2749.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9652.9375,2750.7031 Q9652.6875,2754.1875 9651.5469,2755.3438 Q9650.5156,2756.3594 9649.1094,2756.3594 Q9647.7031,2756.3594 9646.6719,2755.3438 Q9644.9219,2753.5781 9644.9219,2749.9063 Q9644.9219,2745.6563 9646.7969,2743.75 Q9647.8438,2742.7344 9649.1719,2742.7344 Q9650.5781,2742.7344 9651.4219,2743.5469 Q9652.9063,2745.0625 9652.8281,2747.9375 L9650.7031,2747.9375 Q9650.625,2745.6094 9649.9844,2744.9688 Q9649.7031,2744.6719 9649.1719,2744.6719 Q9648.7188,2744.6719 9648.3594,2745.0469 Q9647.125,2746.2656 9647.125,2749.7813 Q9647.125,2752.8281 9648.1719,2753.8438 Q9648.5938,2754.2813 9649.1094,2754.2813 Q9649.5625,2754.2813 9650,2753.8438 Q9650.5625,2753.2969 9650.6406,2750.7031 L9652.9375,2750.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="9669.75" y="2755.2285">IndexBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="9376.5" x2="10001.5" y1="2765.5" y2="2765.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9383.5" y="2776.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="9395.5" y="2784.0332">_indexBufferView : D3D12_INDEX_BUFFER_VIEW</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9383.5" y="2794.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="9395.5" y="2801.6426">_indexBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9383.5" y="2812.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="9395.5" y="2819.252">_indexNum : UINT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9383.5" y="2829.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="9395.5" y="2836.8613">_indexMap : UINT*</text><line style="stroke:#181818;stroke-width:0.5;" x1="9376.5" x2="10001.5" y1="2843.9375" y2="2843.9375"/><ellipse cx="9386.5" cy="2858.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="9395.5" y="2862.4707">IndexBuffer()</text><ellipse cx="9386.5" cy="2875.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="9395.5" y="2880.0801">~IndexBuffer()</text><ellipse cx="9386.5" cy="2893.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="9395.5" y="2897.6895">GetView() : D3D12_INDEX_BUFFER_VIEW&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9383.5" y="2908.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="601" x="9395.5" y="2915.2988">CreateIndexBufferAndView(ID3D12Device&amp; device, const std::vector&lt;UINT&gt;&amp; index) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9383.5" y="2925.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="9395.5" y="2932.9082">MapIndexBuffer(const std::vector&lt;UINT&gt;&amp; index) : HRESULT</text><ellipse cx="9386.5" cy="2946.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="9395.5" y="2950.5176">GetIndexNum() : UINT {query}</text><ellipse cx="9386.5" cy="2963.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="508" x="9395.5" y="2968.127">Create(ID3D12Device&amp; device, const std::vector&lt;UINT&gt;&amp; index) : Utility::RESULT</text></g><!--MD5=[03ff3e78d870a87bd9885d7b58f9888e]
class DX12Wrapper.RenderTarget--><g id="elem_DX12Wrapper.RenderTarget"><rect codeLine="654" fill="#F1F1F1" height="312.1406" id="DX12Wrapper.RenderTarget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1171" x="14895.5" y="2698.5"/><ellipse cx="15432.25" cy="2714.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15435.9375,2715.7031 Q15435.6875,2719.1875 15434.5469,2720.3438 Q15433.5156,2721.3594 15432.1094,2721.3594 Q15430.7031,2721.3594 15429.6719,2720.3438 Q15427.9219,2718.5781 15427.9219,2714.9063 Q15427.9219,2710.6563 15429.7969,2708.75 Q15430.8438,2707.7344 15432.1719,2707.7344 Q15433.5781,2707.7344 15434.4219,2708.5469 Q15435.9063,2710.0625 15435.8281,2712.9375 L15433.7031,2712.9375 Q15433.625,2710.6094 15432.9844,2709.9688 Q15432.7031,2709.6719 15432.1719,2709.6719 Q15431.7188,2709.6719 15431.3594,2710.0469 Q15430.125,2711.2656 15430.125,2714.7813 Q15430.125,2717.8281 15431.1719,2718.8438 Q15431.5938,2719.2813 15432.1094,2719.2813 Q15432.5625,2719.2813 15433,2718.8438 Q15433.5625,2718.2969 15433.6406,2715.7031 L15435.9375,2715.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="15452.75" y="2720.2285">RenderTarget</text><line style="stroke:#181818;stroke-width:0.5;" x1="14896.5" x2="16065.5" y1="2730.5" y2="2730.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2741.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="14915.5" y="2749.0332">_depthStencilBuffer : DepthStencilBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2759.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="14915.5" y="2766.6426">_textureHeap : DescriptorHeapCBV_SRV_UAV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2777.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="14915.5" y="2784.252">_dsvHeap : DescriptorHeapDSV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2794.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="14915.5" y="2801.8613">_rtvHeap : DescriptorHeapRTV</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2812.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="14915.5" y="2819.4707">_renderTargetBuffer : RenderTargetBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2829.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="14915.5" y="2837.0801">_renderTargetData : RenderTargetData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2847.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="14915.5" y="2854.6895">_depthStencilTexture : Texture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14903.5" y="2865.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="14915.5" y="2872.2988">_renderTargetTexture : Texture</text><line style="stroke:#181818;stroke-width:0.5;" x1="14896.5" x2="16065.5" y1="2879.375" y2="2879.375"/><ellipse cx="14906.5" cy="2893.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="14915.5" y="2897.9082">GetDepthStencilTexture() : Texture&amp;</text><ellipse cx="14906.5" cy="2911.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="14915.5" y="2915.5176">GetRenderTargetTexture() : Texture&amp;</text><ellipse cx="14906.5" cy="2928.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="558" x="14915.5" y="2933.127">Create(ID3D12Device&amp; device, RenderTargetData&amp; renderTargetData) : Utility::RESULT</text><ellipse cx="14906.5" cy="2946.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1145" x="14915.5" y="2950.7363">BeginMultiRendering(RenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="14906.5" cy="2964.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="785" x="14915.5" y="2968.3457">BeginRendering(RenderingContext&amp; renderContext, CD3DX12_VIEWPORT&amp; viewport, CD3DX12_RECT&amp; scissorRect) : void</text><ellipse cx="14906.5" cy="2981.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="716" x="14915.5" y="2985.9551">EndMultiRendering(RenderTarget* renderTargets, const size_t&amp; length, RenderingContext&amp; renderContext) : void</text><ellipse cx="14906.5" cy="2999.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="14915.5" y="3003.5645">EndRendering(RenderingContext&amp; renderContext) : void</text></g><!--MD5=[dea2b8a4ca1de5dbc93d521ae620f0f6]
class DX12Wrapper.RenderTargetBuffer--><g id="elem_DX12Wrapper.RenderTargetBuffer"><rect codeLine="672" fill="#F1F1F1" height="153.6563" id="DX12Wrapper.RenderTargetBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="13889.5" y="3510.5"/><ellipse cx="14151.25" cy="3526.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14154.9375,3527.7031 Q14154.6875,3531.1875 14153.5469,3532.3438 Q14152.5156,3533.3594 14151.1094,3533.3594 Q14149.7031,3533.3594 14148.6719,3532.3438 Q14146.9219,3530.5781 14146.9219,3526.9063 Q14146.9219,3522.6563 14148.7969,3520.75 Q14149.8438,3519.7344 14151.1719,3519.7344 Q14152.5781,3519.7344 14153.4219,3520.5469 Q14154.9063,3522.0625 14154.8281,3524.9375 L14152.7031,3524.9375 Q14152.625,3522.6094 14151.9844,3521.9688 Q14151.7031,3521.6719 14151.1719,3521.6719 Q14150.7188,3521.6719 14150.3594,3522.0469 Q14149.125,3523.2656 14149.125,3526.7813 Q14149.125,3529.8281 14150.1719,3530.8438 Q14150.5938,3531.2813 14151.1094,3531.2813 Q14151.5625,3531.2813 14152,3530.8438 Q14152.5625,3530.2969 14152.6406,3527.7031 L14154.9375,3527.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="14171.75" y="3532.2285">RenderTargetBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="13890.5" x2="14547.5" y1="3542.5" y2="3542.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13897.5" y="3553.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="13909.5" y="3561.0332">_rtvBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="13890.5" x2="14547.5" y1="3568.1094" y2="3568.1094"/><ellipse cx="13900.5" cy="3582.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="13909.5" y="3586.6426">RenderTargetBuffer()</text><ellipse cx="13900.5" cy="3600.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="13909.5" y="3604.252">~RenderTargetBuffer()</text><ellipse cx="13900.5" cy="3617.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="13909.5" y="3621.8613">GetBuffer() : ID3D12Resource&amp;</text><ellipse cx="13900.5" cy="3635.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="13909.5" y="3639.4707">Create(ID3D12Device&amp; device, const RenderTargetBufferData&amp; data) : Utility::RESULT</text><ellipse cx="13900.5" cy="3652.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="633" x="13909.5" y="3657.0801">Create(ID3D12Device&amp; device, IDXGISwapChain3&amp; swapchain, const size_t&amp; index) : Utility::RESULT</text></g><!--MD5=[1e2d542b75cef13cf0b2b8e0864c7d58]
class DX12Wrapper.RenderingContext--><g id="elem_DX12Wrapper.RenderingContext"><rect codeLine="681" fill="#F1F1F1" height="541.0625" id="DX12Wrapper.RenderingContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1429" x="16133.5" y="3317"/><ellipse cx="16786.75" cy="3333" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16790.4375,3334.2031 Q16790.1875,3337.6875 16789.0469,3338.8438 Q16788.0156,3339.8594 16786.6094,3339.8594 Q16785.2031,3339.8594 16784.1719,3338.8438 Q16782.4219,3337.0781 16782.4219,3333.4063 Q16782.4219,3329.1563 16784.2969,3327.25 Q16785.3438,3326.2344 16786.6719,3326.2344 Q16788.0781,3326.2344 16788.9219,3327.0469 Q16790.4063,3328.5625 16790.3281,3331.4375 L16788.2031,3331.4375 Q16788.125,3329.1094 16787.4844,3328.4688 Q16787.2031,3328.1719 16786.6719,3328.1719 Q16786.2188,3328.1719 16785.8594,3328.5469 Q16784.625,3329.7656 16784.625,3333.2813 Q16784.625,3336.3281 16785.6719,3337.3438 Q16786.0938,3337.7813 16786.6094,3337.7813 Q16787.0625,3337.7813 16787.5,3337.3438 Q16788.0625,3336.7969 16788.1406,3334.2031 L16790.4375,3334.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="16807.25" y="3338.7285">RenderingContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="16134.5" x2="17561.5" y1="3349" y2="3349"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="16141.5" y="3360.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="16153.5" y="3367.5332">_cmdList : ID3D12GraphicsCommandList*</text><line style="stroke:#181818;stroke-width:0.5;" x1="16134.5" x2="17561.5" y1="3374.6094" y2="3374.6094"/><ellipse cx="16144.5" cy="3388.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="16153.5" y="3393.1426">RenderingContext()</text><ellipse cx="16144.5" cy="3406.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="16153.5" y="3410.752">~RenderingContext()</text><ellipse cx="16144.5" cy="3424.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1403" x="16153.5" y="3428.3613">ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE dsvHandle, D3D12_CLEAR_FLAGS clearFlags, const FLOAT&amp; clearDepth, const UINT8&amp; clearStencil, const UINT&amp; numRects, const D3D12_RECT* rects) : void</text><ellipse cx="16144.5" cy="3441.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1019" x="16153.5" y="3445.9707">ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const DirectX::XMFLOAT4&amp; color, const UINT&amp; numRects, const D3D12_RECT* rects) : void</text><ellipse cx="16144.5" cy="3459.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="916" x="16153.5" y="3463.5801">ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const float* color, const UINT&amp; numRects, const D3D12_RECT* rects) : void</text><ellipse cx="16144.5" cy="3476.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="16153.5" y="3481.1895">Close() : void</text><ellipse cx="16144.5" cy="3494.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1290" x="16153.5" y="3498.7988">CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION&amp; src, const D3D12_TEXTURE_COPY_LOCATION&amp; dst, const UINT&amp; dstX, const UINT&amp; dstY, const UINT&amp; dstZ, D3D12_BOX* srcBox) : void</text><ellipse cx="16144.5" cy="3512.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1201" x="16153.5" y="3516.4082">DrawIndexedInstanced(const UINT&amp; indexNumPerInstance, const UINT&amp; instanceNum, const UINT startIndexLocation, const INT&amp; baseVertexLocation, const UINT&amp; startInstanceLocation) : void</text><ellipse cx="16144.5" cy="3529.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="968" x="16153.5" y="3534.0176">DrawInstanced(const UINT&amp; vertexNumPerInstance, const UINT&amp; instanceNum, const UINT&amp; startVertexLocation, const UINT&amp; startInstanceLocation) : void</text><ellipse cx="16144.5" cy="3547.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="16153.5" y="3551.627">Init(ID3D12GraphicsCommandList&amp; cmdList) : void</text><ellipse cx="16144.5" cy="3565.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="16153.5" y="3569.2363">Reset(ID3D12CommandAllocator&amp; cmdAlloc) : void</text><ellipse cx="16144.5" cy="3582.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="16153.5" y="3586.8457">SetDescriptorHeap(ID3D12DescriptorHeap* const* descriptorHeap) : void</text><ellipse cx="16144.5" cy="3600.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="473" x="16153.5" y="3604.4551">SetDescriptorHeap(DescriptorHeapCBV_SRV_UAV&amp; descriptorHeap) : void</text><ellipse cx="16144.5" cy="3617.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="687" x="16153.5" y="3622.0645">SetDescriptorHeaps(const UINT&amp; descriptorHeapNum, ID3D12DescriptorHeap* const* descriptorHeaps) : void</text><ellipse cx="16144.5" cy="3635.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="750" x="16153.5" y="3639.6738">SetGraphicsRootDescriptorTable(const UINT&amp; rootPrameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE handle) : void</text><ellipse cx="16144.5" cy="3653.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="16153.5" y="3657.2832">SetGraphicsRootSignature(RootSignature&amp; rootSignature) : void</text><ellipse cx="16144.5" cy="3670.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="16153.5" y="3674.8926">SetIndexBuffer(const IndexBuffer&amp; indexBuffer) : void</text><ellipse cx="16144.5" cy="3688.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="16153.5" y="3692.502">SetPipelineState(GraphicsPipelineState&amp; pipelineState) : void</text><ellipse cx="16144.5" cy="3705.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="16153.5" y="3710.1113">SetPrimitiveTopology(const D3D12_PRIMITIVE_TOPOLOGY&amp; primitiveTopology) : void</text><ellipse cx="16144.5" cy="3723.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="866" x="16153.5" y="3727.7207">SetRenderTarget(const D3D12_CPU_DESCRIPTOR_HANDLE* rtvHandle, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void</text><ellipse cx="16144.5" cy="3741.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1008" x="16153.5" y="3745.3301">SetRenderTargets(const UINT&amp; rtvNum, const D3D12_CPU_DESCRIPTOR_HANDLE rtvHandles, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void</text><ellipse cx="16144.5" cy="3758.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="16153.5" y="3762.9395">SetScissorRect(const D3D12_RECT&amp; scissorRect) : void</text><ellipse cx="16144.5" cy="3776.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="555" x="16153.5" y="3780.5488">SetScissorRects(const UINT&amp; scissorRectNum, const D3D12_RECT&amp; scissorRect) : void</text><ellipse cx="16144.5" cy="3793.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="493" x="16153.5" y="3798.1582">SetVertexBuffer(const UINT&amp; startSlot, const VertexBuffer&amp; vertexBuffer) : void</text><ellipse cx="16144.5" cy="3811.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="16153.5" y="3815.7676">SetViewport(const D3D12_VIEWPORT&amp; viewport) : void</text><ellipse cx="16144.5" cy="3829.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="16153.5" y="3833.377">SetViewports(const UINT&amp; viewportNum, const D3D12_VIEWPORT&amp; viewports) : void</text><ellipse cx="16144.5" cy="3846.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="931" x="16153.5" y="3850.9863">TransitionResourceState(ID3D12Resource&amp; resource, D3D12_RESOURCE_STATES presentState, D3D12_RESOURCE_STATES afterState) : void</text></g><!--MD5=[093b7ef505698d60121ff376dd34286f]
class DX12Wrapper.RootSignature--><g id="elem_DX12Wrapper.RootSignature"><rect codeLine="712" fill="#F1F1F1" height="171.2656" id="DX12Wrapper.RootSignature" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1175" x="13685.5" y="2769"/><ellipse cx="14223.25" cy="2785" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14226.9375,2786.2031 Q14226.6875,2789.6875 14225.5469,2790.8438 Q14224.5156,2791.8594 14223.1094,2791.8594 Q14221.7031,2791.8594 14220.6719,2790.8438 Q14218.9219,2789.0781 14218.9219,2785.4063 Q14218.9219,2781.1563 14220.7969,2779.25 Q14221.8438,2778.2344 14223.1719,2778.2344 Q14224.5781,2778.2344 14225.4219,2779.0469 Q14226.9063,2780.5625 14226.8281,2783.4375 L14224.7031,2783.4375 Q14224.625,2781.1094 14223.9844,2780.4688 Q14223.7031,2780.1719 14223.1719,2780.1719 Q14222.7188,2780.1719 14222.3594,2780.5469 Q14221.125,2781.7656 14221.125,2785.2813 Q14221.125,2788.3281 14222.1719,2789.3438 Q14222.5938,2789.7813 14223.1094,2789.7813 Q14223.5625,2789.7813 14224,2789.3438 Q14224.5625,2788.7969 14224.6406,2786.2031 L14226.9375,2786.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="14243.75" y="2790.7285">RootSignature</text><line style="stroke:#181818;stroke-width:0.5;" x1="13686.5" x2="14859.5" y1="2801" y2="2801"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13693.5" y="2812.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="13705.5" y="2819.5332">_rootSignature : Microsoft::WRL::ComPtr&lt;ID3D12RootSignature&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="13686.5" x2="14859.5" y1="2826.6094" y2="2826.6094"/><ellipse cx="13696.5" cy="2840.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="13705.5" y="2845.1426">RootSignature()</text><ellipse cx="13696.5" cy="2858.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="13705.5" y="2862.752">~RootSignature()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13693.5" y="2873.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1149" x="13705.5" y="2880.3613">CreateRootSignature(ID3D12Device&amp; device, const DescriptorRangeData&amp; descRangeData, const D3D12_STATIC_SAMPLER_DESC&amp; samplerDescs, UINT samplerNum) : HRESULT</text><ellipse cx="13696.5" cy="2893.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="13705.5" y="2897.9707">GetRootSignature() : ID3D12RootSignature&amp; {query}</text><ellipse cx="13696.5" cy="2911.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="512" x="13705.5" y="2915.5801">Create(ID3D12Device&amp; device, const RootSignatureData&amp; data) : Utility::RESULT</text><ellipse cx="13696.5" cy="2928.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1090" x="13705.5" y="2933.1895">Create(ID3D12Device&amp; device, const DescriptorRangeData&amp; descRangeData, const D3D12_STATIC_SAMPLER_DESC&amp; samplerDescs, UINT samplerNum) : Utility::RESULT</text></g><!--MD5=[fdbeb6c4c123bff730e6e66c9e770c14]
class DX12Wrapper.Shader--><g id="elem_DX12Wrapper.Shader"><rect codeLine="722" fill="#F1F1F1" height="188.875" id="DX12Wrapper.Shader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="823" x="17221.5" y="2760"/><ellipse cx="17605.75" cy="2776" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17609.4375,2777.2031 Q17609.1875,2780.6875 17608.0469,2781.8438 Q17607.0156,2782.8594 17605.6094,2782.8594 Q17604.2031,2782.8594 17603.1719,2781.8438 Q17601.4219,2780.0781 17601.4219,2776.4063 Q17601.4219,2772.1563 17603.2969,2770.25 Q17604.3438,2769.2344 17605.6719,2769.2344 Q17607.0781,2769.2344 17607.9219,2770.0469 Q17609.4063,2771.5625 17609.3281,2774.4375 L17607.2031,2774.4375 Q17607.125,2772.1094 17606.4844,2771.4688 Q17606.2031,2771.1719 17605.6719,2771.1719 Q17605.2188,2771.1719 17604.8594,2771.5469 Q17603.625,2772.7656 17603.625,2776.2813 Q17603.625,2779.3281 17604.6719,2780.3438 Q17605.0938,2780.7813 17605.6094,2780.7813 Q17606.0625,2780.7813 17606.5,2780.3438 Q17607.0625,2779.7969 17607.1406,2777.2031 L17609.4375,2777.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="46" x="17626.25" y="2781.7285">Shader</text><line style="stroke:#181818;stroke-width:0.5;" x1="17222.5" x2="18043.5" y1="2792" y2="2792"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17229.5" y="2803.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="17241.5" y="2810.5332">_errorBlob : Microsoft::WRL::ComPtr&lt;ID3DBlob&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17229.5" y="2820.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="17241.5" y="2828.1426">_shaderBlob : Microsoft::WRL::ComPtr&lt;ID3DBlob&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="17222.5" x2="18043.5" y1="2835.2188" y2="2835.2188"/><ellipse cx="17232.5" cy="2849.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="17241.5" y="2853.752">Shader()</text><ellipse cx="17232.5" cy="2867.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="17241.5" y="2871.3613">~Shader()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17229.5" y="2881.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="797" x="17241.5" y="2888.9707">CompileShader(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderTypeAndVersion) : HRESULT</text><ellipse cx="17232.5" cy="2902.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="17241.5" y="2906.5801">GetShader() : ID3DBlob&amp; {query}</text><ellipse cx="17232.5" cy="2919.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="702" x="17241.5" y="2924.1895">Create(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType) : Utility::RESULT</text><ellipse cx="17232.5" cy="2937.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="17241.5" y="2941.7988">Create(const ShaderData&amp; shaderData) : Utility::RESULT</text></g><!--MD5=[23144be27de271990a11b5c2f9bc0139]
class DX12Wrapper.Texture--><g id="elem_DX12Wrapper.Texture"><rect codeLine="733" fill="#F1F1F1" height="505.8438" id="DX12Wrapper.Texture" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1426" x="8189" y="3334.5"/><ellipse cx="8873.75" cy="3350.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8877.4375,3351.7031 Q8877.1875,3355.1875 8876.0469,3356.3438 Q8875.0156,3357.3594 8873.6094,3357.3594 Q8872.2031,3357.3594 8871.1719,3356.3438 Q8869.4219,3354.5781 8869.4219,3350.9063 Q8869.4219,3346.6563 8871.2969,3344.75 Q8872.3438,3343.7344 8873.6719,3343.7344 Q8875.0781,3343.7344 8875.9219,3344.5469 Q8877.4063,3346.0625 8877.3281,3348.9375 L8875.2031,3348.9375 Q8875.125,3346.6094 8874.4844,3345.9688 Q8874.2031,3345.6719 8873.6719,3345.6719 Q8873.2188,3345.6719 8872.8594,3346.0469 Q8871.625,3347.2656 8871.625,3350.7813 Q8871.625,3353.8281 8872.6719,3354.8438 Q8873.0938,3355.2813 8873.6094,3355.2813 Q8874.0625,3355.2813 8874.5,3354.8438 Q8875.0625,3354.2969 8875.1406,3351.7031 L8877.4375,3351.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="8894.25" y="3356.2285">Texture</text><line style="stroke:#181818;stroke-width:0.5;" x1="8190" x2="9614" y1="3366.5" y2="3366.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3377.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="8209" y="3385.0332">_scratchImage : DirectX::ScratchImage</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3395.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="8209" y="3402.6426">_metaData : DirectX::TexMetadata</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3413.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="8209" y="3420.252">_textureBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3430.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="8209" y="3437.8613">_uploadBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3448.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="8209" y="3455.4707">_image : const DirectX::Image*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3465.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="389" x="8209" y="3473.0801">_subresources : std::vector&lt;D3D12_SUBRESOURCE_DATA&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8190" x2="9614" y1="3480.1563" y2="3480.1563"/><ellipse cx="8200" cy="3494.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="8209" y="3498.6895">Texture()</text><ellipse cx="8200" cy="3512.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="8209" y="3516.2988">~Texture()</text><ellipse cx="8200" cy="3529.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="8209" y="3533.9082">GetImage() : DirectX::Image&amp;</text><ellipse cx="8200" cy="3547.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="8209" y="3551.5176">GetTexMetadata() : DirectX::TexMetadata&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3561.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="8209" y="3569.127">CopyCubeTexture(Dx12GraphicsEngine&amp; graphicsEngine) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3579.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="562" x="8209" y="3586.7363">CopyTexture(ID3D12Device&amp; device, Dx12GraphicsEngine&amp; graphicsEngine) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3597.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="8209" y="3604.3457">CreateUploadAndCubeTextureBuffer(ID3D12Device&amp; device) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3614.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="8209" y="3621.9551">CreateUploadAndTextureBuffer(ID3D12Device&amp; device) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3632.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="8209" y="3639.5645">LoadTextureFromDDSFile(const std::wstring&amp; texturePath) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3649.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="8209" y="3657.1738">LoadTextureFromWICFile(const std::wstring&amp; texturePath) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3667.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="8209" y="3674.7832">MapTexture() : HRESULT</text><ellipse cx="8200" cy="3688.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="8209" y="3692.3926">GetBuffer() : ID3D12Resource&amp; {query}</text><ellipse cx="8200" cy="3705.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="8209" y="3710.002">operator=(const Texture&amp; inst) : Texture&amp;</text><ellipse cx="8200" cy="3723.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="750" x="8209" y="3727.6113">CreateCubeTextureFromDDS(Dx12GraphicsEngine&amp; graphicsEngine, const std::wstring&amp; texturePath) : Utility::RESULT</text><ellipse cx="8200" cy="3740.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1400" x="8209" y="3745.2207">CreateTextureFromConstantData(Dx12GraphicsEngine&amp; graphicsEngine, uint8_t* data, const size_t&amp; stride, const size_t&amp; dataNum, const size_t&amp; width, const size_t&amp; height, const DXGI_FORMAT&amp; format) : Utility::RESULT</text><ellipse cx="8200" cy="3758.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="716" x="8209" y="3762.8301">CreateTextureFromDDS(Dx12GraphicsEngine&amp; graphicsEngine, const std::wstring&amp; texturePath) : Utility::RESULT</text><ellipse cx="8200" cy="3776.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="713" x="8209" y="3780.4395">CreateTextureFromWIC(Dx12GraphicsEngine&amp; graphicsEngine, const std::wstring&amp; texturePath) : Utility::RESULT</text><ellipse cx="8200" cy="3793.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="499" x="8209" y="3798.0488">CreateTextureFromDepthStencil(DepthStencilBuffer&amp; depthStencilBuffer) : void</text><ellipse cx="8200" cy="3811.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="523" x="8209" y="3815.6582">CreateTextureFromRenderTarget(RenderTargetBuffer&amp; renderTargetBuffer) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8197" y="3826.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="967" x="8209" y="3833.2676">SetTextureData(uint8_t* data, const size_t&amp; stride, const size_t&amp; dataNum, const size_t&amp; width, const size_t&amp; height, const DXGI_FORMAT&amp; format) : void</text></g><!--MD5=[ed04236b14e12fc04f65c53448d769ca]
class DX12Wrapper.VertexBuffer--><g id="elem_DX12Wrapper.VertexBuffer"><rect codeLine="762" fill="#F1F1F1" height="224.0938" id="DX12Wrapper.VertexBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="770" x="8570" y="2742.5"/><ellipse cx="8911.75" cy="2758.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8915.4375,2759.7031 Q8915.1875,2763.1875 8914.0469,2764.3438 Q8913.0156,2765.3594 8911.6094,2765.3594 Q8910.2031,2765.3594 8909.1719,2764.3438 Q8907.4219,2762.5781 8907.4219,2758.9063 Q8907.4219,2754.6563 8909.2969,2752.75 Q8910.3438,2751.7344 8911.6719,2751.7344 Q8913.0781,2751.7344 8913.9219,2752.5469 Q8915.4063,2754.0625 8915.3281,2756.9375 L8913.2031,2756.9375 Q8913.125,2754.6094 8912.4844,2753.9688 Q8912.2031,2753.6719 8911.6719,2753.6719 Q8911.2188,2753.6719 8910.8594,2754.0469 Q8909.625,2755.2656 8909.625,2758.7813 Q8909.625,2761.8281 8910.6719,2762.8438 Q8911.0938,2763.2813 8911.6094,2763.2813 Q8912.0625,2763.2813 8912.5,2762.8438 Q8913.0625,2762.2969 8913.1406,2759.7031 L8915.4375,2759.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="8932.25" y="2764.2285">VertexBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8571" x2="9339" y1="2774.5" y2="2774.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8578" y="2785.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="8590" y="2793.0332">_vertexBufferView : D3D12_VERTEX_BUFFER_VIEW</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8578" y="2803.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="8590" y="2810.6426">_vertexBuffer : Microsoft::WRL::ComPtr&lt;ID3D12Resource&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8578" y="2821.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="8590" y="2828.252">_vertexNum : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="8571" x2="9339" y1="2835.3281" y2="2835.3281"/><ellipse cx="8581" cy="2849.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="8590" y="2853.8613">VertexBuffer()</text><ellipse cx="8581" cy="2867.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="8590" y="2871.4707">~VertexBuffer()</text><ellipse cx="8581" cy="2884.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="8590" y="2889.0801">GetView() : D3D12_VERTEX_BUFFER_VIEW&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8578" y="2899.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="733" x="8590" y="2906.6895">CreateVertexBufferAndView(ID3D12Device&amp; device, const UINT&amp; sizeInBytes, const UINT&amp; stribeInBytes) : HRESULT</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8578" y="2917.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="8590" y="2924.2988">MapVertexBuffer(void* vertexData, const UINT&amp; sizeInBytes) : HRESULT</text><ellipse cx="8581" cy="2937.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="8590" y="2941.9082">GetVertexNum() : UINT {query}</text><ellipse cx="8581" cy="2955.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="744" x="8590" y="2959.5176">Create(ID3D12Device&amp; device, void* vertexData, const UINT&amp; sizeInBytes, const UINT&amp; stribeInBytes) : Utility::RESULT</text></g><!--MD5=[8fb2d9eb1e159c94de3a36fa2f2673a3]
class DX12Wrapper.DESCRIPTORTYPE--><g id="elem_DX12Wrapper.DESCRIPTORTYPE"><rect codeLine="775" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.DESCRIPTORTYPE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="175" x="18079.5" y="2795.5"/><ellipse cx="18102.15" cy="2811.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M18100.8688,2810.1719 L18105.3844,2810.1719 L18105.3844,2812.125 L18100.8688,2812.125 L18100.8688,2816.4219 L18106.1031,2816.4219 L18106.1031,2818.3594 L18098.65,2818.3594 L18098.65,2804.7344 L18105.775,2804.7344 L18105.775,2806.6719 L18100.8688,2806.6719 L18100.8688,2810.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="18117.85" y="2817.2285">DESCRIPTORTYPE</text><line style="stroke:#181818;stroke-width:0.5;" x1="18080.5" x2="18253.5" y1="2827.5" y2="2827.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="18085.5" y="2846.0332">DESCRIPTORTYPE_CBV</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="18085.5" y="2863.6426">DESCRIPTORTYPE_NUM</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="18085.5" y="2881.252">DESCRIPTORTYPE_SRV</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="18085.5" y="2898.8613">DESCRIPTORTYPE_UAV</text><line style="stroke:#181818;stroke-width:0.5;" x1="18080.5" x2="18253.5" y1="2905.9375" y2="2905.9375"/></g><!--MD5=[c3baf23855a24c29f7f9ffbc38678ac0]
class DX12Wrapper.CubeRenderTargetData--><g id="elem_DX12Wrapper.CubeRenderTargetData"><rect codeLine="782" fill="#F1F1F1" height="100.8281" id="DX12Wrapper.CubeRenderTargetData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="12703.5" y="3537"/><ellipse cx="12796.25" cy="3553" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12799.9375,3554.2031 Q12799.6875,3557.6875 12798.5469,3558.8438 Q12797.5156,3559.8594 12796.1094,3559.8594 Q12794.7031,3559.8594 12793.6719,3558.8438 Q12791.9219,3557.0781 12791.9219,3553.4063 Q12791.9219,3549.1563 12793.7969,3547.25 Q12794.8438,3546.2344 12796.1719,3546.2344 Q12797.5781,3546.2344 12798.4219,3547.0469 Q12799.9063,3548.5625 12799.8281,3551.4375 L12797.7031,3551.4375 Q12797.625,3549.1094 12796.9844,3548.4688 Q12796.7031,3548.1719 12796.1719,3548.1719 Q12795.7188,3548.1719 12795.3594,3548.5469 Q12794.125,3549.7656 12794.125,3553.2813 Q12794.125,3556.3281 12795.1719,3557.3438 Q12795.5938,3557.7813 12796.1094,3557.7813 Q12796.5625,3557.7813 12797,3557.3438 Q12797.5625,3556.7969 12797.6406,3554.2031 L12799.9375,3554.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="12816.75" y="3558.7285">CubeRenderTargetData</text><line style="stroke:#181818;stroke-width:0.5;" x1="12704.5" x2="13049.5" y1="3569" y2="3569"/><ellipse cx="12714.5" cy="3583.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="12723.5" y="3587.5332">depthStencilBufferData : DepthStencilBufferData</text><ellipse cx="12714.5" cy="3600.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="12723.5" y="3605.1426">renderTargetBufferData : RenderTargetBufferData</text><ellipse cx="12714.5" cy="3618.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="12723.5" y="3622.752">useDepth : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="12704.5" x2="13049.5" y1="3629.8281" y2="3629.8281"/></g><!--MD5=[f258a3f923bee2e374586a1893ffcbd8]
class DX12Wrapper.DepthStencilBufferData--><g id="elem_DX12Wrapper.DepthStencilBufferData"><rect codeLine="788" fill="#F1F1F1" height="153.6563" id="DX12Wrapper.DepthStencilBufferData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="989" x="14791.5" y="3918"/><ellipse cx="15207.75" cy="3934" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15211.4375,3935.2031 Q15211.1875,3938.6875 15210.0469,3939.8438 Q15209.0156,3940.8594 15207.6094,3940.8594 Q15206.2031,3940.8594 15205.1719,3939.8438 Q15203.4219,3938.0781 15203.4219,3934.4063 Q15203.4219,3930.1563 15205.2969,3928.25 Q15206.3438,3927.2344 15207.6719,3927.2344 Q15209.0781,3927.2344 15209.9219,3928.0469 Q15211.4063,3929.5625 15211.3281,3932.4375 L15209.2031,3932.4375 Q15209.125,3930.1094 15208.4844,3929.4688 Q15208.2031,3929.1719 15207.6719,3929.1719 Q15207.2188,3929.1719 15206.8594,3929.5469 Q15205.625,3930.7656 15205.625,3934.2813 Q15205.625,3937.3281 15206.6719,3938.3438 Q15207.0938,3938.7813 15207.6094,3938.7813 Q15208.0625,3938.7813 15208.5,3938.3438 Q15209.0625,3937.7969 15209.1406,3935.2031 L15211.4375,3935.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="15228.25" y="3939.7285">DepthStencilBufferData</text><line style="stroke:#181818;stroke-width:0.5;" x1="14792.5" x2="15779.5" y1="3950" y2="3950"/><ellipse cx="14802.5" cy="3964.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="14811.5" y="3968.5332">depthFormat : DXGI_FORMAT</text><ellipse cx="14802.5" cy="3981.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="14811.5" y="3986.1426">height : UINT</text><ellipse cx="14802.5" cy="3999.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="14811.5" y="4003.752">width : UINT</text><ellipse cx="14802.5" cy="4017.1328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="14811.5" y="4021.3613">clearStencil : UINT8</text><ellipse cx="14802.5" cy="4034.7422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="14811.5" y="4038.9707">clearDepth : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="14792.5" x2="15779.5" y1="4046.0469" y2="4046.0469"/><ellipse cx="14802.5" cy="4060.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="963" x="14811.5" y="4064.5801">DepthStencilBufferData(const DXGI_FORMAT&amp; depthFormat, const UINT&amp; width, const UINT&amp; height, const float&amp; clearDepth, const UINT8&amp; clearStencil)</text></g><!--MD5=[591f79707ce30d1f693b24e88479eeb0]
class DX12Wrapper.DescriptorRangeData--><g id="elem_DX12Wrapper.DescriptorRangeData"><rect codeLine="797" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.DescriptorRangeData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="634" x="9650" y="3528.5"/><ellipse cx="9894.25" cy="3544.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9897.9375,3545.7031 Q9897.6875,3549.1875 9896.5469,3550.3438 Q9895.5156,3551.3594 9894.1094,3551.3594 Q9892.7031,3551.3594 9891.6719,3550.3438 Q9889.9219,3548.5781 9889.9219,3544.9063 Q9889.9219,3540.6563 9891.7969,3538.75 Q9892.8438,3537.7344 9894.1719,3537.7344 Q9895.5781,3537.7344 9896.4219,3538.5469 Q9897.9063,3540.0625 9897.8281,3542.9375 L9895.7031,3542.9375 Q9895.625,3540.6094 9894.9844,3539.9688 Q9894.7031,3539.6719 9894.1719,3539.6719 Q9893.7188,3539.6719 9893.3594,3540.0469 Q9892.125,3541.2656 9892.125,3544.7813 Q9892.125,3547.8281 9893.1719,3548.8438 Q9893.5938,3549.2813 9894.1094,3549.2813 Q9894.5625,3549.2813 9895,3548.8438 Q9895.5625,3548.2969 9895.6406,3545.7031 L9897.9375,3545.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="9914.75" y="3550.2285">DescriptorRangeData</text><line style="stroke:#181818;stroke-width:0.5;" x1="9651" x2="10283" y1="3560.5" y2="3560.5"/><ellipse cx="9661" cy="3574.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="9670" y="3579.0332">cbvDescriptorNum : UINT</text><ellipse cx="9661" cy="3592.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="9670" y="3596.6426">srvDescriptorNum : UINT</text><ellipse cx="9661" cy="3610.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="9670" y="3614.252">uavDescriptorNum : UINT</text><line style="stroke:#181818;stroke-width:0.5;" x1="9651" x2="10283" y1="3621.3281" y2="3621.3281"/><ellipse cx="9661" cy="3635.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="608" x="9670" y="3639.8613">DescriptorRangeData(UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)</text></g><!--MD5=[1d3013d11483c8f7a2e6f94f89c78591]
class DX12Wrapper.InputLayout--><g id="elem_DX12Wrapper.InputLayout"><rect codeLine="804" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.InputLayout" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1319" x="18289.5" y="2786.5"/><ellipse cx="18907.75" cy="2802.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M18911.4375,2803.7031 Q18911.1875,2807.1875 18910.0469,2808.3438 Q18909.0156,2809.3594 18907.6094,2809.3594 Q18906.2031,2809.3594 18905.1719,2808.3438 Q18903.4219,2806.5781 18903.4219,2802.9063 Q18903.4219,2798.6563 18905.2969,2796.75 Q18906.3438,2795.7344 18907.6719,2795.7344 Q18909.0781,2795.7344 18909.9219,2796.5469 Q18911.4063,2798.0625 18911.3281,2800.9375 L18909.2031,2800.9375 Q18909.125,2798.6094 18908.4844,2797.9688 Q18908.2031,2797.6719 18907.6719,2797.6719 Q18907.2188,2797.6719 18906.8594,2798.0469 Q18905.625,2799.2656 18905.625,2802.7813 Q18905.625,2805.8281 18906.6719,2806.8438 Q18907.0938,2807.2813 18907.6094,2807.2813 Q18908.0625,2807.2813 18908.5,2806.8438 Q18909.0625,2806.2969 18909.1406,2803.7031 L18911.4375,2803.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="18928.25" y="2808.2285">InputLayout</text><line style="stroke:#181818;stroke-width:0.5;" x1="18290.5" x2="19607.5" y1="2818.5" y2="2818.5"/><ellipse cx="18300.5" cy="2832.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="424" x="18309.5" y="2837.0332">inputElementDescs : std::vector&lt;D3D12_INPUT_ELEMENT_DESC&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="18290.5" x2="19607.5" y1="2844.1094" y2="2844.1094"/><ellipse cx="18300.5" cy="2858.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="18309.5" y="2862.6426">GetData() : D3D12_INPUT_ELEMENT_DESC*</text><ellipse cx="18300.5" cy="2876.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="184" x="18309.5" y="2880.252">DefaultLayout() : InputLayout</text><ellipse cx="18300.5" cy="2893.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="18309.5" y="2897.8613">GetSize() : UINT</text><ellipse cx="18300.5" cy="2911.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1293" x="18309.5" y="2915.4707">Append(const char* semanticName, UINT semanticIndex, DXGI_FORMAT format, UINT inputSlot, UINT alignedByteOffset, D3D12_INPUT_CLASSIFICATION inputSlotClass, UINT instanceDataStepRate) : void</text></g><!--MD5=[335eed13d38650c0df04874a49031964]
class DX12Wrapper.RenderTargetBufferData--><g id="elem_DX12Wrapper.RenderTargetBufferData"><rect codeLine="812" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.RenderTargetBufferData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="837" x="12924.5" y="3927"/><ellipse cx="13260.25" cy="3943" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13263.9375,3944.2031 Q13263.6875,3947.6875 13262.5469,3948.8438 Q13261.5156,3949.8594 13260.1094,3949.8594 Q13258.7031,3949.8594 13257.6719,3948.8438 Q13255.9219,3947.0781 13255.9219,3943.4063 Q13255.9219,3939.1563 13257.7969,3937.25 Q13258.8438,3936.2344 13260.1719,3936.2344 Q13261.5781,3936.2344 13262.4219,3937.0469 Q13263.9063,3938.5625 13263.8281,3941.4375 L13261.7031,3941.4375 Q13261.625,3939.1094 13260.9844,3938.4688 Q13260.7031,3938.1719 13260.1719,3938.1719 Q13259.7188,3938.1719 13259.3594,3938.5469 Q13258.125,3939.7656 13258.125,3943.2813 Q13258.125,3946.3281 13259.1719,3947.3438 Q13259.5938,3947.7813 13260.1094,3947.7813 Q13260.5625,3947.7813 13261,3947.3438 Q13261.5625,3946.7969 13261.6406,3944.2031 L13263.9375,3944.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="13280.75" y="3948.7285">RenderTargetBufferData</text><line style="stroke:#181818;stroke-width:0.5;" x1="12925.5" x2="13760.5" y1="3959" y2="3959"/><ellipse cx="12935.5" cy="3973.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="12944.5" y="3977.5332">colorFormat : DXGI_FORMAT</text><ellipse cx="12935.5" cy="3990.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="12944.5" y="3995.1426">height : UINT</text><ellipse cx="12935.5" cy="4008.5234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="12944.5" y="4012.752">width : UINT</text><ellipse cx="12935.5" cy="4026.1328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="12944.5" y="4030.3613">clearColor : float</text><line style="stroke:#181818;stroke-width:0.5;" x1="12925.5" x2="13760.5" y1="4037.4375" y2="4037.4375"/><ellipse cx="12935.5" cy="4051.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="811" x="12944.5" y="4055.9707">RenderTargetBufferData(const DXGI_FORMAT&amp; colorFormat, const UINT&amp; width, const UINT&amp; height, const float (&amp; clearColor ))</text></g><!--MD5=[f3acdce1103e6bd92c282779b0128340]
class DX12Wrapper.RenderTargetData--><g id="elem_DX12Wrapper.RenderTargetData"><rect codeLine="820" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.RenderTargetData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="14583.5" y="3528.5"/><ellipse cx="14693.25" cy="3544.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14696.9375,3545.7031 Q14696.6875,3549.1875 14695.5469,3550.3438 Q14694.5156,3551.3594 14693.1094,3551.3594 Q14691.7031,3551.3594 14690.6719,3550.3438 Q14688.9219,3548.5781 14688.9219,3544.9063 Q14688.9219,3540.6563 14690.7969,3538.75 Q14691.8438,3537.7344 14693.1719,3537.7344 Q14694.5781,3537.7344 14695.4219,3538.5469 Q14696.9063,3540.0625 14696.8281,3542.9375 L14694.7031,3542.9375 Q14694.625,3540.6094 14693.9844,3539.9688 Q14693.7031,3539.6719 14693.1719,3539.6719 Q14692.7188,3539.6719 14692.3594,3540.0469 Q14691.125,3541.2656 14691.125,3544.7813 Q14691.125,3547.8281 14692.1719,3548.8438 Q14692.5938,3549.2813 14693.1094,3549.2813 Q14693.5625,3549.2813 14694,3548.8438 Q14694.5625,3548.2969 14694.6406,3545.7031 L14696.9375,3545.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="14713.75" y="3550.2285">RenderTargetData</text><line style="stroke:#181818;stroke-width:0.5;" x1="14584.5" x2="14929.5" y1="3560.5" y2="3560.5"/><ellipse cx="14594.5" cy="3574.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="14603.5" y="3579.0332">depthStencilBufferData : DepthStencilBufferData</text><ellipse cx="14594.5" cy="3592.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="14603.5" y="3596.6426">renderTargetBufferData : RenderTargetBufferData</text><ellipse cx="14594.5" cy="3610.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="14603.5" y="3614.252">isCubeMap : bool</text><ellipse cx="14594.5" cy="3627.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="14603.5" y="3631.8613">useDepth : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="14584.5" x2="14929.5" y1="3638.9375" y2="3638.9375"/></g><!--MD5=[3dfcd7e6f28f8badfb075d4613166696]
class DX12Wrapper.RootSignatureData--><g id="elem_DX12Wrapper.RootSignatureData"><rect codeLine="827" fill="#F1F1F1" height="118.4375" id="DX12Wrapper.RootSignatureData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1746" x="6789" y="2795.5"/><ellipse cx="7597.25" cy="2811.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7600.9375,2812.7031 Q7600.6875,2816.1875 7599.5469,2817.3438 Q7598.5156,2818.3594 7597.1094,2818.3594 Q7595.7031,2818.3594 7594.6719,2817.3438 Q7592.9219,2815.5781 7592.9219,2811.9063 Q7592.9219,2807.6563 7594.7969,2805.75 Q7595.8438,2804.7344 7597.1719,2804.7344 Q7598.5781,2804.7344 7599.4219,2805.5469 Q7600.9063,2807.0625 7600.8281,2809.9375 L7598.7031,2809.9375 Q7598.625,2807.6094 7597.9844,2806.9688 Q7597.7031,2806.6719 7597.1719,2806.6719 Q7596.7188,2806.6719 7596.3594,2807.0469 Q7595.125,2808.2656 7595.125,2811.7813 Q7595.125,2814.8281 7596.1719,2815.8438 Q7596.5938,2816.2813 7597.1094,2816.2813 Q7597.5625,2816.2813 7598,2815.8438 Q7598.5625,2815.2969 7598.6406,2812.7031 L7600.9375,2812.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="7617.75" y="2817.2285">RootSignatureData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6790" x2="8534" y1="2827.5" y2="2827.5"/><ellipse cx="6800" cy="2841.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="6809" y="2846.0332">_descRangeData : DescriptorRangeData</text><ellipse cx="6800" cy="2859.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="6809" y="2863.6426">_samplerData : SamplerData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6790" x2="8534" y1="2870.7188" y2="2870.7188"/><ellipse cx="6800" cy="2885.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1720" x="6809" y="2889.252">RootSignatureData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW, UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)</text><ellipse cx="6800" cy="2902.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="6809" y="2906.8613">RootSignatureData(SamplerData samplerData, DescriptorRangeData descRangeData)</text></g><!--MD5=[54e388eefde791f3df652b9a7dfed890]
class DX12Wrapper.SamplerData--><g id="elem_DX12Wrapper.SamplerData"><rect codeLine="834" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.SamplerData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1238" x="6916" y="3519.5"/><ellipse cx="7489.75" cy="3535.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7493.4375,3536.7031 Q7493.1875,3540.1875 7492.0469,3541.3438 Q7491.0156,3542.3594 7489.6094,3542.3594 Q7488.2031,3542.3594 7487.1719,3541.3438 Q7485.4219,3539.5781 7485.4219,3535.9063 Q7485.4219,3531.6563 7487.2969,3529.75 Q7488.3438,3528.7344 7489.6719,3528.7344 Q7491.0781,3528.7344 7491.9219,3529.5469 Q7493.4063,3531.0625 7493.3281,3533.9375 L7491.2031,3533.9375 Q7491.125,3531.6094 7490.4844,3530.9688 Q7490.2031,3530.6719 7489.6719,3530.6719 Q7489.2188,3530.6719 7488.8594,3531.0469 Q7487.625,3532.2656 7487.625,3535.7813 Q7487.625,3538.8281 7488.6719,3539.8438 Q7489.0938,3540.2813 7489.6094,3540.2813 Q7490.0625,3540.2813 7490.5,3539.8438 Q7491.0625,3539.2969 7491.1406,3536.7031 L7493.4375,3536.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="7510.25" y="3541.2285">SamplerData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6917" x2="8153" y1="3551.5" y2="3551.5"/><ellipse cx="6927" cy="3565.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="6936" y="3570.0332">samplerFilter : D3D12_FILTER</text><ellipse cx="6927" cy="3583.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="6936" y="3587.6426">addressU : D3D12_TEXTURE_ADDRESS_MODE</text><ellipse cx="6927" cy="3601.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="6936" y="3605.252">addressV : D3D12_TEXTURE_ADDRESS_MODE</text><ellipse cx="6927" cy="3618.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="6936" y="3622.8613">addressW : D3D12_TEXTURE_ADDRESS_MODE</text><line style="stroke:#181818;stroke-width:0.5;" x1="6917" x2="8153" y1="3629.9375" y2="3629.9375"/><ellipse cx="6927" cy="3644.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1212" x="6936" y="3648.4707">SamplerData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW)</text></g><!--MD5=[d94d580e690d5141af657cdbf67da542]
class DX12Wrapper.ShaderData--><g id="elem_DX12Wrapper.ShaderData"><rect codeLine="842" fill="#F1F1F1" height="136.0469" id="DX12Wrapper.ShaderData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="654" x="17840" y="3519.5"/><ellipse cx="18124.75" cy="3535.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M18128.4375,3536.7031 Q18128.1875,3540.1875 18127.0469,3541.3438 Q18126.0156,3542.3594 18124.6094,3542.3594 Q18123.2031,3542.3594 18122.1719,3541.3438 Q18120.4219,3539.5781 18120.4219,3535.9063 Q18120.4219,3531.6563 18122.2969,3529.75 Q18123.3438,3528.7344 18124.6719,3528.7344 Q18126.0781,3528.7344 18126.9219,3529.5469 Q18128.4063,3531.0625 18128.3281,3533.9375 L18126.2031,3533.9375 Q18126.125,3531.6094 18125.4844,3530.9688 Q18125.2031,3530.6719 18124.6719,3530.6719 Q18124.2188,3530.6719 18123.8594,3531.0469 Q18122.625,3532.2656 18122.625,3535.7813 Q18122.625,3538.8281 18123.6719,3539.8438 Q18124.0938,3540.2813 18124.6094,3540.2813 Q18125.0625,3540.2813 18125.5,3539.8438 Q18126.0625,3539.2969 18126.1406,3536.7031 L18128.4375,3536.7031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="18145.25" y="3541.2285">ShaderData</text><line style="stroke:#181818;stroke-width:0.5;" x1="17841" x2="18493" y1="3551.5" y2="3551.5"/><ellipse cx="17851" cy="3565.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="17860" y="3570.0332">shaderFilePass : const TCHAR*</text><ellipse cx="17851" cy="3583.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="17860" y="3587.6426">entoryPointName : const char*</text><ellipse cx="17851" cy="3601.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="17860" y="3605.252">shaderType : const char*</text><line style="stroke:#181818;stroke-width:0.5;" x1="17841" x2="18493" y1="3612.3281" y2="3612.3281"/><ellipse cx="17851" cy="3626.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="628" x="17860" y="3630.8613">ShaderData(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType)</text><ellipse cx="17851" cy="3644.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="17860" y="3648.4707">ShaderData()</text></g><!--MD5=[190e5ccbc3c72e81c84f37b63ffddca6]
class DX12Wrapper.ShaderResourceViewDesc--><g id="elem_DX12Wrapper.ShaderResourceViewDesc"><rect codeLine="850" fill="#F1F1F1" height="100.8281" id="DX12Wrapper.ShaderResourceViewDesc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="414" x="18529" y="3537"/><ellipse cx="18647.75" cy="3553" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M18651.4375,3554.2031 Q18651.1875,3557.6875 18650.0469,3558.8438 Q18649.0156,3559.8594 18647.6094,3559.8594 Q18646.2031,3559.8594 18645.1719,3558.8438 Q18643.4219,3557.0781 18643.4219,3553.4063 Q18643.4219,3549.1563 18645.2969,3547.25 Q18646.3438,3546.2344 18647.6719,3546.2344 Q18649.0781,3546.2344 18649.9219,3547.0469 Q18651.4063,3548.5625 18651.3281,3551.4375 L18649.2031,3551.4375 Q18649.125,3549.1094 18648.4844,3548.4688 Q18648.2031,3548.1719 18647.6719,3548.1719 Q18647.2188,3548.1719 18646.8594,3548.5469 Q18645.625,3549.7656 18645.625,3553.2813 Q18645.625,3556.3281 18646.6719,3557.3438 Q18647.0938,3557.7813 18647.6094,3557.7813 Q18648.0625,3557.7813 18648.5,3557.3438 Q18649.0625,3556.7969 18649.1406,3554.2031 L18651.4375,3554.2031 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="18668.25" y="3558.7285">ShaderResourceViewDesc</text><line style="stroke:#181818;stroke-width:0.5;" x1="18530" x2="18942" y1="3569" y2="3569"/><ellipse cx="18540" cy="3583.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="323" x="18549" y="3587.5332">desc : D3D12_SHADER_RESOURCE_VIEW_DESC</text><line style="stroke:#181818;stroke-width:0.5;" x1="18530" x2="18942" y1="3594.6094" y2="3594.6094"/><ellipse cx="18540" cy="3608.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="388" x="18549" y="3613.1426">ShaderResourceViewDesc(Texture&amp; texture, bool isCubeTex)</text><ellipse cx="18540" cy="3626.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="18549" y="3630.752">~ShaderResourceViewDesc()</text></g><!--MD5=[6630ad313b4cabf43a46ee3bd002849e]
reverse link Framework.Canvas to Game2048.GameSceneCanvas--><g id="link_Framework.Canvas_Game2048.GameSceneCanvas"><path codeLine="863" d="M3811.46,1092.22 C3494.45,1117.28 2856.15,1164.82 2314,1187 C2287.02,1188.1 1364.03,1187.39 1342,1203 C1271.23,1253.15 1249,1357.68 1242.06,1423.44 " fill="none" id="Framework.Canvas-backto-Game2048.GameSceneCanvas" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3811.38,1085.21,3831.87,1090.61,3812.49,1099.16,3811.38,1085.21" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5f9aa9ca6296186e8993bc1ccd0d22b1]
reverse link Framework.Canvas to Game2048.TitleSceneCanvas--><g id="link_Framework.Canvas_Game2048.TitleSceneCanvas"><path codeLine="866" d="M3811.45,1091.96 C3494.43,1116.65 2856.1,1163.71 2314,1187 C2292.4,1187.93 1553.49,1190.3 1536,1203 C1466.4,1253.54 1446.38,1357.69 1440.83,1423.32 " fill="none" id="Framework.Canvas-backto-Game2048.TitleSceneCanvas" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3811.38,1084.94,3831.86,1090.36,3812.47,1098.9,3811.38,1084.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b3d7a0ceb13ebd703767398bff16ed89]
reverse link Framework.GameImpl to Game2048.Game2048--><g id="link_Framework.GameImpl_Game2048.Game2048"><path codeLine="869" d="M5540.68,833.88 C5529.98,860.39 5513.66,887.31 5489,903 C5388.34,967.06 1311.7,943.45 1194,963 C854.59,1019.37 694.86,953.45 458,1203 C401.21,1262.83 386.45,1361 383.15,1423.38 " fill="none" id="Framework.GameImpl-backto-Game2048.Game2048" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5534.17,831.28,5547.51,814.81,5547.35,836,5534.17,831.28" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a272389388c28fe79c6a4774438c5ee9]
reverse link Framework.IComponent to Framework.Button--><g id="link_Framework.IComponent_Framework.Button"><path codeLine="872" d="M4456.02,1120.74 C4651.84,1190.83 5032.61,1327.1 5265.99,1410.63 " fill="none" id="Framework.IComponent-backto-Framework.Button" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4453.55,1127.3,4437.08,1113.97,4458.27,1114.12,4453.55,1127.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[14a4a0d583b22241d37093de30e8ac1a]
reverse link Framework.IComponent to Framework.Camera--><g id="link_Framework.IComponent_Framework.Camera"><path codeLine="875" d="M4457.45,1076.9 C4757.17,1080.72 5502.42,1100.56 5727,1203 C5796.7,1234.79 5859.94,1290.51 5909.44,1343.8 " fill="none" id="Framework.IComponent-backto-Framework.Camera" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4457,1083.9,4437.08,1076.66,4457.16,1069.9,4457,1083.9" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5b0f0b3b151c9c67cf7db6a9e020c79d]
reverse link Framework.IComponent to Game2048.GameTimer--><g id="link_Framework.IComponent_Game2048.GameTimer"><path codeLine="878" d="M4257.92,1156.43 C4242.42,1168.89 4225.19,1179.95 4207,1187 C4163.72,1203.78 2575.94,1179.34 2536,1203 C2459,1248.62 2417.07,1347.52 2396.6,1414.32 " fill="none" id="Framework.IComponent-backto-Game2048.GameTimer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4253.7,1150.82,4273.42,1143.05,4262.85,1161.42,4253.7,1150.82" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3805262452d1be0e8145f0512fd25c53]
reverse link Framework.IComponent to Game2048.Grid--><g id="link_Framework.IComponent_Game2048.Grid"><path codeLine="881" d="M4257.23,1156.38 C4241.88,1168.72 4224.88,1179.74 4207,1187 C4126.42,1219.7 3896.17,1169.3 3816,1203 C3788.84,1214.42 3762.67,1229.51 3737.89,1246.79 " fill="none" id="Framework.IComponent-backto-Game2048.Grid" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4252.87,1150.89,4272.6,1143.15,4262,1161.51,4252.87,1150.89" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d52fc3dff05e77953522c4173f13733a]
reverse link Framework.IComponent to Game2048.PressEnterText--><g id="link_Framework.IComponent_Game2048.PressEnterText"><path codeLine="884" d="M4257.62,1156.53 C4242.19,1168.92 4225.07,1179.92 4207,1187 C4157.28,1206.48 3292.85,1177.37 3246,1203 C3163.63,1248.06 3111.49,1347.36 3084.27,1414.37 " fill="none" id="Framework.IComponent-backto-Game2048.PressEnterText" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4253.34,1150.98,4273.06,1143.23,4262.48,1161.59,4253.34,1150.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[22f5d33872fe60163a32da2e35313741]
reverse link Framework.IComponent to Game2048.QuitButton--><g id="link_Framework.IComponent_Game2048.QuitButton"><path codeLine="887" d="M4257.91,1156.39 C4242.41,1168.86 4225.19,1179.92 4207,1187 C4138.08,1213.82 2940.27,1166.42 2876,1203 C2792.8,1250.35 2745.36,1356.56 2722.73,1423.27 " fill="none" id="Framework.IComponent-backto-Game2048.QuitButton" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4253.69,1150.79,4273.4,1143.01,4262.84,1161.38,4253.69,1150.79" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c3a4354dba8a2afcf00ea4016870b8da]
reverse link Framework.IComponent to Framework.SpriteRenderer--><g id="link_Framework.IComponent_Framework.SpriteRenderer"><path codeLine="890" d="M4436.9,1155.31 C4626.68,1297.44 5027.37,1597.51 5268.35,1777.98 " fill="none" id="Framework.IComponent-backto-Framework.SpriteRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4432.66,1160.88,4420.85,1143.29,4441.06,1149.68,4432.66,1160.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[040e74c438266a37c488308d7bf8bdfa]
reverse link Framework.IComponent to Framework.Text--><g id="link_Framework.IComponent_Framework.Text"><path codeLine="893" d="M4457.4,1079.37 C4775.59,1089.04 5590.7,1121.58 5680,1203 C5852.12,1359.92 5684.42,1504.28 5777,1718 C5788.56,1744.69 5804.09,1771.25 5820.81,1795.98 " fill="none" id="Framework.IComponent-backto-Framework.Text" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4456.96,1086.36,4437.17,1078.77,4457.38,1072.37,4456.96,1086.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[23beec5518991987304da598b7521cef]
reverse link Framework.IComponent to Game2048.Tile--><g id="link_Framework.IComponent_Game2048.Tile"><path codeLine="896" d="M4257.93,1156.45 C4242.43,1168.91 4225.2,1179.96 4207,1187 C4104.25,1226.75 2327.7,1165.81 2224,1203 C2142.99,1232.05 2067.02,1288.99 2007.19,1343.85 " fill="none" id="Framework.IComponent-backto-Game2048.Tile" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4253.71,1150.84,4273.43,1143.07,4262.86,1161.44,4253.71,1150.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0a41aa55886ceb247bf1a71c0a6293d9]
reverse link Framework.IComponent to Framework.Transform2D--><g id="link_Framework.IComponent_Framework.Transform2D"><path codeLine="899" d="M4457.39,1078.79 C4860.1,1088.42 6096.12,1124.18 6257,1203 C6324.47,1236.05 6381.59,1296.52 6423.86,1352.68 " fill="none" id="Framework.IComponent-backto-Framework.Transform2D" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4456.98,1085.78,4437.15,1078.31,4457.31,1071.78,4456.98,1085.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ac59abcfb36114d90c33f994e2d0f8aa]
reverse link Framework.IRenderer to Framework.ButtonRenderer--><g id="link_Framework.IRenderer_Framework.ButtonRenderer"><path codeLine="902" d="M6080.45,842.57 C6145.28,879.65 6221.89,923.48 6290.92,962.97 " fill="none" id="Framework.IRenderer-backto-Framework.ButtonRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6076.82,848.56,6062.94,832.55,6083.77,836.4,6076.82,848.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e06ba06cefd16a503ea10914b688278f]
reverse link Framework.IRenderer to Game2048.Renderer--><g id="link_Framework.IRenderer_Game2048.Renderer"><path codeLine="905" d="M5786.67,841.95 C5738.8,866.29 5684.09,889.77 5631,903 C5239,1000.72 4217.24,938.29 3814,963 C2621.24,1036.08 2241.91,750.27 1136,1203 C1022.33,1249.53 917.36,1347.94 855.23,1414.41 " fill="none" id="Framework.IRenderer-backto-Game2048.Renderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5783.69,835.61,5804.67,832.6,5790.15,848.04,5783.69,835.61" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[df3490b56de1674fcfab96cd735334b9]
reverse link Framework.Scene to Game2048.GameScene--><g id="link_Framework.Scene_Game2048.GameScene"><path codeLine="908" d="M4005.06,901.55 C3658.12,952.16 486.65,864.34 312,963 C144.92,1057.38 99.51,1308.82 87.35,1423.29 " fill="none" id="Framework.Scene-backto-Game2048.GameScene" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4003.79,894.67,4024.75,897.75,4006.44,908.42,4003.79,894.67" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a5db07e0f3871087da1837d46bb6f5c9]
reverse link Framework.Scene to Game2048.TitleScene--><g id="link_Framework.Scene_Game2048.TitleScene"><path codeLine="911" d="M4004.91,901.56 C3671.45,950.07 700,885.56 528,963 C396.06,1022.41 377.27,1075.95 308,1203 C269.66,1273.33 250.71,1364.74 241.91,1423.28 " fill="none" id="Framework.Scene-backto-Game2048.TitleScene" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4003.79,894.65,4024.75,897.75,4006.43,908.4,4003.79,894.65" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e3f68d54ebcdb40967e9c87ecf107833]
reverse link Framework.Button to Framework.SpriteRenderer--><g id="link_Framework.Button_Framework.SpriteRenderer"><path codeLine="919" d="M5464,1634.49 C5464,1680.87 5464,1731.82 5464,1777.9 " fill="none" id="Framework.Button-backto-Framework.SpriteRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5464,1621.22,5460,1627.22,5464,1633.22,5468,1627.22,5464,1621.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[503fa549a8b0c2e6f3ed7216b9486276]
reverse link Framework.Button to Framework.Text--><g id="link_Framework.Button_Framework.Text"><path codeLine="922" d="M5616.73,1630.02 C5647.25,1659.21 5679.12,1689.61 5709,1718 C5735.52,1743.19 5763.91,1770.05 5791.17,1795.78 " fill="none" id="Framework.Button-backto-Framework.Text" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5607.31,1621.01,5608.8778,1628.0486,5615.978,1629.3086,5614.4102,1622.27,5607.31,1621.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a76bf2598c89c37df4e2afd1c462e820]
reverse link Framework.ButtonRenderer to DX12Wrapper.GraphicsPipelineState--><g id="link_Framework.ButtonRenderer_DX12Wrapper.GraphicsPipelineState"><path codeLine="925" d="M6745.52,1078.61 C7639.74,1098.04 10644.48,1250.85 12742,2408 C12908.78,2500.01 13059.05,2667.47 13140.65,2768.8 " fill="none" id="Framework.ButtonRenderer-backto-DX12Wrapper.GraphicsPipelineState" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6732.5,1078.33,6738.4151,1082.4545,6744.4974,1078.5808,6738.5823,1074.4563,6732.5,1078.33" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="6740.7359" y="1092.2011">2</text></g><!--MD5=[f408ee8dbe17287fe344d5af707eb007]
reverse link Framework.ButtonRenderer to DX12Wrapper.RootSignature--><g id="link_Framework.ButtonRenderer_DX12Wrapper.RootSignature"><path codeLine="928" d="M6745.84,1077.21 C7421.7,1081.73 9217.78,1103.09 9804,1203 C11577.33,1505.23 12064.05,1593.51 13668,2408 C13864.7,2507.88 14065.55,2670.23 14179.23,2768.92 " fill="none" id="Framework.ButtonRenderer-backto-DX12Wrapper.RootSignature" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6732.54,1077.12,6738.5135,1081.1595,6744.5397,1077.1991,6738.5662,1073.1596,6732.54,1077.12" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="6740.7773" y="1074.4264">2</text></g><!--MD5=[875463098b4143bdc76cb356b780adb1]
reverse link Framework.Camera to DX12Wrapper.ConstantBuffer--><g id="link_Framework.Camera_DX12Wrapper.ConstantBuffer"><path codeLine="931" d="M6138.55,1630.19 C6173.68,1664.04 6214.42,1696.41 6258,1718 C6419.87,1798.19 6481.56,1749.85 6660,1778 C8303.1,2037.23 8694.84,2247.73 10352,2392 C10401.87,2396.34 12110.03,2384.08 12154,2408 C12277.33,2475.08 12357.65,2618.79 12402.68,2724.94 " fill="none" id="Framework.Camera-backto-DX12Wrapper.ConstantBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6129.27,1621.09,6130.7556,1628.1464,6137.8406,1629.4891,6136.355,1622.4327,6129.27,1621.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[539c3ff049a300a94939c62372373e09]
reverse link Framework.Canvas to Framework.Object--><g id="link_Framework.Canvas_Framework.Object"><path codeLine="934" d="M4053.15,1172.57 C4073.2,1218.5 4097.66,1274.54 4120.23,1326.23 " fill="none" id="Framework.Canvas-backto-Framework.Object" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4047.89,1160.51,4046.624,1167.6091,4052.6901,1171.5081,4053.9561,1164.409,4047.89,1160.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[979c18aecf6e52427c4b3423d7f56754]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.CubeRenderTargetData--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.CubeRenderTargetData"><path codeLine="937" d="M11766.84,3017.88 C11881.07,3094.52 12022.17,3184.78 12154,3257 C12358.3,3368.92 12607.68,3476.56 12753.76,3536.87 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.CubeRenderTargetData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11755.87,3010.51,11758.6192,3017.1765,11765.8302,3017.2028,11763.0811,3010.5363,11755.87,3010.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c0bac08ab9cfe0431275f82dddd454f6]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DepthStencilBuffer--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DepthStencilBuffer"><path codeLine="940" d="M11723.92,3018.53 C11839.92,3107.35 11995.95,3208.76 12154,3257 C12511.34,3366.07 15168.33,3180.2 15516,3317 C15611.61,3354.62 15696.19,3437.67 15750.96,3501.7 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DepthStencilBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11713.53,3010.52,11715.8387,3017.3515,11723.0327,3017.848,11720.724,3011.0164,11713.53,3010.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b7a635c4fe16328246696cd3c7199492]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="943" d="M11534,3023.73 C11534,3110.6 11534,3218.7 11534,3316.87 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11534,3010.53,11530,3016.53,11534,3022.53,11538,3016.53,11534,3010.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[157a1a112a8cf469cb91303850de0d31]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DescriptorHeapDSV--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DescriptorHeapDSV"><path codeLine="946" d="M11724.32,3018.57 C11840.3,3107.26 11996.19,3208.52 12154,3257 C12450.82,3348.19 14660.84,3198.85 14948,3317 C15023.9,3348.23 15091.39,3409.96 15141.51,3466.46 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DescriptorHeapDSV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11713.93,3010.57,11716.2551,3017.396,11723.4503,3017.8751,11721.1252,3011.0491,11713.93,3010.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[84fa6b05ffe00963312eff240f59551f]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.DescriptorHeapRTV--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.DescriptorHeapRTV"><path codeLine="949" d="M11728.44,3018.48 C11844.34,3105.72 11998.77,3205.54 12154,3257 C12540.42,3385.1 12682.62,3185.83 13068,3317 C13143.66,3342.75 13218.6,3386.58 13282.91,3431.49 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.DescriptorHeapRTV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11718.05,3010.62,11720.4186,3017.431,11727.6166,3017.8643,11725.2481,3011.0532,11718.05,3010.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0902fb3edbefb32b371020b828a99c62]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.RenderTargetBuffer--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.RenderTargetBuffer"><path codeLine="952" d="M11725.55,3018.53 C11841.51,3106.78 11996.96,3207.6 12154,3257 C12518.4,3371.64 13512.84,3186.86 13872,3317 C13981.9,3356.82 14084.58,3445.55 14149.29,3510.35 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.RenderTargetBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11715.16,3010.58,11717.4851,3017.406,11724.6803,3017.8851,11722.3552,3011.0591,11715.16,3010.58" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[150307b30740fc389759f83ffbc3bd0f]
reverse link DX12Wrapper.CubeRenderTarget to DX12Wrapper.Texture--><g id="link_DX12Wrapper.CubeRenderTarget_DX12Wrapper.Texture"><path codeLine="955" d="M11341.24,3018.58 C11225.31,3106.42 11070.3,3206.81 10914,3257 C10642.67,3344.14 9912.3,3260.38 9633,3317 C9607.65,3322.14 9582,3328.02 9556.25,3334.49 " fill="none" id="DX12Wrapper.CubeRenderTarget-backto-DX12Wrapper.Texture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11351.63,3010.67,11344.4334,3011.1269,11342.0872,3017.9457,11349.2839,3017.4888,11351.63,3010.67" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="11335.6269" y="3032.1222">2</text></g><!--MD5=[56e8d41666f4cbd3d455d73a730a377a]
reverse link DX12Wrapper.CubeRenderTargetData to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.CubeRenderTargetData_DX12Wrapper.DepthStencilBufferData"><path codeLine="958" d="M12901.47,3650.26 C12930.59,3714.61 12985.85,3812.29 13068,3858 C13105.25,3878.73 14149.1,3935.7 14791.31,3968.96 " fill="none" id="DX12Wrapper.CubeRenderTargetData-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="12896.16,3638.26,12894.9257,3645.3647,12901.0092,3649.2366,12902.2435,3642.1319,12896.16,3638.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[79be0742ba62bcdab3396421e01e4f77]
reverse link DX12Wrapper.CubeRenderTargetData to DX12Wrapper.RenderTargetBufferData--><g id="link_DX12Wrapper.CubeRenderTargetData_DX12Wrapper.RenderTargetBufferData"><path codeLine="961" d="M12908.53,3649.59 C12941.67,3709.01 12998.6,3798.74 13068,3858 C13099.39,3884.81 13136.98,3907.84 13174.13,3926.94 " fill="none" id="DX12Wrapper.CubeRenderTargetData-backto-DX12Wrapper.RenderTargetBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="12902.22,3638.13,12901.6111,3645.3154,12908.0096,3648.641,12908.6185,3641.4556,12902.22,3638.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4f6341bb34e9b8564c28c557203613cb]
reverse link DX12Wrapper.DepthStencilBuffer to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.DepthStencilBuffer_DX12Wrapper.DepthStencilBufferData"><path codeLine="964" d="M15721.26,3682.48 C15664.19,3736.77 15588.71,3804.66 15516,3858 C15487.48,3878.92 15455.55,3899.45 15424.76,3917.95 " fill="none" id="DX12Wrapper.DepthStencilBuffer-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15730.97,3673.2,15723.8679,3674.4489,15722.2891,3681.4851,15729.3913,3680.2362,15730.97,3673.2" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c2d9836917752c66a8f61511ae771bad]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DepthStencilBuffer--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DepthStencilBuffer"><path codeLine="967" d="M16173.73,3265.96 C16154.21,3283.18 16134.9,3300.25 16116,3317 C16046.57,3378.52 15968.64,3448.56 15909.62,3501.81 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DepthStencilBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="16183.64,3257.22,16176.4947,3258.1918,16174.6435,3265.1612,16181.7888,3264.1894,16183.64,3257.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[af72927a9bfd8e84bd714a184135bc6e]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DepthStencilBufferData"><path codeLine="970" d="M17198.15,3254.57 C17200.1,3255.39 17202.05,3256.2 17204,3257 C17360.51,3321.36 17470.17,3188.26 17580,3317 C17736.05,3499.93 17744.91,3683.02 17580,3858 C17519.19,3922.52 16436.51,3963.02 15780.58,3981.74 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="17186.17,3249.45,17190.1109,3255.489,17197.2011,3254.1738,17193.2602,3248.1349,17186.17,3249.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[22e5c2971f978462918703e724e5485f]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="973" d="M16089.59,3255.12 C16087.73,3255.76 16085.86,3256.38 16084,3257 C15725.54,3375.73 13060.73,3270.4 12686,3317 C12458.22,3345.33 12209.79,3400.28 12002.13,3453.21 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="16101.86,3250.82,16094.8729,3249.0364,16090.5393,3254.8001,16097.5263,3256.5836,16101.86,3250.82" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7537d1c7481e493c56bb9385e3bee6b1]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DescriptorHeapDSV--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DescriptorHeapDSV"><path codeLine="976" d="M16089.5,3254.88 C16087.67,3255.6 16085.83,3256.3 16084,3257 C15846.75,3347.29 15746.5,3210.66 15516,3317 C15442.71,3350.81 15376.3,3411.24 15326.16,3466.32 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DescriptorHeapDSV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="16101.59,3250.07,16094.5357,3248.5744,16090.4419,3254.5108,16097.4962,3256.0064,16101.59,3250.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6c1b4f3727c97aa95cfd1cc45cdbb09d]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.DescriptorHeapRTV--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.DescriptorHeapRTV"><path codeLine="979" d="M16089.58,3255.1 C16087.72,3255.74 16085.86,3256.37 16084,3257 C15617.94,3413.82 14340.47,3167.53 13872,3317 C13794.95,3341.58 13719.02,3385.78 13654.25,3431.36 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.DescriptorHeapRTV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="16101.83,3250.74,16094.8361,3248.9833,16090.5246,3254.7635,16097.5185,3256.5202,16101.83,3250.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2a6e94a840d46e5bdb767b6a1f675a44]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.RenderTargetBuffer--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.RenderTargetBuffer"><path codeLine="982" d="M16089.57,3255.06 C16087.71,3255.72 16085.86,3256.36 16084,3257 C15764.7,3366.64 14883.14,3201.26 14566,3317 C14456.19,3357.08 14353.5,3445.75 14288.76,3510.47 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.RenderTargetBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="16101.79,3250.63,16094.7865,3248.9121,16090.5071,3254.7161,16097.5106,3256.434,16101.79,3250.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fc12a0a8306055a9abdf4a4c3a8932b8]
reverse link DX12Wrapper.Dx12GraphicsEngine to DX12Wrapper.RenderingContext--><g id="link_DX12Wrapper.Dx12GraphicsEngine_DX12Wrapper.RenderingContext"><path codeLine="985" d="M16759.61,3269.77 C16764.02,3285.56 16768.39,3301.23 16772.69,3316.65 " fill="none" id="DX12Wrapper.Dx12GraphicsEngine-backto-DX12Wrapper.RenderingContext" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="16756.07,3257.09,16753.8246,3263.9426,16759.2865,3268.6509,16761.5319,3261.7983,16756.07,3257.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a56e95099f74e6e8788cac6aa8a60c33]
reverse link DX12Wrapper.FontRenderer to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.FontRenderer_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="988" d="M10584.73,2975.86 C10671.18,3060.47 10793.98,3173.09 10914,3257 C10961.83,3290.44 11013.45,3322.89 11065.77,3353.56 " fill="none" id="DX12Wrapper.FontRenderer-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="10575.42,2966.73,10576.8946,2973.7887,10583.9775,2975.1425,10582.5029,2968.0837,10575.42,2966.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[391933e1a5d760318400384f9bbea03b]
reverse link Framework.Game to Framework.GameImpl--><g id="link_Framework.Game_Framework.GameImpl"><path codeLine="991" d="M5583.21,411.21 C5577.07,502.09 5568.75,625.06 5563.92,696.48 " fill="none" id="Framework.Game-backto-Framework.GameImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5584.1,398.04,5579.7006,403.7536,5583.2825,410.0121,5587.682,404.2986,5584.1,398.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[78a09c8fe8231aa8dd2ed217ca6ea4e1]
reverse link Framework.Game to Framework.IRenderer--><g id="link_Framework.Game_Framework.IRenderer"><path codeLine="994" d="M5674.29,408.65 C5736.33,492.55 5819.37,604.87 5873.74,678.41 " fill="none" id="Framework.Game-backto-Framework.IRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5666.45,398.04,5666.8041,405.2424,5673.5886,407.6857,5673.2346,400.4833,5666.45,398.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d1249ced6518b17f92e231221c6ab2ba]
reverse link Framework.Game to Framework.Window--><g id="link_Framework.Game_Framework.Window"><path codeLine="997" d="M5504.39,408.81 C5444.9,486.3 5366.85,587.96 5310.82,660.95 " fill="none" id="Framework.Game-backto-Framework.Window" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5512.66,398.04,5505.8325,400.3606,5505.3486,407.5554,5512.1761,405.2348,5512.66,398.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e0a6f7c2e594c3959cb5985360106c1c]
reverse link Game2048.Grid to Framework.Object--><g id="link_Game2048.Grid_Framework.Object"><path codeLine="1000" d="M3789.2,1482.5 C3854.95,1482.5 3920.7,1482.5 3986.45,1482.5 " fill="none" id="Game2048.Grid-backto-Framework.Object" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3776.04,1482.5,3782.04,1486.5,3788.04,1482.5,3782.04,1478.5,3776.04,1482.5" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="3783.7451" y="1479.7684">3</text></g><!--MD5=[17c73a4f708182b068f08c8c7b68f40d]
reverse link Framework.IComponent to Framework.Object--><g id="link_Framework.IComponent_Framework.Object"><path codeLine="1003" d="M4292.5,1155.74 C4273.21,1204.32 4250.05,1268.05 4230.32,1326.24 " fill="none" id="Framework.IComponent-backto-Framework.Object" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4297.44,1143.42,4291.4977,1147.5053,4292.9833,1154.5617,4298.9256,1150.4764,4297.44,1143.42" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[74e3559ea8c55874244d973e5cf90dbd]
reverse link Framework.Object to Framework.IComponent--><g id="link_Framework.Object_Framework.IComponent"><path codeLine="1009" d="M4260.41,1313.93 C4282.15,1254.07 4303.76,1189.98 4317.58,1143.42 " fill="none" id="Framework.Object-backto-Framework.IComponent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4255.92,1326.24,4261.7344,1321.9748,4260.0336,1314.9671,4254.2192,1319.2323,4255.92,1326.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fc0766b97d13d75f05d3fff993524e0c]
reverse link Framework.InputSystem to Framework.BUTTON_STATE--><g id="link_Framework.InputSystem_Framework.BUTTON_STATE"><path codeLine="1006" d="M5014.18,559.42 C4984.32,610.89 4955.82,660.01 4934.89,696.09 " fill="none" id="Framework.InputSystem-backto-Framework.BUTTON_STATE" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5020.77,548.05,5014.2979,551.23,5014.7441,558.4273,5021.2161,555.2473,5020.77,548.05" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="5009.3249" y="569.3026">2</text></g><!--MD5=[054ddd3e04f39e2fe7a5ddfe107b2238]
reverse link Framework.Object to Framework.Object--><g id="link_Framework.Object_Framework.Object"><path codeLine="1012" d="M4402.14,1455.44 C4416.07,1461.75 4424.5,1470.77 4424.5,1482.5 C4424.5,1497.37 4410.97,1507.88 4389.85,1514.04 " fill="none" id="Framework.Object-backto-Framework.Object" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4389.85,1450.96,4394.1212,1456.77,4401.1271,1455.062,4396.8559,1449.2519,4389.85,1450.96" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[054ddd3e04f39e2fe7a5ddfe107b2238]
reverse link Framework.Object to Framework.Object--><g id="link_Framework.Object_Framework.Object"><path codeLine="1015" d="M4402.52,1412.56 C4436.37,1422.9 4459.5,1446.22 4459.5,1482.5 C4459.5,1523.24 4430.34,1547.63 4389.58,1555.66 " fill="none" id="Framework.Object-backto-Framework.Object-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4389.58,1409.34,4394.435,1414.6719,4401.224,1412.2411,4396.3691,1406.9092,4389.58,1409.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1628d7bf09918cf53c4da8c924e1fb72]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DepthStencilBuffer--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DepthStencilBuffer"><path codeLine="1018" d="M15557.55,3022.53 C15626.08,3172.07 15723.76,3385.23 15777.27,3501.99 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DepthStencilBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15552.04,3010.53,15550.9001,3017.6504,15557.0344,3021.4413,15558.1743,3014.3208,15552.04,3010.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0c262e039aa877665a21e5338b5fc119]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="1021" d="M15295.55,3018.96 C15183.06,3107.34 15031.88,3208.15 14878,3257 C14645.77,3330.72 12927.64,3285.76 12686,3317 C12458.36,3346.43 12209.94,3401.52 12002.27,3454.26 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15305.97,3010.72,15298.7823,3011.3003,15296.5534,3018.1583,15303.7411,3017.578,15305.97,3010.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[51f13ec0bd4643a6c0562582590a433e]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DescriptorHeapDSV--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DescriptorHeapDSV"><path codeLine="1024" d="M15423.93,3023.05 C15377.83,3158.38 15314.07,3345.57 15272.93,3466.35 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DescriptorHeapDSV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15428.19,3010.53,15422.4673,3014.9176,15424.3163,3021.8876,15430.039,3017.5,15428.19,3010.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b299f5b7d7fd16b77ad85290d31b5bc9]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.DescriptorHeapRTV--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.DescriptorHeapRTV"><path codeLine="1027" d="M15292.71,3018.86 C15180.25,3106.2 15030.06,3206.02 14878,3257 C14453.33,3399.38 14296.45,3173.95 13872,3317 C13796.16,3342.56 13721.1,3386.41 13656.75,3431.4 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.DescriptorHeapRTV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15303.13,3010.71,15295.9392,3011.2508,15293.6727,3018.0964,15300.8635,3017.5557,15303.13,3010.71" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[588706252f2a1b7ca017bfb3afbadd8b]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.RenderTargetBuffer--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.RenderTargetBuffer"><path codeLine="1030" d="M15280.15,3018.76 C15168.02,3102.03 15022.18,3197.95 14878,3257 C14747.33,3310.52 14694.64,3258.76 14566,3317 C14461.77,3364.19 14360.55,3448.61 14294.6,3510.42 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.RenderTargetBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15290.9,3010.74,15283.6991,3011.1226,15281.2826,3017.9168,15288.4836,3017.5342,15290.9,3010.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6a1ec4a1fb814f347e341f24c5f759f4]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.RenderTargetData--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.RenderTargetData"><path codeLine="1033" d="M15269.37,3018.81 C15167.01,3102.63 15045.51,3209.53 14948,3317 C14886.92,3384.32 14828.26,3471.58 14792.43,3528.29 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.RenderTargetData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15279.53,3010.52,15272.3522,3011.2125,15270.2308,3018.1045,15277.4085,3017.412,15279.53,3010.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2aaef017c29298e2395ab29f23c46780]
reverse link DX12Wrapper.RenderTarget to DX12Wrapper.Texture--><g id="link_DX12Wrapper.RenderTarget_DX12Wrapper.Texture"><path codeLine="1036" d="M15297.11,3018.87 C15184.58,3107.8 15032.85,3209.2 14878,3257 C14599.56,3342.96 9919.58,3264.16 9633,3317 C9605.98,3321.98 9578.65,3327.87 9551.22,3334.49 " fill="none" id="DX12Wrapper.RenderTarget-backto-DX12Wrapper.Texture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15307.53,3010.58,15300.3446,3011.1887,15298.1429,3018.0554,15305.3282,3017.4468,15307.53,3010.58" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="15291.958" y="3032.0279">2</text></g><!--MD5=[8960221daeb1dc96f90bb4ca6a52da5f]
reverse link DX12Wrapper.RenderTargetData to DX12Wrapper.DepthStencilBufferData--><g id="link_DX12Wrapper.RenderTargetData_DX12Wrapper.DepthStencilBufferData"><path codeLine="1039" d="M14791.71,3658.37 C14824.67,3718.45 14879.33,3803.77 14948,3858 C14977.54,3881.32 15011.6,3901.15 15046.5,3917.85 " fill="none" id="DX12Wrapper.RenderTargetData-backto-DX12Wrapper.DepthStencilBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="14785.41,3646.7,14784.7375,3653.8797,14791.1063,3657.2618,14791.7788,3650.0822,14785.41,3646.7" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[12f372a53b50d8dd6e6421120b3bfc46]
reverse link DX12Wrapper.RenderTargetData to DX12Wrapper.RenderTargetBufferData--><g id="link_DX12Wrapper.RenderTargetData_DX12Wrapper.RenderTargetBufferData"><path codeLine="1042" d="M14727.86,3658.44 C14697.43,3721.96 14643.28,3812.46 14566,3858 C14433.08,3936.33 14060.83,3969.56 13761.62,3983.65 " fill="none" id="DX12Wrapper.RenderTargetData-backto-DX12Wrapper.RenderTargetBufferData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="14733.45,3646.51,14727.2788,3650.2404,14728.3487,3657.3717,14734.5199,3653.6413,14733.45,3646.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a30236c712de0934bd54118139beb6a2]
reverse link DX12Wrapper.RootSignatureData to DX12Wrapper.DescriptorRangeData--><g id="link_DX12Wrapper.RootSignatureData_DX12Wrapper.DescriptorRangeData"><path codeLine="1045" d="M7770.37,2920.27 C7933.55,3014.02 8255.02,3184.26 8553,3257 C8786.51,3314 9408.65,3230.7 9633,3317 C9749.66,3361.87 9856.84,3463.66 9916.88,3528.5 " fill="none" id="DX12Wrapper.RootSignatureData-backto-DX12Wrapper.DescriptorRangeData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7758.9,2913.66,7762.0959,2920.1242,7769.292,2919.6605,7766.0962,2913.1962,7758.9,2913.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[436b8f62d3d47389c70f2c7d3b098de3]
reverse link DX12Wrapper.RootSignatureData to DX12Wrapper.SamplerData--><g id="link_DX12Wrapper.RootSignatureData_DX12Wrapper.SamplerData"><path codeLine="1048" d="M7649.59,2926.9 C7625.04,3068.22 7570.57,3381.76 7546.65,3519.45 " fill="none" id="DX12Wrapper.RootSignatureData-backto-DX12Wrapper.SamplerData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7651.88,2913.78,7646.9158,2919.0104,7649.8345,2925.6044,7654.7987,2920.374,7651.88,2913.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f3f419d11c895d0057c826609dd27485]
reverse link Framework.Scene to Framework.Canvas--><g id="link_Framework.Scene_Framework.Canvas"><path codeLine="1051" d="M4141.36,913.58 C4120.09,939.75 4098.77,965.99 4079.72,989.43 " fill="none" id="Framework.Scene-backto-Framework.Canvas" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4149.82,903.17,4142.9313,905.3021,4142.2499,912.4809,4149.1386,910.3488,4149.82,903.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[86e60171fdf371aa9e0051c64cd89be2]
reverse link Framework.SceneManager to Framework.Scene--><g id="link_Framework.SceneManager_Framework.Scene"><path codeLine="1054" d="M4562.2,443.32 C4512.59,495.97 4456.72,555.26 4407.17,607.86 " fill="none" id="Framework.SceneManager-backto-Framework.Scene" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4571.39,433.57,4564.3638,435.1924,4563.159,442.3022,4570.1853,440.6798,4571.39,433.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[61cd5ad0bf0a63c6f025db186e771e86]
reverse link Framework.ShaderLibrary to Framework.SHADERTYPE--><g id="link_Framework.ShaderLibrary_Framework.SHADERTYPE"><path codeLine="1057" d="M6284.61,393.71 C6291.33,493.17 6301.43,642.56 6306.25,713.84 " fill="none" id="Framework.ShaderLibrary-backto-Framework.SHADERTYPE" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6283.72,380.63,6280.138,386.8886,6284.5375,392.6021,6288.1194,386.3436,6283.72,380.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ddf72e89d8178a1358dbd736dc7c5dd8]
reverse link Framework.ShaderLibrary to DX12Wrapper.Shader--><g id="link_Framework.ShaderLibrary_DX12Wrapper.Shader"><path codeLine="1060" d="M6746.13,308.74 C8683.66,364.49 15974,605.41 15974,1074 C15974,1074 15974,1074 15974,1926.5 C15974,2513.56 16715.76,2082.02 17204,2408 C17350.23,2505.63 17484.91,2660.64 17562.99,2759.68 " fill="none" id="Framework.ShaderLibrary-backto-DX12Wrapper.Shader" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6733.06,308.36,6738.9433,312.5297,6745.0551,308.7027,6739.1718,304.533,6733.06,308.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e03e230ed365915f7d65dcc2c8c6076e]
reverse link Framework.SoundManager to Framework.SoundClip--><g id="link_Framework.SoundManager_Framework.SoundClip"><path codeLine="1063" d="M4252.93,384.07 C4226.42,437.08 4186.74,502.84 4136,548 C4088.77,590.04 4054.83,566.64 4007,608 C3978.82,632.37 3955.63,666.96 3939.11,696.41 " fill="none" id="Framework.SoundManager-backto-Framework.SoundClip" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4258.71,372.27,4252.4756,375.8938,4253.4227,383.0424,4259.6571,379.4186,4258.71,372.27" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[56d5acd08ad49a89eefdcb9d9237e797]
reverse link Framework.Sprite to DX12Wrapper.DescriptorHeapCBV_SRV_UAV--><g id="link_Framework.Sprite_DX12Wrapper.DescriptorHeapCBV_SRV_UAV"><path codeLine="1066" d="M6440.25,2405.02 C6419.78,2651.36 6395.39,3143.55 6514,3257 C6590.05,3329.74 10197.47,3304.86 10302,3317 C10557.14,3346.63 10837.15,3405.69 11065.67,3461 " fill="none" id="Framework.Sprite-backto-DX12Wrapper.DescriptorHeapCBV_SRV_UAV" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6441.34,2392.04,6436.8468,2397.6801,6440.3249,2403.997,6444.8181,2398.3569,6441.34,2392.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7e254dcab0747bf5009e057cb5220f9e]
reverse link Framework.Sprite to DX12Wrapper.IndexBuffer--><g id="link_Framework.Sprite_DX12Wrapper.IndexBuffer"><path codeLine="1069" d="M6746.29,2285.83 C7144.27,2315.31 7879.05,2366.46 8507,2392 C8554.25,2393.92 9315.96,2386.36 9358,2408 C9491.33,2476.62 9584.88,2626.45 9637.74,2733.39 " fill="none" id="Framework.Sprite-backto-DX12Wrapper.IndexBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6733.15,2284.85,6738.839,2289.2811,6745.1174,2285.734,6739.4284,2281.3029,6733.15,2284.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[18a1ff5471dd5949fea95ceab8787aec]
reverse link Framework.Sprite to DX12Wrapper.Texture--><g id="link_Framework.Sprite_DX12Wrapper.Texture"><path codeLine="1072" d="M6400.05,2404.58 C6327.92,2620.06 6232.79,3030.01 6452,3257 C6518.42,3325.78 8078.18,3298.54 8172,3317 C8197.85,3322.09 8223.99,3327.96 8250.24,3334.47 " fill="none" id="Framework.Sprite-backto-DX12Wrapper.Texture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6404.23,2392.25,6398.521,2396.6554,6400.3918,2403.6196,6406.1008,2399.2142,6404.23,2392.25" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9c37b09d4547162304cce4000c8b6b91]
reverse link Framework.Sprite to DX12Wrapper.VertexBuffer--><g id="link_Framework.Sprite_DX12Wrapper.VertexBuffer"><path codeLine="1075" d="M6746.12,2271.51 C7284.89,2288.04 8394.72,2331.01 8553,2408 C8702.42,2480.68 8821.7,2635.73 8890.4,2742.3 " fill="none" id="Framework.Sprite-backto-DX12Wrapper.VertexBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6733.1,2271.11,6738.9786,2275.2864,6745.0947,2271.4663,6739.2161,2267.2899,6733.1,2271.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b326297578a450bd090990c66d971dfa]
reverse link Framework.SpriteRenderer to DX12Wrapper.ConstantBuffer--><g id="link_Framework.SpriteRenderer_DX12Wrapper.ConstantBuffer"><path codeLine="1078" d="M5720.16,2071.55 C5721.77,2072.04 5723.39,2072.53 5725,2073 C5944.18,2137.2 6523.16,2117.15 6751,2133 C8178.41,2232.33 8530.52,2329.19 9960,2392 C9990.44,2393.34 12127.22,2393.46 12154,2408 C12277.38,2474.98 12357.69,2618.71 12402.7,2724.89 " fill="none" id="Framework.SpriteRenderer-backto-DX12Wrapper.ConstantBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5707.77,2067.54,5712.2484,2073.1919,5719.188,2071.2317,5714.7096,2065.5799,5707.77,2067.54" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fdf8eae9f5e3d44c7f646fecb28dc1c9]
reverse link Framework.SpriteRenderer to DX12Wrapper.GraphicsPipelineState--><g id="link_Framework.SpriteRenderer_DX12Wrapper.GraphicsPipelineState"><path codeLine="1081" d="M5720.13,2071.63 C5721.76,2072.1 5723.38,2072.56 5725,2073 C6009.72,2150.89 8086.55,2112.18 8381,2133 C9351.63,2201.62 9583.87,2330.79 10555,2392 C10615.63,2395.82 12685.73,2385.09 12742,2408 C12922.02,2481.31 13071.48,2661.22 13148.58,2768.65 " fill="none" id="Framework.SpriteRenderer-backto-DX12Wrapper.GraphicsPipelineState" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5707.69,2067.82,5712.2524,2073.4043,5719.1619,2071.3407,5714.5995,2065.7564,5707.69,2067.82" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e7c7c07029e5b03bf41b2e5ebc24e3b0]
reverse link Framework.SpriteRenderer to DX12Wrapper.RootSignature--><g id="link_Framework.SpriteRenderer_DX12Wrapper.RootSignature"><path codeLine="1084" d="M5720.13,2071.65 C5721.75,2072.11 5723.38,2072.56 5725,2073 C5927.18,2127.58 9284.76,2124.45 9494,2133 C10422.79,2170.97 12794.87,2089.03 13668,2408 C13880.57,2485.66 14082.9,2662.68 14191.23,2768.71 " fill="none" id="Framework.SpriteRenderer-backto-DX12Wrapper.RootSignature" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5707.68,2067.88,5712.2618,2073.4484,5719.1641,2071.3608,5714.5823,2065.7924,5707.68,2067.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b4d1a0755136a4b0971e162608b5bd94]
reverse link Framework.SpriteRenderer to Framework.SPRITE_DRAW_MODE--><g id="link_Framework.SpriteRenderer_Framework.SPRITE_DRAW_MODE"><path codeLine="1087" d="M5396.15,2085.45 C5374.77,2135.53 5352.96,2186.64 5338.38,2220.79 " fill="none" id="Framework.SpriteRenderer-backto-Framework.SPRITE_DRAW_MODE" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5401.28,2073.44,5395.2467,2077.3896,5396.5721,2084.4779,5402.6053,2080.5283,5401.28,2073.44" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[003c31fb0db205c1b6b352c3703850ea]
reverse link Framework.SpriteRenderer to Framework.Sprite--><g id="link_Framework.SpriteRenderer_Framework.Sprite"><path codeLine="1090" d="M5719.57,2070.79 C5721.38,2071.54 5723.19,2072.27 5725,2073 C5869.18,2130.97 6036.65,2175.74 6174.69,2207.08 " fill="none" id="Framework.SpriteRenderer-backto-Framework.Sprite" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5707.57,2065.73,5711.5405,2071.7495,5718.6242,2070.3997,5714.6536,2064.3801,5707.57,2065.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7390270c508d78bb6a40d3772a29b67d]
reverse link Framework.Text to DX12Wrapper.FontRenderer--><g id="link_Framework.Text_DX12Wrapper.FontRenderer"><path codeLine="1093" d="M6103.95,2061 C6113.21,2065.47 6122.58,2069.52 6132,2073 C6182.83,2091.81 9970.84,2385.17 10020,2408 C10178.37,2481.56 10312.8,2636.2 10391.71,2742.45 " fill="none" id="Framework.Text-backto-DX12Wrapper.FontRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6092.28,2055.12,6095.8331,2061.395,6102.9919,2060.5287,6099.4389,2054.2537,6092.28,2055.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3891b823e1c61f319fcf9343b8f671a4]
reverse link Game2048.Tile to DX12Wrapper.Texture--><g id="link_Game2048.Tile_DX12Wrapper.Texture"><path codeLine="1096" d="M1853.01,1634.28 C1838.46,1760.46 1837.13,1940.6 1916,2073 C2425.22,2927.81 2861.3,2976.75 3816,3257 C4280.45,3393.34 7696.1,3228.57 8172,3317 C8198.81,3321.98 8225.94,3327.85 8253.16,3334.45 " fill="none" id="Game2048.Tile-backto-DX12Wrapper.Texture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1854.6,1621.09,1849.9105,1626.568,1853.1635,1633.0037,1857.853,1627.5257,1854.6,1621.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8507661ca8c5b8fe2395c0eff770ded9]
reverse link Framework.Transform2D to DX12Wrapper.ConstantBuffer--><g id="link_Framework.Transform2D_DX12Wrapper.ConstantBuffer"><path codeLine="1099" d="M6746.41,1483.05 C7441.16,1484.98 9427.04,1514.09 10012,1778 C10371.6,1940.24 10287.72,2243.01 10653,2392 C10730.22,2423.49 12080.78,2368.09 12154,2408 C12277.27,2475.19 12357.6,2618.88 12402.65,2724.99 " fill="none" id="Framework.Transform2D-backto-DX12Wrapper.ConstantBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6733.25,1483.01,6739.2412,1487.0232,6745.25,1483.0364,6739.2588,1479.0232,6733.25,1483.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ad0c46c1b79da30a4909e6706c90108f]
reverse link Framework.Camera to Framework.Camera::CameraData--><g id="link_Framework.Camera_Framework.Camera::CameraData"><path codeLine="1108" d="M6100.14,1634.39 C6148.75,1722.6 6206.49,1827.38 6237.54,1883.74 " fill="none" id="Framework.Camera-backto-Framework.Camera::CameraData" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6096.7486" cy="1628.228" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6100.6071" x2="6092.89" y1="1635.2359" y2="1621.22"/><line style="stroke:#181818;stroke-width:1.0;" x1="6089.7406" x2="6103.7565" y1="1632.0865" y2="1624.3694"/></g><!--MD5=[9ffad002ff0d76c18238890543cadfcf]
reverse link Game2048.GameScene to Game2048.GameScene::DRAW_LAYER--><g id="link_Game2048.GameScene_Game2048.GameScene::DRAW_LAYER"><path codeLine="1111" d="M87.44,1556.48 C94.81,1609.75 113.77,1679.18 162,1718 C300.78,1829.7 1556.51,1900.53 1933.48,1919.42 " fill="none" id="Game2048.GameScene-backto-Game2048.GameScene::DRAW_LAYER" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="86.5879" cy="1549.5112" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="87.5558" x2="85.62" y1="1557.4525" y2="1541.57"/><line style="stroke:#181818;stroke-width:1.0;" x1="78.6467" x2="94.5291" y1="1550.4791" y2="1548.5433"/></g><!--MD5=[5e8cf46603d860c76312e4f38d31e105]
reverse link Game2048.Grid to Game2048.Grid::GAME_STATE--><g id="link_Game2048.Grid_Game2048.Grid::GAME_STATE"><path codeLine="1114" d="M3447.66,1732.74 C3431.96,1786.81 3416.95,1838.54 3406.48,1874.61 " fill="none" id="Game2048.Grid-backto-Game2048.Grid::GAME_STATE" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3449.6561" cy="1725.8847" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3447.4322" x2="3451.88" y1="1733.5693" y2="1718.2"/><line style="stroke:#181818;stroke-width:1.0;" x1="3441.9714" x2="3457.3408" y1="1723.6608" y2="1728.1086"/></g><!--MD5=[d327b60038b54a7460383a78e1d6046e]
reverse link Game2048.Grid to Game2048.Grid::INPUT_DIRECTION--><g id="link_Game2048.Grid_Game2048.Grid::INPUT_DIRECTION"><path codeLine="1117" d="M3565.85,1733.11 C3574.25,1778.87 3582.34,1822.92 3588.64,1857.21 " fill="none" id="Game2048.Grid-backto-Game2048.Grid::INPUT_DIRECTION" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3564.5498" cy="1726.0694" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3565.9896" x2="3563.11" y1="1733.9387" y2="1718.2"/><line style="stroke:#181818;stroke-width:1.0;" x1="3556.6804" x2="3572.4192" y1="1727.5092" y2="1724.6296"/></g><!--MD5=[cab85349f8236f00c4926565d467430f]
reverse link Framework.Sprite to Framework.Sprite::SpriteVertex--><g id="link_Framework.Sprite_Framework.Sprite::SpriteVertex"><path codeLine="1120" d="M6503.54,2406.54 C6503.69,2407.03 6503.85,2407.51 6504,2408 C6550.85,2556.08 6599.81,2734.09 6621.07,2812.74 " fill="none" id="Framework.Sprite-backto-Framework.Sprite::SpriteVertex" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6501.3673" cy="2399.8165" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6503.8147" x2="6498.92" y1="2407.4329" y2="2392.2"/><line style="stroke:#181818;stroke-width:1.0;" x1="6493.7509" x2="6508.9838" y1="2402.2638" y2="2397.3691"/></g><!--MD5=[8b9d1c47fda74b9065a2158a54ad4e23]
reverse link Framework.SpriteRenderer to Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX--><g id="link_Framework.SpriteRenderer_Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX"><path codeLine="1123" d="M5532.71,2087.47 C5550.42,2128.94 5568.35,2170.95 5582.16,2203.3 " fill="none" id="Framework.SpriteRenderer-backto-Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5529.8585" cy="2080.7987" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5532.997" x2="5526.72" y1="2088.1573" y2="2073.44"/><line style="stroke:#181818;stroke-width:1.0;" x1="5522.4998" x2="5537.2171" y1="2083.9371" y2="2077.6602"/></g><!--MD5=[ae7ff1db6c039036b3e5b8dd6fac598e]
reverse link Framework.Transform2D to Framework.Transform2D::Transform2DData--><g id="link_Framework.Transform2D_Framework.Transform2D::Transform2DData"><path codeLine="1126" d="M6510.53,1627.46 C6514.8,1721.63 6520.03,1837.07 6522.54,1892.2 " fill="none" id="Framework.Transform2D-backto-Framework.Transform2D::Transform2DData" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6510.1981" cy="1620.232" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6510.5562" x2="6509.84" y1="1628.224" y2="1612.24"/><line style="stroke:#181818;stroke-width:1.0;" x1="6502.2061" x2="6518.1901" y1="1620.5901" y2="1619.8739"/></g><!--MD5=[f18192d0728253be99cbe3a4060a5ed8]
@startuml





/' Objects '/

namespace Game2048 {
	class Game2048 {
		+Game2048()
		+~Game2048()
		+Final() : void
		+Init() : void
	}

	class GameScene {
		+GameScene()
		+~GameScene()
		+Final() : void
		+Init() : void
	}

	class GameSceneCanvas {
		+GameSceneCanvas()
		+~GameSceneCanvas()
		+Final() : void
		+Init() : void
	}

	class GameTimer {
		+GameTimer(Framework::Object* owner)
		+~GameTimer()
		-m_elapsedTime : float
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class Grid {
		+Grid(Framework::Object* owner)
		+~Grid()
		-m_gameState : GAME_STATE
		-CheckInputDirection() : INPUT_DIRECTION
		-CheckGameClear() : bool
		-CheckGameOver() : bool
		-Move(INPUT_DIRECTION direction) : bool
		-Union(INPUT_DIRECTION direction) : bool
		-m_gridLeft : float
		-m_gridTop : float
		-m_randomEngine : std::mt19937_64
		-m_randomGenerator : std::uniform_real_distribution<>
		-m_gameClearText : std::unique_ptr<class Framework::Object>
		-m_gameOverText : std::unique_ptr<class Framework::Object>
		-m_tiles : std::vector<std::vector<std::unique_ptr<class Framework::Object>>>
		-m_grid : std::vector<std::vector<unsigned int>>
		+Draw() : void
		-GameClear(float deltaTime) : void
		-GameOver(float deltaTime) : void
		-Playing(float deltaTime) : void
		-SpawnTile(INPUT_DIRECTION direction) : void
		-TileDraw() : void
		+Update(float deltaTime) : void
		-UpdateTile(float deltaTime) : void
	}

	class PressEnterText {
		+PressEnterText(class Framework::Object* owner)
		+~PressEnterText()
		-m_elapsedTime : float
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class QuitButton {
		+QuitButton(class Framework::Object* owner)
		+~QuitButton()
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class Renderer {
		+Renderer()
		+~Renderer()
		+Init() : Utility::RESULT
		-RenderScene(const std::vector<std::unique_ptr<class Framework::Object>>& gameObjects) : void
		-RenderUI(const std::vector<std::unique_ptr<class Framework::Canvas>>& canvases) : void
	}

	class Tile {
		+Tile(Framework::Object* owner)
		+~Tile()
		-m_height : float
		-m_width : float
		-{static} m_tileTextures : static std::unordered_map<unsigned int, std::shared_ptr<DX12Wrapper::Texture>>
		+GetNumber() : unsigned int
		-m_number : unsigned int
		+Draw() : void
		+{static} LoadTileTextures() : void
		+SetGridPosition(unsigned int x, unsigned int y, float gridLeft, float gridTop) : void
		+SetNumber(unsigned int number) : void
		+SetScale(float width, float height) : void
		+Update(float deltaTime) : void
	}

	class TitleScene {
		+TitleScene()
		+~TitleScene()
		+Final() : void
		+Init() : void
	}

	class TitleSceneCanvas {
		+TitleSceneCanvas()
		+~TitleSceneCanvas()
		+Final() : void
		+Init() : void
	}

	enum GameScene::DRAW_LAYER {
		BACKGROUND
		GRID_BACKGROUND
		GRID_LINE
		TILE
		UI
	}

	enum Grid::GAME_STATE {
		GAME_CLEAR
		GAME_OVER
		PLAYING
	}

	enum Grid::INPUT_DIRECTION {
		DOWN
		LEFT
		NONE
		RIGHT
		UP
	}
}


namespace Framework {
	class Button {
		+Button(Object* owner)
		-function<void()
		+~Button()
		-CheckClick() : bool
		-m_spriteRenderer : std::unique_ptr<class SpriteRenderer>
		-m_text : std::unique_ptr<class Text>
		+Draw() : void
		+SetOnClick(const std::function<void ( )>& onClick) : void
		+SetPosition(float x, float y) : void
		+SetScale(float x, float y) : void
		+SetText(const std::wstring& text) : void
		+SetTexture(const std::wstring& path) : void
		+Update(float deltaTime) : void
	}

	class ButtonRenderer {
		+ButtonRenderer()
		+~ButtonRenderer()
		-CreateGraphicsPipelineState(ID3D12Device& device) : Utility::RESULT
		-CreateRootSignature(ID3D12Device& device) : Utility::RESULT
		+Init() : Utility::RESULT
		-m_pipelineState : std::unique_ptr<DX12Wrapper::GraphicsPipelineState>
		-m_pipelineState2 : std::unique_ptr<DX12Wrapper::GraphicsPipelineState>
		-m_rootSignature : std::unique_ptr<DX12Wrapper::RootSignature>
		-m_rootSignature2 : std::unique_ptr<DX12Wrapper::RootSignature>
		-Render() : void
	}

	class Camera {
		+Camera(Object* owner)
		+~Camera()
		-m_bufferData : CameraData
		+GetConstantBuffer() : DX12Wrapper::ConstantBuffer& {query}
		+GetProjectionMatrix() : DirectX::XMMATRIX {query}
		+GetViewMatrix() : DirectX::XMMATRIX {query}
		+GetFar() : float {query}
		+GetNear() : float {query}
		-m_far : float
		-m_near : float
		-m_cameraBuffer : std::unique_ptr<DX12Wrapper::ConstantBuffer>
		+Draw() : void
		+Update(float deltaTime) : void
	}

	abstract class Canvas {
		+Canvas()
		+~Canvas()
		#m_guiObjects : std::vector<std::unique_ptr<Object>>
		+Draw() : void
		+{abstract} Final() : void
		+{abstract} Init() : void
		+Update(float deltaTime) : void
	}

	class Game {
		+Game(GameImpl& gameImpl, IRenderer& renderer)
		+~Game()
		-m_gameImpl : GameImpl&
		-m_renderer : IRenderer&
		-m_window : Window
		-m_prevFrameTime : std::chrono::system_clock::time_point
		+Final() : void
		+Init() : void
		+Run() : void
	}

	abstract class GameImpl {
		+GameImpl()
		+~GameImpl()
		+{abstract} Final() : void
		+{abstract} Init() : void
	}

	abstract class IComponent {
		+IComponent(Object* owner)
		+~IComponent()
		#m_owner : Object*
		+{abstract} Draw() : void
		+{abstract} Update(float deltaTime) : void
	}

	abstract class IRenderer {
		+IRenderer()
		+~IRenderer()
		+{abstract} Init() : Utility::RESULT
		+Render(const class Scene* scene) : void
		-{abstract} RenderScene(const std::vector<std::unique_ptr<class Object>>& gameObjects) : void
		-{abstract} RenderUI(const std::vector<std::unique_ptr<class Canvas>>& canvases) : void
	}

	class InputSystem {
		+InputSystem()
		+~InputSystem()
		-m_keysState : BUTTON_STATE
		-m_mouseButtonState : BUTTON_STATE
		-m_currentKeys : BYTE
		-m_prevKeys : BYTE
		-m_currentMouse : DIMOUSESTATE
		-m_prevMouse : DIMOUSESTATE
		-SetupKeyboard(HWND& hwnd) : HRESULT
		-SetupMouse(HWND& hwnd) : HRESULT
		-m_hwnd : HWND
		+{static} Instance() : InputSystem&
		-m_directInputInterface : LPDIRECTINPUT8
		-m_keyboard : LPDIRECTINPUTDEVICE8
		-m_mouse : LPDIRECTINPUTDEVICE8
		+GetMousePosition() : POINT
		+Init(HWND& hwnd) : Utility::RESULT
		+GetKeyDown(Framework::BYTE keyCode) : bool
		+GetMouseButtonDown(MOUSECODE mouseCode) : bool
		-m_mouseWheelMovement : float
		-m_mouseXMovement : float
		-m_mouseYMovement : float
		+Update() : void
		-UpdateKeyStates() : void
		-UpdateMouseStates() : void
		+ViewMouseCursor() : void
	}

	class Object {
		+Object()
		+~Object()
		+Parent() : Object*
		#m_parent : Object*
		+AddComponent(Object* owner) : T*
		+GetComponent() : T*
		+GetActive() : bool
		#m_isActive : bool
		#m_components : std::vector<std::unique_ptr<IComponent>>
		#m_children : std::vector<std::unique_ptr<Object>>
		+AddChild(std::unique_ptr<Object>& child) : void
		+Draw() : void
		+SetActive(bool isActive) : void
		+SetParent(Object* parent) : void
		+Update(float deltaTime) : void
	}

	abstract class Scene {
		+Scene()
		+~Scene()
		+{static} GetCamera() : Camera&
		#m_isActive : bool
		#{static} m_cameraObject : static std::unique_ptr<GameObject>
		#m_canvases : std::vector<std::unique_ptr<Canvas>>
		+GetCanvases() : std::vector<std::unique_ptr<Canvas>>& {query}
		#m_gameObjects : std::vector<std::unique_ptr<GameObject>>
		+GetGameObjects() : std::vector<std::unique_ptr<GameObject>>& {query}
		+{abstract} Final() : void
		+{abstract} Init() : void
		+LateUpdate(float deltaTime) : void
		+SetActive(bool isActive) : void
		+Update(float deltaTime) : void
	}

	class SceneManager {
		-SceneManager()
		-~SceneManager()
		+{static} Instance() : SceneManager&
		-m_isSceneChanged : bool
		-m_activeSceneName : const char*
		-m_oldSceneName : const char*
		-m_scenes : std::unordered_map<const char*, std::unique_ptr<Scene>>
		+ActiveSceneDraw(class IRenderer& renderer) : void
		+ActiveSceneFinal() : void
		+ActiveSceneLateUpdate(float deltaTime) : void
		+ActiveSceneUpdate(float deltaTime) : void
		+AddScene(const char* name) : void
		+LoadScene(const char* name) : void
	}

	class ShaderLibrary {
		-ShaderLibrary()
		-~ShaderLibrary()
		+GetShader(const std::string& shaderTag) : DX12Wrapper::Shader*
		+{static} Instance() : ShaderLibrary&
		-_shaderTypeMap : std::unordered_map<SHADERTYPE, const char*>
		-_shaderMap : std::unordered_map<std::string, DX12Wrapper::Shader>
		+RegistShader(const TCHAR* shaderFileName, const std::string& shaderTag, SHADERTYPE shaderType, const char* entryPointName) : void
	}

	class SoundClip {
		+SoundClip()
		+~SoundClip()
		+PlayLoop() : void
		+PlayOneShot() : void
	}

	class SoundManager {
		-SoundManager()
		-~SoundManager()
		+{static} Instance() : SoundManager&
		-m_soundClips : std::vector<SoundClip>
		+PlayLoop(const char* name) : void
		+PlayOneShot(const char* name) : void
	}

	class Sprite {
		+Sprite(const std::wstring& path, SPRITE_PIVOT pivot)
		+~Sprite()
		+GetDescriptorHeap() : DX12Wrapper::DescriptorHeapCBV_SRV_UAV& {query}
		+GetIndexBuffer() : DX12Wrapper::IndexBuffer& {query}
		+GetVertexBuffer() : DX12Wrapper::VertexBuffer& {query}
		-m_texture : std::shared_ptr<DX12Wrapper::Texture>
		-m_descriptorHeap : std::unique_ptr<DX12Wrapper::DescriptorHeapCBV_SRV_UAV>
		-m_indexBuffer : std::unique_ptr<DX12Wrapper::IndexBuffer>
		-m_vertexBuffer : std::unique_ptr<DX12Wrapper::VertexBuffer>
		-m_vertex : std::vector<SpriteVertex>
		+LoadTexture(const std::wstring& path) : void
		+SetTexture(std::shared_ptr<DX12Wrapper::Texture>& texture) : void
	}

	class SpriteRenderer {
		+SpriteRenderer(Framework::Object* owner)
		+~SpriteRenderer()
		-m_drawMode : SPRITE_DRAW_MODE
		+CreateGraphicsPipelineState(ID3D12Device& device) : Utility::RESULT
		+CreateRootSignature(ID3D12Device& device) : Utility::RESULT
		-m_drawModeBuffer : std::unique_ptr<DX12Wrapper::ConstantBuffer>
		-m_pipelineState : std::unique_ptr<DX12Wrapper::GraphicsPipelineState>
		-m_rootSignature : std::unique_ptr<DX12Wrapper::RootSignature>
		-m_sprite : std::unique_ptr<class Sprite>
		+Draw() : void
		+SetDrawMode(SPRITE_DRAW_MODE drawMode) : void
		+SetLayer(UINT layer) : void
		+SetSprite(class Sprite* sprite) : void
		+Update(float deltaTime) : void
	}

	class Text {
		+Text(Object* owner)
		+~Text()
		-m_fontRenderer : DX12Wrapper::FontRenderer&
		-m_color : DirectX::XMVECTORF32
		-m_text : std::wstring
		+Draw() : void
		+SetColor(const DirectX::XMVECTORF32& color) : void
		+SetPosition(const DirectX::XMFLOAT2& position) : void
		+SetRotation(float angle) : void
		+SetScale(const float& scale) : void
		+SetText(const std::wstring& text) : void
		+Update(float deltaTime) : void
	}

	class Transform2D {
		+Transform2D(Object* owner)
		+~Transform2D()
		+GetConstantBuffer() : DX12Wrapper::ConstantBuffer&
		+position : DirectX::XMFLOAT2
		+scale : DirectX::XMFLOAT2
		+GetTransformMatrix() : DirectX::XMMATRIX
		-m_bufferData : Transform2DData
		+angle : float
		+depth : float
		-m_transformBuffer : std::unique_ptr<DX12Wrapper::ConstantBuffer>
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class Window {
		+Window()
		+~Window()
		+{static} GetHwnd() : HWND&
		+{static} GetWindowSize() : SIZE
		-m_wndClassEx : WNDCLASSEX
		+DispatchWindowMessage() : bool
		-{static} m_hwnd : static HWND
		+Create(const TCHAR* windowName, LONG width, LONG height) : void
	}

	enum BUTTON_STATE {
		DOWN
		HOLD
		NONE
		UP
	}

	enum MOUSECODE {
		LEFT
		RIGHT
		WHEEL
	}

	enum SHADERTYPE {
		PIXEL
		VERTEX
	}

	enum SPRITE_DRAW_MODE {
		GAMEOBJECT
		GUI
	}

	enum SPRITE_PIVOT {
		CENTER
		TOP_LEFT
	}

	enum SpriteRenderer::CONSTANT_BUFFER_INDEX {
		BUFFER_COUNT
		CAMERA
		DRAW_MODE
		TRANSFORM
	}

	class Camera::CameraData {
		+projection : DirectX::XMMATRIX
		+view : DirectX::XMMATRIX
	}

	class Sprite::SpriteVertex {
		+uv : DirectX::XMFLOAT2
		+vertex : DirectX::XMFLOAT3
	}

	class Transform2D::Transform2DData {
		+model : DirectX::XMMATRIX
	}
}


namespace DX12Wrapper {
	class ConstantBuffer {
		+ConstantBuffer()
		+~ConstantBuffer()
		-_mappedData : BYTE*
		+GetGPUVirtualAddress() : D3D12_GPU_VIRTUAL_ADDRESS
		-CreateConstantBuffer(ID3D12Device& device, const UINT& bufferSize) : HRESULT
		-MapConstantBuffer(void* data, const UINT& bufferSize) : HRESULT
		+GetBuffer() : ID3D12Resource&
		-_constantBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_bufferSize : UINT
		+GetBufferSize() : UINT&
		+Create(ID3D12Device& device, void* data, const UINT& bufferSize) : Utility::RESULT
		+UpdateData(void* data) : void
	}

	class CubeRenderTarget {
		-_renderTargetData : CubeRenderTargetData
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, CubeRenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class DepthStencilBuffer {
		+DepthStencilBuffer()
		+~DepthStencilBuffer()
		+GetDepthStencilBufferData() : DepthStencilBufferData
		-_depthStencilBufferData : DepthStencilBufferData
		+GetBuffer() : ID3D12Resource&
		-_dsvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const DepthStencilBufferData& data) : Utility::RESULT
	}

	class DescriptorHeapCBV_SRV_UAV {
		+DescriptorHeapCBV_SRV_UAV()
		+~DescriptorHeapCBV_SRV_UAV()
		+GetGPUHandle() : CD3DX12_GPU_DESCRIPTOR_HANDLE
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartCBV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartSRV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartUAV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetSRVHandle(int index) : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		+GetDescriptorHeapAddress() : ID3D12DescriptorHeap*
		-_descriptorHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		-_registedCBVNum : UINT
		-_registedSRVNum : UINT
		-_registedUAVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+IsRegistedConstantBuffer() : bool
		+IsRegistedShaderResource() : bool
		+IsRegistedUnorderedAccessResource() : bool
		-{static} _MAX_CBV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_SRV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_UAV_DESCRIPTOR_NUM : static constexpr UINT
		+{static} NEXT_REGISTER : static constexpr int
		+RegistConstantBuffer(ID3D12Device& device, ConstantBuffer& constantBuffer, const int& registerNo) : void
		+RegistShaderResource(ID3D12Device& device, Texture& texture, ShaderResourceViewDesc& desc, const int& registerNo) : void
		+RegistUnorderedAccessResource(ID3D12Device& device, UnorderedAccessResource& unorderedAccessResource, const int& registerNo) : void
	}

	class DescriptorHeapDSV {
		+DescriptorHeapDSV()
		+~DescriptorHeapDSV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_dsvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_registedDSVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+RegistDescriptor(ID3D12Device& device, DepthStencilBuffer& buffer) : void
	}

	class DescriptorHeapRTV {
		+DescriptorHeapRTV()
		+~DescriptorHeapRTV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetNextCPUDescriptorHandle() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_rtvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_nextHandleLocation : UINT
		-_registedRTVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+{static} MAXDESCRIPTORNUM : static constexpr UINT
		+RegistDescriptor(ID3D12Device& device, RenderTargetBuffer& buffer, DXGI_FORMAT format, bool isCubeMap) : void
	}

	class Dx12GraphicsEngine {
		-Dx12GraphicsEngine()
		-~Dx12GraphicsEngine()
		-m_scissorRect : CD3DX12_RECT
		-m_viewport : CD3DX12_VIEWPORT
		+GetViewport() : CD3DX12_VIEWPORT&
		-_depthStencilBuffer : DX12Wrapper::DepthStencilBuffer
		-depthStencilBufferData : DX12Wrapper::DepthStencilBufferData
		-m_imguiHeap : DX12Wrapper::DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DX12Wrapper::DescriptorHeapDSV
		-_frameHeap : DX12Wrapper::DescriptorHeapRTV
		+GetFrameBufferDescriptorHeap() : DX12Wrapper::DescriptorHeapRTV&
		-_frameBuffers : DX12Wrapper::RenderTargetBuffer
		-m_renderContext : DX12Wrapper::RenderingContext
		+GetRenderingContext() : DX12Wrapper::RenderingContext&
		+{static} Instance() : Dx12GraphicsEngine&
		-CreateCommandX() : HRESULT
		-CreateDeviceAndDXGIFactory() : HRESULT
		-CreateFence() : HRESULT
		-CreateSwapChain(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight, const Microsoft::WRL::ComPtr<IDXGIFactory4>& dxgiFactory) : HRESULT
		-EnableDebugLayer() : HRESULT
		-_hwnd : HWND
		+CmdAllocator() : ID3D12CommandAllocator&
		+CmdQueue() : ID3D12CommandQueue&
		+Device() : ID3D12Device&
		+CmdList() : ID3D12GraphicsCommandList&
		+SwapChain() : IDXGISwapChain3&
		-_cmdAllocator : Microsoft::WRL::ComPtr<ID3D12CommandAllocator>
		-_cmdQueue : Microsoft::WRL::ComPtr<ID3D12CommandQueue>
		-_device : Microsoft::WRL::ComPtr<ID3D12Device>
		-_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-_cmdList : Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>
		-_dxgiFactory : Microsoft::WRL::ComPtr<IDXGIFactory4>
		-_swapchain : Microsoft::WRL::ComPtr<IDXGISwapChain3>
		-_fenceVal : UINT
		-_windowHeight : UINT
		-_windowWidth : UINT
		-CreateFrameRenderTarget() : Utility::RESULT
		+Init(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight) : Utility::RESULT
		-{static} DOUBLE_BUFFER : static constexpr UINT
		-m_graphicsMemory : std::unique_ptr<DirectX::GraphicsMemory>
		+BeginDraw() : void
		+EndDraw() : void
		+SetFrameRenderTarget(const CD3DX12_VIEWPORT& viewport, const CD3DX12_RECT& scissorRect) : void
	}

	class FontRenderer {
		+FontRenderer()
		+~FontRenderer()
		+{static} Instance() : FontRenderer&
		-m_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-m_fenceVal : UINT64
		+Init(const std::wstring& fontPath) : Utility::RESULT
		-m_spriteBatch : std::unique_ptr<DirectX::SpriteBatch>
		-m_spriteFont : std::unique_ptr<DirectX::SpriteFont>
		-m_fontHeap : std::unique_ptr<class DescriptorHeapCBV_SRV_UAV>
		+DrawString(const std::wstring& text, const DirectX::XMFLOAT2& pos, const float& scale, const DirectX::XMVECTORF32& color) : void
	}

	class GraphicsPipelineState {
		+GraphicsPipelineState()
		+~GraphicsPipelineState()
		-_pipelineStateDesc : D3D12_GRAPHICS_PIPELINE_STATE_DESC
		-CreateGraphicsPipelineState(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : HRESULT
		+GetPipelineState() : ID3D12PipelineState&
		-_pipelineState : Microsoft::WRL::ComPtr<ID3D12PipelineState>
		+Create(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : Utility::RESULT
	}

	class IndexBuffer {
		+IndexBuffer()
		+~IndexBuffer()
		-_indexBufferView : D3D12_INDEX_BUFFER_VIEW
		+GetView() : D3D12_INDEX_BUFFER_VIEW& {query}
		-CreateIndexBufferAndView(ID3D12Device& device, const std::vector<UINT>& index) : HRESULT
		-MapIndexBuffer(const std::vector<UINT>& index) : HRESULT
		-_indexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetIndexNum() : UINT {query}
		-_indexNum : UINT
		-_indexMap : UINT*
		+Create(ID3D12Device& device, const std::vector<UINT>& index) : Utility::RESULT
	}

	class RenderTarget {
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_renderTargetData : RenderTargetData
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, RenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class RenderTargetBuffer {
		+RenderTargetBuffer()
		+~RenderTargetBuffer()
		+GetBuffer() : ID3D12Resource&
		-_rtvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const RenderTargetBufferData& data) : Utility::RESULT
		+Create(ID3D12Device& device, IDXGISwapChain3& swapchain, const size_t& index) : Utility::RESULT
	}

	class RenderingContext {
		+RenderingContext()
		+~RenderingContext()
		-_cmdList : ID3D12GraphicsCommandList*
		+ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE dsvHandle, D3D12_CLEAR_FLAGS clearFlags, const FLOAT& clearDepth, const UINT8& clearStencil, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const DirectX::XMFLOAT4& color, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const float* color, const UINT& numRects, const D3D12_RECT* rects) : void
		+Close() : void
		+CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION& src, const D3D12_TEXTURE_COPY_LOCATION& dst, const UINT& dstX, const UINT& dstY, const UINT& dstZ, D3D12_BOX* srcBox) : void
		+DrawIndexedInstanced(const UINT& indexNumPerInstance, const UINT& instanceNum, const UINT startIndexLocation, const INT& baseVertexLocation, const UINT& startInstanceLocation) : void
		+DrawInstanced(const UINT& vertexNumPerInstance, const UINT& instanceNum, const UINT& startVertexLocation, const UINT& startInstanceLocation) : void
		+Init(ID3D12GraphicsCommandList& cmdList) : void
		+Reset(ID3D12CommandAllocator& cmdAlloc) : void
		+SetDescriptorHeap(ID3D12DescriptorHeap* const* descriptorHeap) : void
		+SetDescriptorHeap(DescriptorHeapCBV_SRV_UAV& descriptorHeap) : void
		+SetDescriptorHeaps(const UINT& descriptorHeapNum, ID3D12DescriptorHeap* const* descriptorHeaps) : void
		+SetGraphicsRootDescriptorTable(const UINT& rootPrameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE handle) : void
		+SetGraphicsRootSignature(RootSignature& rootSignature) : void
		+SetIndexBuffer(const IndexBuffer& indexBuffer) : void
		+SetPipelineState(GraphicsPipelineState& pipelineState) : void
		+SetPrimitiveTopology(const D3D12_PRIMITIVE_TOPOLOGY& primitiveTopology) : void
		+SetRenderTarget(const D3D12_CPU_DESCRIPTOR_HANDLE* rtvHandle, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetRenderTargets(const UINT& rtvNum, const D3D12_CPU_DESCRIPTOR_HANDLE rtvHandles, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetScissorRect(const D3D12_RECT& scissorRect) : void
		+SetScissorRects(const UINT& scissorRectNum, const D3D12_RECT& scissorRect) : void
		+SetVertexBuffer(const UINT& startSlot, const VertexBuffer& vertexBuffer) : void
		+SetViewport(const D3D12_VIEWPORT& viewport) : void
		+SetViewports(const UINT& viewportNum, const D3D12_VIEWPORT& viewports) : void
		+TransitionResourceState(ID3D12Resource& resource, D3D12_RESOURCE_STATES presentState, D3D12_RESOURCE_STATES afterState) : void
	}

	class RootSignature {
		+RootSignature()
		+~RootSignature()
		-CreateRootSignature(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : HRESULT
		+GetRootSignature() : ID3D12RootSignature& {query}
		-_rootSignature : Microsoft::WRL::ComPtr<ID3D12RootSignature>
		+Create(ID3D12Device& device, const RootSignatureData& data) : Utility::RESULT
		+Create(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : Utility::RESULT
	}

	class Shader {
		+Shader()
		+~Shader()
		-CompileShader(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderTypeAndVersion) : HRESULT
		+GetShader() : ID3DBlob& {query}
		-_errorBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		-_shaderBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		+Create(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType) : Utility::RESULT
		+Create(const ShaderData& shaderData) : Utility::RESULT
	}

	class Texture {
		+Texture()
		+~Texture()
		+GetImage() : DirectX::Image&
		-_scratchImage : DirectX::ScratchImage
		-_metaData : DirectX::TexMetadata
		+GetTexMetadata() : DirectX::TexMetadata&
		-CopyCubeTexture(Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CopyTexture(ID3D12Device& device, Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CreateUploadAndCubeTextureBuffer(ID3D12Device& device) : HRESULT
		-CreateUploadAndTextureBuffer(ID3D12Device& device) : HRESULT
		-LoadTextureFromDDSFile(const std::wstring& texturePath) : HRESULT
		-LoadTextureFromWICFile(const std::wstring& texturePath) : HRESULT
		-MapTexture() : HRESULT
		+GetBuffer() : ID3D12Resource& {query}
		-_textureBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_uploadBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+operator=(const Texture& inst) : Texture&
		+CreateCubeTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromConstantData(Dx12GraphicsEngine& graphicsEngine, uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : Utility::RESULT
		+CreateTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromWIC(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		-_image : const DirectX::Image*
		-_subresources : std::vector<D3D12_SUBRESOURCE_DATA>
		+CreateTextureFromDepthStencil(DepthStencilBuffer& depthStencilBuffer) : void
		+CreateTextureFromRenderTarget(RenderTargetBuffer& renderTargetBuffer) : void
		-SetTextureData(uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : void
	}

	class VertexBuffer {
		+VertexBuffer()
		+~VertexBuffer()
		-_vertexBufferView : D3D12_VERTEX_BUFFER_VIEW
		+GetView() : D3D12_VERTEX_BUFFER_VIEW& {query}
		-CreateVertexBufferAndView(ID3D12Device& device, const UINT& sizeInBytes, const UINT& stribeInBytes) : HRESULT
		-MapVertexBuffer(void* vertexData, const UINT& sizeInBytes) : HRESULT
		-_vertexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetVertexNum() : UINT {query}
		-_vertexNum : UINT
		+Create(ID3D12Device& device, void* vertexData, const UINT& sizeInBytes, const UINT& stribeInBytes) : Utility::RESULT
	}

	enum DESCRIPTORTYPE {
		DESCRIPTORTYPE_CBV
		DESCRIPTORTYPE_NUM
		DESCRIPTORTYPE_SRV
		DESCRIPTORTYPE_UAV
	}

	class CubeRenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+useDepth : bool
	}

	class DepthStencilBufferData {
		+DepthStencilBufferData(const DXGI_FORMAT& depthFormat, const UINT& width, const UINT& height, const float& clearDepth, const UINT8& clearStencil)
		+depthFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearStencil : UINT8
		+clearDepth : float
	}

	class DescriptorRangeData {
		+DescriptorRangeData(UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+cbvDescriptorNum : UINT
		+srvDescriptorNum : UINT
		+uavDescriptorNum : UINT
	}

	class InputLayout {
		+GetData() : D3D12_INPUT_ELEMENT_DESC*
		+{static} DefaultLayout() : InputLayout
		+GetSize() : UINT
		+inputElementDescs : std::vector<D3D12_INPUT_ELEMENT_DESC>
		+Append(const char* semanticName, UINT semanticIndex, DXGI_FORMAT format, UINT inputSlot, UINT alignedByteOffset, D3D12_INPUT_CLASSIFICATION inputSlotClass, UINT instanceDataStepRate) : void
	}

	class RenderTargetBufferData {
		+RenderTargetBufferData(const DXGI_FORMAT& colorFormat, const UINT& width, const UINT& height, const float (& clearColor ))
		+colorFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearColor : float
	}

	class RenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+isCubeMap : bool
		+useDepth : bool
	}

	class RootSignatureData {
		+RootSignatureData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW, UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+RootSignatureData(SamplerData samplerData, DescriptorRangeData descRangeData)
		+_descRangeData : DescriptorRangeData
		+_samplerData : SamplerData
	}

	class SamplerData {
		+SamplerData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW)
		+samplerFilter : D3D12_FILTER
		+addressU : D3D12_TEXTURE_ADDRESS_MODE
		+addressV : D3D12_TEXTURE_ADDRESS_MODE
		+addressW : D3D12_TEXTURE_ADDRESS_MODE
	}

	class ShaderData {
		+ShaderData(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType)
		+ShaderData()
		+shaderFilePass : const TCHAR*
		+entoryPointName : const char*
		+shaderType : const char*
	}

	class ShaderResourceViewDesc {
		+ShaderResourceViewDesc(Texture& texture, bool isCubeTex)
		+~ShaderResourceViewDesc()
		+desc : D3D12_SHADER_RESOURCE_VIEW_DESC
	}
}





/' Inheritance relationships '/

Framework.Canvas <|- - Game2048.GameSceneCanvas


Framework.Canvas <|- - Game2048.TitleSceneCanvas


Framework.GameImpl <|- - Game2048.Game2048


Framework.IComponent <|- - Framework.Button


Framework.IComponent <|- - Framework.Camera


Framework.IComponent <|- - Game2048.GameTimer


Framework.IComponent <|- - Game2048.Grid


Framework.IComponent <|- - Game2048.PressEnterText


Framework.IComponent <|- - Game2048.QuitButton


Framework.IComponent <|- - Framework.SpriteRenderer


Framework.IComponent <|- - Framework.Text


Framework.IComponent <|- - Game2048.Tile


Framework.IComponent <|- - Framework.Transform2D


Framework.IRenderer <|- - Framework.ButtonRenderer


Framework.IRenderer <|- - Game2048.Renderer


Framework.Scene <|- - Game2048.GameScene


Framework.Scene <|- - Game2048.TitleScene





/' Aggregation relationships '/

Framework.Button *- - Framework.SpriteRenderer


Framework.Button *- - Framework.Text


Framework.ButtonRenderer "2" *- - DX12Wrapper.GraphicsPipelineState


Framework.ButtonRenderer "2" *- - DX12Wrapper.RootSignature


Framework.Camera *- - DX12Wrapper.ConstantBuffer


Framework.Canvas *- - Framework.Object


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.CubeRenderTargetData


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.CubeRenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.DepthStencilBuffer *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderingContext


DX12Wrapper.FontRenderer *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


Framework.Game *- - Framework.GameImpl


Framework.Game *- - Framework.IRenderer


Framework.Game *- - Framework.Window


Game2048.Grid "3" *- - Framework.Object


Framework.IComponent o- - Framework.Object


Framework.InputSystem "2" *- - Framework.BUTTON_STATE


Framework.Object *- - Framework.IComponent


Framework.Object o- - Framework.Object


Framework.Object *- - Framework.Object


DX12Wrapper.RenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetData


DX12Wrapper.RenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.RenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.RenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.DescriptorRangeData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.SamplerData


Framework.Scene *- - Framework.Canvas


Framework.SceneManager *- - Framework.Scene


Framework.ShaderLibrary *- - Framework.SHADERTYPE


Framework.ShaderLibrary *- - DX12Wrapper.Shader


Framework.SoundManager *- - Framework.SoundClip


Framework.Sprite *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


Framework.Sprite *- - DX12Wrapper.IndexBuffer


Framework.Sprite *- - DX12Wrapper.Texture


Framework.Sprite *- - DX12Wrapper.VertexBuffer


Framework.SpriteRenderer *- - DX12Wrapper.ConstantBuffer


Framework.SpriteRenderer *- - DX12Wrapper.GraphicsPipelineState


Framework.SpriteRenderer *- - DX12Wrapper.RootSignature


Framework.SpriteRenderer *- - Framework.SPRITE_DRAW_MODE


Framework.SpriteRenderer *- - Framework.Sprite


Framework.Text *- - DX12Wrapper.FontRenderer


Game2048.Tile *- - DX12Wrapper.Texture


Framework.Transform2D *- - DX12Wrapper.ConstantBuffer






/' Nested objects '/

Framework.Camera +- - Framework.Camera::CameraData


Game2048.GameScene +- - Game2048.GameScene::DRAW_LAYER


Game2048.Grid +- - Game2048.Grid::GAME_STATE


Game2048.Grid +- - Game2048.Grid::INPUT_DIRECTION


Framework.Sprite +- - Framework.Sprite::SpriteVertex


Framework.SpriteRenderer +- - Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX


Framework.Transform2D +- - Framework.Transform2D::Transform2DData




@enduml

@startuml






namespace Game2048 {
	class Game2048 {
		+Game2048()
		+~Game2048()
		+Final() : void
		+Init() : void
	}

	class GameScene {
		+GameScene()
		+~GameScene()
		+Final() : void
		+Init() : void
	}

	class GameSceneCanvas {
		+GameSceneCanvas()
		+~GameSceneCanvas()
		+Final() : void
		+Init() : void
	}

	class GameTimer {
		+GameTimer(Framework::Object* owner)
		+~GameTimer()
		-m_elapsedTime : float
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class Grid {
		+Grid(Framework::Object* owner)
		+~Grid()
		-m_gameState : GAME_STATE
		-CheckInputDirection() : INPUT_DIRECTION
		-CheckGameClear() : bool
		-CheckGameOver() : bool
		-Move(INPUT_DIRECTION direction) : bool
		-Union(INPUT_DIRECTION direction) : bool
		-m_gridLeft : float
		-m_gridTop : float
		-m_randomEngine : std::mt19937_64
		-m_randomGenerator : std::uniform_real_distribution<>
		-m_gameClearText : std::unique_ptr<class Framework::Object>
		-m_gameOverText : std::unique_ptr<class Framework::Object>
		-m_tiles : std::vector<std::vector<std::unique_ptr<class Framework::Object>>>
		-m_grid : std::vector<std::vector<unsigned int>>
		+Draw() : void
		-GameClear(float deltaTime) : void
		-GameOver(float deltaTime) : void
		-Playing(float deltaTime) : void
		-SpawnTile(INPUT_DIRECTION direction) : void
		-TileDraw() : void
		+Update(float deltaTime) : void
		-UpdateTile(float deltaTime) : void
	}

	class PressEnterText {
		+PressEnterText(class Framework::Object* owner)
		+~PressEnterText()
		-m_elapsedTime : float
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class QuitButton {
		+QuitButton(class Framework::Object* owner)
		+~QuitButton()
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class Renderer {
		+Renderer()
		+~Renderer()
		+Init() : Utility::RESULT
		-RenderScene(const std::vector<std::unique_ptr<class Framework::Object>>& gameObjects) : void
		-RenderUI(const std::vector<std::unique_ptr<class Framework::Canvas>>& canvases) : void
	}

	class Tile {
		+Tile(Framework::Object* owner)
		+~Tile()
		-m_height : float
		-m_width : float
		-{static} m_tileTextures : static std::unordered_map<unsigned int, std::shared_ptr<DX12Wrapper::Texture>>
		+GetNumber() : unsigned int
		-m_number : unsigned int
		+Draw() : void
		+{static} LoadTileTextures() : void
		+SetGridPosition(unsigned int x, unsigned int y, float gridLeft, float gridTop) : void
		+SetNumber(unsigned int number) : void
		+SetScale(float width, float height) : void
		+Update(float deltaTime) : void
	}

	class TitleScene {
		+TitleScene()
		+~TitleScene()
		+Final() : void
		+Init() : void
	}

	class TitleSceneCanvas {
		+TitleSceneCanvas()
		+~TitleSceneCanvas()
		+Final() : void
		+Init() : void
	}

	enum GameScene::DRAW_LAYER {
		BACKGROUND
		GRID_BACKGROUND
		GRID_LINE
		TILE
		UI
	}

	enum Grid::GAME_STATE {
		GAME_CLEAR
		GAME_OVER
		PLAYING
	}

	enum Grid::INPUT_DIRECTION {
		DOWN
		LEFT
		NONE
		RIGHT
		UP
	}
}


namespace Framework {
	class Button {
		+Button(Object* owner)
		-function<void()
		+~Button()
		-CheckClick() : bool
		-m_spriteRenderer : std::unique_ptr<class SpriteRenderer>
		-m_text : std::unique_ptr<class Text>
		+Draw() : void
		+SetOnClick(const std::function<void ( )>& onClick) : void
		+SetPosition(float x, float y) : void
		+SetScale(float x, float y) : void
		+SetText(const std::wstring& text) : void
		+SetTexture(const std::wstring& path) : void
		+Update(float deltaTime) : void
	}

	class ButtonRenderer {
		+ButtonRenderer()
		+~ButtonRenderer()
		-CreateGraphicsPipelineState(ID3D12Device& device) : Utility::RESULT
		-CreateRootSignature(ID3D12Device& device) : Utility::RESULT
		+Init() : Utility::RESULT
		-m_pipelineState : std::unique_ptr<DX12Wrapper::GraphicsPipelineState>
		-m_pipelineState2 : std::unique_ptr<DX12Wrapper::GraphicsPipelineState>
		-m_rootSignature : std::unique_ptr<DX12Wrapper::RootSignature>
		-m_rootSignature2 : std::unique_ptr<DX12Wrapper::RootSignature>
		-Render() : void
	}

	class Camera {
		+Camera(Object* owner)
		+~Camera()
		-m_bufferData : CameraData
		+GetConstantBuffer() : DX12Wrapper::ConstantBuffer& {query}
		+GetProjectionMatrix() : DirectX::XMMATRIX {query}
		+GetViewMatrix() : DirectX::XMMATRIX {query}
		+GetFar() : float {query}
		+GetNear() : float {query}
		-m_far : float
		-m_near : float
		-m_cameraBuffer : std::unique_ptr<DX12Wrapper::ConstantBuffer>
		+Draw() : void
		+Update(float deltaTime) : void
	}

	abstract class Canvas {
		+Canvas()
		+~Canvas()
		#m_guiObjects : std::vector<std::unique_ptr<Object>>
		+Draw() : void
		+{abstract} Final() : void
		+{abstract} Init() : void
		+Update(float deltaTime) : void
	}

	class Game {
		+Game(GameImpl& gameImpl, IRenderer& renderer)
		+~Game()
		-m_gameImpl : GameImpl&
		-m_renderer : IRenderer&
		-m_window : Window
		-m_prevFrameTime : std::chrono::system_clock::time_point
		+Final() : void
		+Init() : void
		+Run() : void
	}

	abstract class GameImpl {
		+GameImpl()
		+~GameImpl()
		+{abstract} Final() : void
		+{abstract} Init() : void
	}

	abstract class IComponent {
		+IComponent(Object* owner)
		+~IComponent()
		#m_owner : Object*
		+{abstract} Draw() : void
		+{abstract} Update(float deltaTime) : void
	}

	abstract class IRenderer {
		+IRenderer()
		+~IRenderer()
		+{abstract} Init() : Utility::RESULT
		+Render(const class Scene* scene) : void
		-{abstract} RenderScene(const std::vector<std::unique_ptr<class Object>>& gameObjects) : void
		-{abstract} RenderUI(const std::vector<std::unique_ptr<class Canvas>>& canvases) : void
	}

	class InputSystem {
		+InputSystem()
		+~InputSystem()
		-m_keysState : BUTTON_STATE
		-m_mouseButtonState : BUTTON_STATE
		-m_currentKeys : BYTE
		-m_prevKeys : BYTE
		-m_currentMouse : DIMOUSESTATE
		-m_prevMouse : DIMOUSESTATE
		-SetupKeyboard(HWND& hwnd) : HRESULT
		-SetupMouse(HWND& hwnd) : HRESULT
		-m_hwnd : HWND
		+{static} Instance() : InputSystem&
		-m_directInputInterface : LPDIRECTINPUT8
		-m_keyboard : LPDIRECTINPUTDEVICE8
		-m_mouse : LPDIRECTINPUTDEVICE8
		+GetMousePosition() : POINT
		+Init(HWND& hwnd) : Utility::RESULT
		+GetKeyDown(Framework::BYTE keyCode) : bool
		+GetMouseButtonDown(MOUSECODE mouseCode) : bool
		-m_mouseWheelMovement : float
		-m_mouseXMovement : float
		-m_mouseYMovement : float
		+Update() : void
		-UpdateKeyStates() : void
		-UpdateMouseStates() : void
		+ViewMouseCursor() : void
	}

	class Object {
		+Object()
		+~Object()
		+Parent() : Object*
		#m_parent : Object*
		+AddComponent(Object* owner) : T*
		+GetComponent() : T*
		+GetActive() : bool
		#m_isActive : bool
		#m_components : std::vector<std::unique_ptr<IComponent>>
		#m_children : std::vector<std::unique_ptr<Object>>
		+AddChild(std::unique_ptr<Object>& child) : void
		+Draw() : void
		+SetActive(bool isActive) : void
		+SetParent(Object* parent) : void
		+Update(float deltaTime) : void
	}

	abstract class Scene {
		+Scene()
		+~Scene()
		+{static} GetCamera() : Camera&
		#m_isActive : bool
		#{static} m_cameraObject : static std::unique_ptr<GameObject>
		#m_canvases : std::vector<std::unique_ptr<Canvas>>
		+GetCanvases() : std::vector<std::unique_ptr<Canvas>>& {query}
		#m_gameObjects : std::vector<std::unique_ptr<GameObject>>
		+GetGameObjects() : std::vector<std::unique_ptr<GameObject>>& {query}
		+{abstract} Final() : void
		+{abstract} Init() : void
		+LateUpdate(float deltaTime) : void
		+SetActive(bool isActive) : void
		+Update(float deltaTime) : void
	}

	class SceneManager {
		-SceneManager()
		-~SceneManager()
		+{static} Instance() : SceneManager&
		-m_isSceneChanged : bool
		-m_activeSceneName : const char*
		-m_oldSceneName : const char*
		-m_scenes : std::unordered_map<const char*, std::unique_ptr<Scene>>
		+ActiveSceneDraw(class IRenderer& renderer) : void
		+ActiveSceneFinal() : void
		+ActiveSceneLateUpdate(float deltaTime) : void
		+ActiveSceneUpdate(float deltaTime) : void
		+AddScene(const char* name) : void
		+LoadScene(const char* name) : void
	}

	class ShaderLibrary {
		-ShaderLibrary()
		-~ShaderLibrary()
		+GetShader(const std::string& shaderTag) : DX12Wrapper::Shader*
		+{static} Instance() : ShaderLibrary&
		-_shaderTypeMap : std::unordered_map<SHADERTYPE, const char*>
		-_shaderMap : std::unordered_map<std::string, DX12Wrapper::Shader>
		+RegistShader(const TCHAR* shaderFileName, const std::string& shaderTag, SHADERTYPE shaderType, const char* entryPointName) : void
	}

	class SoundClip {
		+SoundClip()
		+~SoundClip()
		+PlayLoop() : void
		+PlayOneShot() : void
	}

	class SoundManager {
		-SoundManager()
		-~SoundManager()
		+{static} Instance() : SoundManager&
		-m_soundClips : std::vector<SoundClip>
		+PlayLoop(const char* name) : void
		+PlayOneShot(const char* name) : void
	}

	class Sprite {
		+Sprite(const std::wstring& path, SPRITE_PIVOT pivot)
		+~Sprite()
		+GetDescriptorHeap() : DX12Wrapper::DescriptorHeapCBV_SRV_UAV& {query}
		+GetIndexBuffer() : DX12Wrapper::IndexBuffer& {query}
		+GetVertexBuffer() : DX12Wrapper::VertexBuffer& {query}
		-m_texture : std::shared_ptr<DX12Wrapper::Texture>
		-m_descriptorHeap : std::unique_ptr<DX12Wrapper::DescriptorHeapCBV_SRV_UAV>
		-m_indexBuffer : std::unique_ptr<DX12Wrapper::IndexBuffer>
		-m_vertexBuffer : std::unique_ptr<DX12Wrapper::VertexBuffer>
		-m_vertex : std::vector<SpriteVertex>
		+LoadTexture(const std::wstring& path) : void
		+SetTexture(std::shared_ptr<DX12Wrapper::Texture>& texture) : void
	}

	class SpriteRenderer {
		+SpriteRenderer(Framework::Object* owner)
		+~SpriteRenderer()
		-m_drawMode : SPRITE_DRAW_MODE
		+CreateGraphicsPipelineState(ID3D12Device& device) : Utility::RESULT
		+CreateRootSignature(ID3D12Device& device) : Utility::RESULT
		-m_drawModeBuffer : std::unique_ptr<DX12Wrapper::ConstantBuffer>
		-m_pipelineState : std::unique_ptr<DX12Wrapper::GraphicsPipelineState>
		-m_rootSignature : std::unique_ptr<DX12Wrapper::RootSignature>
		-m_sprite : std::unique_ptr<class Sprite>
		+Draw() : void
		+SetDrawMode(SPRITE_DRAW_MODE drawMode) : void
		+SetLayer(UINT layer) : void
		+SetSprite(class Sprite* sprite) : void
		+Update(float deltaTime) : void
	}

	class Text {
		+Text(Object* owner)
		+~Text()
		-m_fontRenderer : DX12Wrapper::FontRenderer&
		-m_color : DirectX::XMVECTORF32
		-m_text : std::wstring
		+Draw() : void
		+SetColor(const DirectX::XMVECTORF32& color) : void
		+SetPosition(const DirectX::XMFLOAT2& position) : void
		+SetRotation(float angle) : void
		+SetScale(const float& scale) : void
		+SetText(const std::wstring& text) : void
		+Update(float deltaTime) : void
	}

	class Transform2D {
		+Transform2D(Object* owner)
		+~Transform2D()
		+GetConstantBuffer() : DX12Wrapper::ConstantBuffer&
		+position : DirectX::XMFLOAT2
		+scale : DirectX::XMFLOAT2
		+GetTransformMatrix() : DirectX::XMMATRIX
		-m_bufferData : Transform2DData
		+angle : float
		+depth : float
		-m_transformBuffer : std::unique_ptr<DX12Wrapper::ConstantBuffer>
		+Draw() : void
		+Update(float deltaTime) : void
	}

	class Window {
		+Window()
		+~Window()
		+{static} GetHwnd() : HWND&
		+{static} GetWindowSize() : SIZE
		-m_wndClassEx : WNDCLASSEX
		+DispatchWindowMessage() : bool
		-{static} m_hwnd : static HWND
		+Create(const TCHAR* windowName, LONG width, LONG height) : void
	}

	enum BUTTON_STATE {
		DOWN
		HOLD
		NONE
		UP
	}

	enum MOUSECODE {
		LEFT
		RIGHT
		WHEEL
	}

	enum SHADERTYPE {
		PIXEL
		VERTEX
	}

	enum SPRITE_DRAW_MODE {
		GAMEOBJECT
		GUI
	}

	enum SPRITE_PIVOT {
		CENTER
		TOP_LEFT
	}

	enum SpriteRenderer::CONSTANT_BUFFER_INDEX {
		BUFFER_COUNT
		CAMERA
		DRAW_MODE
		TRANSFORM
	}

	class Camera::CameraData {
		+projection : DirectX::XMMATRIX
		+view : DirectX::XMMATRIX
	}

	class Sprite::SpriteVertex {
		+uv : DirectX::XMFLOAT2
		+vertex : DirectX::XMFLOAT3
	}

	class Transform2D::Transform2DData {
		+model : DirectX::XMMATRIX
	}
}


namespace DX12Wrapper {
	class ConstantBuffer {
		+ConstantBuffer()
		+~ConstantBuffer()
		-_mappedData : BYTE*
		+GetGPUVirtualAddress() : D3D12_GPU_VIRTUAL_ADDRESS
		-CreateConstantBuffer(ID3D12Device& device, const UINT& bufferSize) : HRESULT
		-MapConstantBuffer(void* data, const UINT& bufferSize) : HRESULT
		+GetBuffer() : ID3D12Resource&
		-_constantBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_bufferSize : UINT
		+GetBufferSize() : UINT&
		+Create(ID3D12Device& device, void* data, const UINT& bufferSize) : Utility::RESULT
		+UpdateData(void* data) : void
	}

	class CubeRenderTarget {
		-_renderTargetData : CubeRenderTargetData
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, CubeRenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(CubeRenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class DepthStencilBuffer {
		+DepthStencilBuffer()
		+~DepthStencilBuffer()
		+GetDepthStencilBufferData() : DepthStencilBufferData
		-_depthStencilBufferData : DepthStencilBufferData
		+GetBuffer() : ID3D12Resource&
		-_dsvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const DepthStencilBufferData& data) : Utility::RESULT
	}

	class DescriptorHeapCBV_SRV_UAV {
		+DescriptorHeapCBV_SRV_UAV()
		+~DescriptorHeapCBV_SRV_UAV()
		+GetGPUHandle() : CD3DX12_GPU_DESCRIPTOR_HANDLE
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartCBV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartSRV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStartUAV() : D3D12_GPU_DESCRIPTOR_HANDLE
		+GetSRVHandle(int index) : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		+GetDescriptorHeapAddress() : ID3D12DescriptorHeap*
		-_descriptorHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		-_registedCBVNum : UINT
		-_registedSRVNum : UINT
		-_registedUAVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+IsRegistedConstantBuffer() : bool
		+IsRegistedShaderResource() : bool
		+IsRegistedUnorderedAccessResource() : bool
		-{static} _MAX_CBV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_SRV_DESCRIPTOR_NUM : static constexpr UINT
		-{static} _MAX_UAV_DESCRIPTOR_NUM : static constexpr UINT
		+{static} NEXT_REGISTER : static constexpr int
		+RegistConstantBuffer(ID3D12Device& device, ConstantBuffer& constantBuffer, const int& registerNo) : void
		+RegistShaderResource(ID3D12Device& device, Texture& texture, ShaderResourceViewDesc& desc, const int& registerNo) : void
		+RegistUnorderedAccessResource(ID3D12Device& device, UnorderedAccessResource& unorderedAccessResource, const int& registerNo) : void
	}

	class DescriptorHeapDSV {
		+DescriptorHeapDSV()
		+~DescriptorHeapDSV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_dsvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_registedDSVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+RegistDescriptor(ID3D12Device& device, DepthStencilBuffer& buffer) : void
	}

	class DescriptorHeapRTV {
		+DescriptorHeapRTV()
		+~DescriptorHeapRTV()
		+GetCPUDescriptorHandleForHeapStart() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetNextCPUDescriptorHandle() : D3D12_CPU_DESCRIPTOR_HANDLE
		+GetGPUDescriptorHandleForHeapStart() : D3D12_GPU_DESCRIPTOR_HANDLE
		-CreateDescriptorHeap(ID3D12Device& device) : HRESULT
		-_rtvHeap : Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>
		+GetHandleIncrimentSize() : SIZE_T
		-_handleIncrimentSize : SIZE_T
		+GetRegistedDescriptorNum() : UINT
		-_nextHandleLocation : UINT
		-_registedRTVNum : UINT
		+Create(ID3D12Device& device) : Utility::RESULT
		+{static} MAXDESCRIPTORNUM : static constexpr UINT
		+RegistDescriptor(ID3D12Device& device, RenderTargetBuffer& buffer, DXGI_FORMAT format, bool isCubeMap) : void
	}

	class Dx12GraphicsEngine {
		-Dx12GraphicsEngine()
		-~Dx12GraphicsEngine()
		-m_scissorRect : CD3DX12_RECT
		-m_viewport : CD3DX12_VIEWPORT
		+GetViewport() : CD3DX12_VIEWPORT&
		-_depthStencilBuffer : DX12Wrapper::DepthStencilBuffer
		-depthStencilBufferData : DX12Wrapper::DepthStencilBufferData
		-m_imguiHeap : DX12Wrapper::DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DX12Wrapper::DescriptorHeapDSV
		-_frameHeap : DX12Wrapper::DescriptorHeapRTV
		+GetFrameBufferDescriptorHeap() : DX12Wrapper::DescriptorHeapRTV&
		-_frameBuffers : DX12Wrapper::RenderTargetBuffer
		-m_renderContext : DX12Wrapper::RenderingContext
		+GetRenderingContext() : DX12Wrapper::RenderingContext&
		+{static} Instance() : Dx12GraphicsEngine&
		-CreateCommandX() : HRESULT
		-CreateDeviceAndDXGIFactory() : HRESULT
		-CreateFence() : HRESULT
		-CreateSwapChain(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight, const Microsoft::WRL::ComPtr<IDXGIFactory4>& dxgiFactory) : HRESULT
		-EnableDebugLayer() : HRESULT
		-_hwnd : HWND
		+CmdAllocator() : ID3D12CommandAllocator&
		+CmdQueue() : ID3D12CommandQueue&
		+Device() : ID3D12Device&
		+CmdList() : ID3D12GraphicsCommandList&
		+SwapChain() : IDXGISwapChain3&
		-_cmdAllocator : Microsoft::WRL::ComPtr<ID3D12CommandAllocator>
		-_cmdQueue : Microsoft::WRL::ComPtr<ID3D12CommandQueue>
		-_device : Microsoft::WRL::ComPtr<ID3D12Device>
		-_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-_cmdList : Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>
		-_dxgiFactory : Microsoft::WRL::ComPtr<IDXGIFactory4>
		-_swapchain : Microsoft::WRL::ComPtr<IDXGISwapChain3>
		-_fenceVal : UINT
		-_windowHeight : UINT
		-_windowWidth : UINT
		-CreateFrameRenderTarget() : Utility::RESULT
		+Init(const HWND& hwnd, const UINT& windowWidth, const UINT& windowHeight) : Utility::RESULT
		-{static} DOUBLE_BUFFER : static constexpr UINT
		-m_graphicsMemory : std::unique_ptr<DirectX::GraphicsMemory>
		+BeginDraw() : void
		+EndDraw() : void
		+SetFrameRenderTarget(const CD3DX12_VIEWPORT& viewport, const CD3DX12_RECT& scissorRect) : void
	}

	class FontRenderer {
		+FontRenderer()
		+~FontRenderer()
		+{static} Instance() : FontRenderer&
		-m_fence : Microsoft::WRL::ComPtr<ID3D12Fence>
		-m_fenceVal : UINT64
		+Init(const std::wstring& fontPath) : Utility::RESULT
		-m_spriteBatch : std::unique_ptr<DirectX::SpriteBatch>
		-m_spriteFont : std::unique_ptr<DirectX::SpriteFont>
		-m_fontHeap : std::unique_ptr<class DescriptorHeapCBV_SRV_UAV>
		+DrawString(const std::wstring& text, const DirectX::XMFLOAT2& pos, const float& scale, const DirectX::XMVECTORF32& color) : void
	}

	class GraphicsPipelineState {
		+GraphicsPipelineState()
		+~GraphicsPipelineState()
		-_pipelineStateDesc : D3D12_GRAPHICS_PIPELINE_STATE_DESC
		-CreateGraphicsPipelineState(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : HRESULT
		+GetPipelineState() : ID3D12PipelineState&
		-_pipelineState : Microsoft::WRL::ComPtr<ID3D12PipelineState>
		+Create(ID3D12Device& device, const D3D12_GRAPHICS_PIPELINE_STATE_DESC& piplineStateDesc) : Utility::RESULT
	}

	class IndexBuffer {
		+IndexBuffer()
		+~IndexBuffer()
		-_indexBufferView : D3D12_INDEX_BUFFER_VIEW
		+GetView() : D3D12_INDEX_BUFFER_VIEW& {query}
		-CreateIndexBufferAndView(ID3D12Device& device, const std::vector<UINT>& index) : HRESULT
		-MapIndexBuffer(const std::vector<UINT>& index) : HRESULT
		-_indexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetIndexNum() : UINT {query}
		-_indexNum : UINT
		-_indexMap : UINT*
		+Create(ID3D12Device& device, const std::vector<UINT>& index) : Utility::RESULT
	}

	class RenderTarget {
		-_depthStencilBuffer : DepthStencilBuffer
		-_textureHeap : DescriptorHeapCBV_SRV_UAV
		-_dsvHeap : DescriptorHeapDSV
		-_rtvHeap : DescriptorHeapRTV
		-_renderTargetBuffer : RenderTargetBuffer
		-_renderTargetData : RenderTargetData
		-_depthStencilTexture : Texture
		-_renderTargetTexture : Texture
		+GetDepthStencilTexture() : Texture&
		+GetRenderTargetTexture() : Texture&
		+Create(ID3D12Device& device, RenderTargetData& renderTargetData) : Utility::RESULT
		+{static} BeginMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+BeginRendering(RenderingContext& renderContext, CD3DX12_VIEWPORT& viewport, CD3DX12_RECT& scissorRect) : void
		+{static} EndMultiRendering(RenderTarget* renderTargets, const size_t& length, RenderingContext& renderContext) : void
		+EndRendering(RenderingContext& renderContext) : void
	}

	class RenderTargetBuffer {
		+RenderTargetBuffer()
		+~RenderTargetBuffer()
		+GetBuffer() : ID3D12Resource&
		-_rtvBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+Create(ID3D12Device& device, const RenderTargetBufferData& data) : Utility::RESULT
		+Create(ID3D12Device& device, IDXGISwapChain3& swapchain, const size_t& index) : Utility::RESULT
	}

	class RenderingContext {
		+RenderingContext()
		+~RenderingContext()
		-_cmdList : ID3D12GraphicsCommandList*
		+ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE dsvHandle, D3D12_CLEAR_FLAGS clearFlags, const FLOAT& clearDepth, const UINT8& clearStencil, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const DirectX::XMFLOAT4& color, const UINT& numRects, const D3D12_RECT* rects) : void
		+ClearRenderTarget(D3D12_CPU_DESCRIPTOR_HANDLE rtvHandle, const float* color, const UINT& numRects, const D3D12_RECT* rects) : void
		+Close() : void
		+CopyTextureRegion(const D3D12_TEXTURE_COPY_LOCATION& src, const D3D12_TEXTURE_COPY_LOCATION& dst, const UINT& dstX, const UINT& dstY, const UINT& dstZ, D3D12_BOX* srcBox) : void
		+DrawIndexedInstanced(const UINT& indexNumPerInstance, const UINT& instanceNum, const UINT startIndexLocation, const INT& baseVertexLocation, const UINT& startInstanceLocation) : void
		+DrawInstanced(const UINT& vertexNumPerInstance, const UINT& instanceNum, const UINT& startVertexLocation, const UINT& startInstanceLocation) : void
		+Init(ID3D12GraphicsCommandList& cmdList) : void
		+Reset(ID3D12CommandAllocator& cmdAlloc) : void
		+SetDescriptorHeap(ID3D12DescriptorHeap* const* descriptorHeap) : void
		+SetDescriptorHeap(DescriptorHeapCBV_SRV_UAV& descriptorHeap) : void
		+SetDescriptorHeaps(const UINT& descriptorHeapNum, ID3D12DescriptorHeap* const* descriptorHeaps) : void
		+SetGraphicsRootDescriptorTable(const UINT& rootPrameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE handle) : void
		+SetGraphicsRootSignature(RootSignature& rootSignature) : void
		+SetIndexBuffer(const IndexBuffer& indexBuffer) : void
		+SetPipelineState(GraphicsPipelineState& pipelineState) : void
		+SetPrimitiveTopology(const D3D12_PRIMITIVE_TOPOLOGY& primitiveTopology) : void
		+SetRenderTarget(const D3D12_CPU_DESCRIPTOR_HANDLE* rtvHandle, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetRenderTargets(const UINT& rtvNum, const D3D12_CPU_DESCRIPTOR_HANDLE rtvHandles, const D3D12_CPU_DESCRIPTOR_HANDLE* dsvHandle) : void
		+SetScissorRect(const D3D12_RECT& scissorRect) : void
		+SetScissorRects(const UINT& scissorRectNum, const D3D12_RECT& scissorRect) : void
		+SetVertexBuffer(const UINT& startSlot, const VertexBuffer& vertexBuffer) : void
		+SetViewport(const D3D12_VIEWPORT& viewport) : void
		+SetViewports(const UINT& viewportNum, const D3D12_VIEWPORT& viewports) : void
		+TransitionResourceState(ID3D12Resource& resource, D3D12_RESOURCE_STATES presentState, D3D12_RESOURCE_STATES afterState) : void
	}

	class RootSignature {
		+RootSignature()
		+~RootSignature()
		-CreateRootSignature(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : HRESULT
		+GetRootSignature() : ID3D12RootSignature& {query}
		-_rootSignature : Microsoft::WRL::ComPtr<ID3D12RootSignature>
		+Create(ID3D12Device& device, const RootSignatureData& data) : Utility::RESULT
		+Create(ID3D12Device& device, const DescriptorRangeData& descRangeData, const D3D12_STATIC_SAMPLER_DESC& samplerDescs, UINT samplerNum) : Utility::RESULT
	}

	class Shader {
		+Shader()
		+~Shader()
		-CompileShader(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderTypeAndVersion) : HRESULT
		+GetShader() : ID3DBlob& {query}
		-_errorBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		-_shaderBlob : Microsoft::WRL::ComPtr<ID3DBlob>
		+Create(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType) : Utility::RESULT
		+Create(const ShaderData& shaderData) : Utility::RESULT
	}

	class Texture {
		+Texture()
		+~Texture()
		+GetImage() : DirectX::Image&
		-_scratchImage : DirectX::ScratchImage
		-_metaData : DirectX::TexMetadata
		+GetTexMetadata() : DirectX::TexMetadata&
		-CopyCubeTexture(Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CopyTexture(ID3D12Device& device, Dx12GraphicsEngine& graphicsEngine) : HRESULT
		-CreateUploadAndCubeTextureBuffer(ID3D12Device& device) : HRESULT
		-CreateUploadAndTextureBuffer(ID3D12Device& device) : HRESULT
		-LoadTextureFromDDSFile(const std::wstring& texturePath) : HRESULT
		-LoadTextureFromWICFile(const std::wstring& texturePath) : HRESULT
		-MapTexture() : HRESULT
		+GetBuffer() : ID3D12Resource& {query}
		-_textureBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		-_uploadBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+operator=(const Texture& inst) : Texture&
		+CreateCubeTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromConstantData(Dx12GraphicsEngine& graphicsEngine, uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : Utility::RESULT
		+CreateTextureFromDDS(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		+CreateTextureFromWIC(Dx12GraphicsEngine& graphicsEngine, const std::wstring& texturePath) : Utility::RESULT
		-_image : const DirectX::Image*
		-_subresources : std::vector<D3D12_SUBRESOURCE_DATA>
		+CreateTextureFromDepthStencil(DepthStencilBuffer& depthStencilBuffer) : void
		+CreateTextureFromRenderTarget(RenderTargetBuffer& renderTargetBuffer) : void
		-SetTextureData(uint8_t* data, const size_t& stride, const size_t& dataNum, const size_t& width, const size_t& height, const DXGI_FORMAT& format) : void
	}

	class VertexBuffer {
		+VertexBuffer()
		+~VertexBuffer()
		-_vertexBufferView : D3D12_VERTEX_BUFFER_VIEW
		+GetView() : D3D12_VERTEX_BUFFER_VIEW& {query}
		-CreateVertexBufferAndView(ID3D12Device& device, const UINT& sizeInBytes, const UINT& stribeInBytes) : HRESULT
		-MapVertexBuffer(void* vertexData, const UINT& sizeInBytes) : HRESULT
		-_vertexBuffer : Microsoft::WRL::ComPtr<ID3D12Resource>
		+GetVertexNum() : UINT {query}
		-_vertexNum : UINT
		+Create(ID3D12Device& device, void* vertexData, const UINT& sizeInBytes, const UINT& stribeInBytes) : Utility::RESULT
	}

	enum DESCRIPTORTYPE {
		DESCRIPTORTYPE_CBV
		DESCRIPTORTYPE_NUM
		DESCRIPTORTYPE_SRV
		DESCRIPTORTYPE_UAV
	}

	class CubeRenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+useDepth : bool
	}

	class DepthStencilBufferData {
		+DepthStencilBufferData(const DXGI_FORMAT& depthFormat, const UINT& width, const UINT& height, const float& clearDepth, const UINT8& clearStencil)
		+depthFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearStencil : UINT8
		+clearDepth : float
	}

	class DescriptorRangeData {
		+DescriptorRangeData(UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+cbvDescriptorNum : UINT
		+srvDescriptorNum : UINT
		+uavDescriptorNum : UINT
	}

	class InputLayout {
		+GetData() : D3D12_INPUT_ELEMENT_DESC*
		+{static} DefaultLayout() : InputLayout
		+GetSize() : UINT
		+inputElementDescs : std::vector<D3D12_INPUT_ELEMENT_DESC>
		+Append(const char* semanticName, UINT semanticIndex, DXGI_FORMAT format, UINT inputSlot, UINT alignedByteOffset, D3D12_INPUT_CLASSIFICATION inputSlotClass, UINT instanceDataStepRate) : void
	}

	class RenderTargetBufferData {
		+RenderTargetBufferData(const DXGI_FORMAT& colorFormat, const UINT& width, const UINT& height, const float (& clearColor ))
		+colorFormat : DXGI_FORMAT
		+height : UINT
		+width : UINT
		+clearColor : float
	}

	class RenderTargetData {
		+depthStencilBufferData : DepthStencilBufferData
		+renderTargetBufferData : RenderTargetBufferData
		+isCubeMap : bool
		+useDepth : bool
	}

	class RootSignatureData {
		+RootSignatureData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW, UINT srvDescriptorNum, UINT cbvDescriptorNum, UINT uavDescriptorNum)
		+RootSignatureData(SamplerData samplerData, DescriptorRangeData descRangeData)
		+_descRangeData : DescriptorRangeData
		+_samplerData : SamplerData
	}

	class SamplerData {
		+SamplerData(D3D12_FILTER samplerFilter, D3D12_TEXTURE_ADDRESS_MODE addressU, D3D12_TEXTURE_ADDRESS_MODE addressV, D3D12_TEXTURE_ADDRESS_MODE addressW)
		+samplerFilter : D3D12_FILTER
		+addressU : D3D12_TEXTURE_ADDRESS_MODE
		+addressV : D3D12_TEXTURE_ADDRESS_MODE
		+addressW : D3D12_TEXTURE_ADDRESS_MODE
	}

	class ShaderData {
		+ShaderData(const TCHAR* shaderFilePass, const char* entoryPointName, const char* shaderType)
		+ShaderData()
		+shaderFilePass : const TCHAR*
		+entoryPointName : const char*
		+shaderType : const char*
	}

	class ShaderResourceViewDesc {
		+ShaderResourceViewDesc(Texture& texture, bool isCubeTex)
		+~ShaderResourceViewDesc()
		+desc : D3D12_SHADER_RESOURCE_VIEW_DESC
	}
}






Framework.Canvas <|- - Game2048.GameSceneCanvas


Framework.Canvas <|- - Game2048.TitleSceneCanvas


Framework.GameImpl <|- - Game2048.Game2048


Framework.IComponent <|- - Framework.Button


Framework.IComponent <|- - Framework.Camera


Framework.IComponent <|- - Game2048.GameTimer


Framework.IComponent <|- - Game2048.Grid


Framework.IComponent <|- - Game2048.PressEnterText


Framework.IComponent <|- - Game2048.QuitButton


Framework.IComponent <|- - Framework.SpriteRenderer


Framework.IComponent <|- - Framework.Text


Framework.IComponent <|- - Game2048.Tile


Framework.IComponent <|- - Framework.Transform2D


Framework.IRenderer <|- - Framework.ButtonRenderer


Framework.IRenderer <|- - Game2048.Renderer


Framework.Scene <|- - Game2048.GameScene


Framework.Scene <|- - Game2048.TitleScene






Framework.Button *- - Framework.SpriteRenderer


Framework.Button *- - Framework.Text


Framework.ButtonRenderer "2" *- - DX12Wrapper.GraphicsPipelineState


Framework.ButtonRenderer "2" *- - DX12Wrapper.RootSignature


Framework.Camera *- - DX12Wrapper.ConstantBuffer


Framework.Canvas *- - Framework.Object


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.CubeRenderTargetData


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.CubeRenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.CubeRenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.CubeRenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.DepthStencilBuffer *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.Dx12GraphicsEngine *- - DX12Wrapper.RenderingContext


DX12Wrapper.FontRenderer *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


Framework.Game *- - Framework.GameImpl


Framework.Game *- - Framework.IRenderer


Framework.Game *- - Framework.Window


Game2048.Grid "3" *- - Framework.Object


Framework.IComponent o- - Framework.Object


Framework.InputSystem "2" *- - Framework.BUTTON_STATE


Framework.Object *- - Framework.IComponent


Framework.Object o- - Framework.Object


Framework.Object *- - Framework.Object


DX12Wrapper.RenderTarget *- - DX12Wrapper.DepthStencilBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapDSV


DX12Wrapper.RenderTarget *- - DX12Wrapper.DescriptorHeapRTV


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetBuffer


DX12Wrapper.RenderTarget *- - DX12Wrapper.RenderTargetData


DX12Wrapper.RenderTarget "2" *- - DX12Wrapper.Texture


DX12Wrapper.RenderTargetData *- - DX12Wrapper.DepthStencilBufferData


DX12Wrapper.RenderTargetData *- - DX12Wrapper.RenderTargetBufferData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.DescriptorRangeData


DX12Wrapper.RootSignatureData *- - DX12Wrapper.SamplerData


Framework.Scene *- - Framework.Canvas


Framework.SceneManager *- - Framework.Scene


Framework.ShaderLibrary *- - Framework.SHADERTYPE


Framework.ShaderLibrary *- - DX12Wrapper.Shader


Framework.SoundManager *- - Framework.SoundClip


Framework.Sprite *- - DX12Wrapper.DescriptorHeapCBV_SRV_UAV


Framework.Sprite *- - DX12Wrapper.IndexBuffer


Framework.Sprite *- - DX12Wrapper.Texture


Framework.Sprite *- - DX12Wrapper.VertexBuffer


Framework.SpriteRenderer *- - DX12Wrapper.ConstantBuffer


Framework.SpriteRenderer *- - DX12Wrapper.GraphicsPipelineState


Framework.SpriteRenderer *- - DX12Wrapper.RootSignature


Framework.SpriteRenderer *- - Framework.SPRITE_DRAW_MODE


Framework.SpriteRenderer *- - Framework.Sprite


Framework.Text *- - DX12Wrapper.FontRenderer


Game2048.Tile *- - DX12Wrapper.Texture


Framework.Transform2D *- - DX12Wrapper.ConstantBuffer







Framework.Camera +- - Framework.Camera::CameraData


Game2048.GameScene +- - Game2048.GameScene::DRAW_LAYER


Game2048.Grid +- - Game2048.Grid::GAME_STATE


Game2048.Grid +- - Game2048.Grid::INPUT_DIRECTION


Framework.Sprite +- - Framework.Sprite::SpriteVertex


Framework.SpriteRenderer +- - Framework.SpriteRenderer::CONSTANT_BUFFER_INDEX


Framework.Transform2D +- - Framework.Transform2D::Transform2DData




@enduml

PlantUML version 1.2022.7(Tue Aug 23 02:01:30 JST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: MS932
Language: ja
Country: JP
--></g></svg>